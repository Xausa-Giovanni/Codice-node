[
    {
        "id": "9f7adaf3697a89c8",
        "type": "tab",
        "label": "CdC",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "14771c1e9a9adb72",
        "type": "tab",
        "label": "Manutenzione Esterna",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cdde5dc48b0f4dd0",
        "type": "tab",
        "label": "Manutenzione Ordinaria",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "65d25791f6b50219",
        "type": "tab",
        "label": "Dash Evaporatore INOXTECH",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d6a07ff22947c9d6",
        "type": "tab",
        "label": "Dash Caldai BONO",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8d153e4e01dc9bc6",
        "type": "tab",
        "label": "Dash Impianto Idirico",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f6f2bdebccc6eb71",
        "type": "tab",
        "label": "Dash Paranco FAS",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8a10c241be2dffac",
        "type": "tab",
        "label": "Dash Paranchi KITO",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a2e9bfc377f52fbe",
        "type": "tab",
        "label": "Dash Paranco MORRIS",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "342cd2c7e4e3b12f",
        "type": "tab",
        "label": "Dash Manut. Esterna",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1e480ff4e3a159cb",
        "type": "tab",
        "label": "Dash Manutenzione",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3efe85d54df4051a",
        "type": "tab",
        "label": "mySQL Manutenzione Esterna",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "25f19bdc3050b475",
        "type": "gauth",
        "name": "node-red@node-red-sheet-422209.iam.gserviceaccount.com"
    },
    {
        "id": "19a63d100b87adc7",
        "type": "ui-base",
        "name": "Dashboard",
        "path": "/dashboard",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "navigationStyle": "fixed",
        "titleBarStyle": "default"
    },
    {
        "id": "82f55174091ff4d8",
        "type": "ui-group",
        "name": "Manutenzione Impianto Idrico",
        "page": "fb1d24a339bb1150",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "8b93e7d805581bab",
        "type": "ui-page",
        "name": "Evaporatore INOXTECH",
        "ui": "19a63d100b87adc7",
        "path": "/page6",
        "icon": "weather-cloudy",
        "layout": "grid",
        "theme": "63c5def44ebd30ef",
        "order": 9,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "1755b6f79e670afd",
        "type": "ui-page",
        "name": "Paranco MORRIS",
        "ui": "19a63d100b87adc7",
        "path": "/page2",
        "icon": "elevator",
        "layout": "grid",
        "theme": "63c5def44ebd30ef",
        "order": 4,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "0f31a9627eaafebd",
        "type": "ui-group",
        "name": "Manutenzione Paranco MORRIS",
        "page": "1755b6f79e670afd",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "e9c675b996e9c711",
        "type": "ui-page",
        "name": "Paranchi KITO",
        "ui": "19a63d100b87adc7",
        "path": "/page1",
        "icon": "elevator",
        "layout": "grid",
        "theme": "63c5def44ebd30ef",
        "order": 5,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "aa9dd4a848f9fef2",
        "type": "ui-group",
        "name": "Manutenzione Paranchi KITO",
        "page": "e9c675b996e9c711",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "2bf279935f233366",
        "type": "ui-page",
        "name": "Paranco FAS",
        "ui": "19a63d100b87adc7",
        "path": "/page3",
        "icon": "elevator",
        "layout": "grid",
        "theme": "63c5def44ebd30ef",
        "order": 6,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "b2c746788e527ec4",
        "type": "ui-group",
        "name": "Manutenzione Paranco FAS",
        "page": "2bf279935f233366",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "fb1d24a339bb1150",
        "type": "ui-page",
        "name": "Impianto Idrico",
        "ui": "19a63d100b87adc7",
        "path": "/page4",
        "icon": "water",
        "layout": "grid",
        "theme": "63c5def44ebd30ef",
        "order": 7,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "70b43b96c003cea7",
        "type": "ui-group",
        "name": "Manutenzione Evaporatore INOXTECH",
        "page": "8b93e7d805581bab",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "c72412bb868ba423",
        "type": "ui-page",
        "name": "Caldaia BONO",
        "ui": "19a63d100b87adc7",
        "path": "/page5",
        "icon": "fire",
        "layout": "grid",
        "theme": "63c5def44ebd30ef",
        "order": 8,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "02d631378e343dbf",
        "type": "ui-group",
        "name": "Manutenzione Svolta",
        "page": "783bb4d768f6439c",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "63c5def44ebd30ef",
        "type": "ui-theme",
        "name": "Theme Name",
        "colors": {
            "surface": "#ffffff",
            "primary": "#0094ce",
            "bgPage": "#eeeeee",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        },
        "sizes": {
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    },
    {
        "id": "99748d6c3e297f46",
        "type": "ui-page",
        "name": "Operazioni Esterne",
        "ui": "19a63d100b87adc7",
        "path": "/page7",
        "icon": "cart-variant",
        "layout": "grid",
        "theme": "63c5def44ebd30ef",
        "order": 3,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "fefa1d931d830ed7",
        "type": "ui-group",
        "name": "Manutenzione Esterna Apparecchi Per Sollevamento",
        "page": "99748d6c3e297f46",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "b469cffee7dcaf9f",
        "type": "ui-page",
        "name": "Manutenzione",
        "ui": "19a63d100b87adc7",
        "path": "/page8",
        "icon": "home",
        "layout": "grid",
        "theme": "63c5def44ebd30ef",
        "order": 2,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "41835a3210e295ce",
        "type": "ui-group",
        "name": "Riepilogo Manutenzione",
        "page": "b469cffee7dcaf9f",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "783bb4d768f6439c",
        "type": "ui-page",
        "name": "Manutentori",
        "ui": "19a63d100b87adc7",
        "path": "/page9",
        "icon": "home",
        "layout": "grid",
        "theme": "63c5def44ebd30ef",
        "order": 1,
        "className": "",
        "visible": true,
        "disabled": "false"
    },
    {
        "id": "bbf90eaef78f08c1",
        "type": "ui-group",
        "name": "Manutenzione Caldaia BONO",
        "page": "c72412bb868ba423",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "7e47e4d301637e41",
        "type": "ui-text-input",
        "z": "9f7adaf3697a89c8",
        "group": "02d631378e343dbf",
        "name": "",
        "label": "Data & Ora",
        "order": 1,
        "width": "3",
        "height": "1",
        "topic": "payload",
        "topicType": "msg",
        "mode": "datetime-local",
        "delay": 300,
        "passthru": false,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "x": 290,
        "y": 40,
        "wires": [
            [
                "773d5415f8e53c3b"
            ]
        ]
    },
    {
        "id": "84c5d82d0fb54f39",
        "type": "ui-dropdown",
        "z": "9f7adaf3697a89c8",
        "group": "02d631378e343dbf",
        "name": "ID Macchina",
        "label": "ID Macchina",
        "tooltip": "",
        "order": 2,
        "width": "3",
        "height": "1",
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "SPM1",
                "type": "str"
            },
            {
                "label": "",
                "value": "SPM2",
                "type": "str"
            },
            {
                "label": "",
                "value": "RTC1",
                "type": "str"
            },
            {
                "label": "",
                "value": "RTC2",
                "type": "str"
            },
            {
                "label": "",
                "value": "RTC3",
                "type": "str"
            },
            {
                "label": "",
                "value": "GFC5",
                "type": "str"
            },
            {
                "label": "",
                "value": "GFC6",
                "type": "str"
            },
            {
                "label": "",
                "value": "GFC7",
                "type": "str"
            },
            {
                "label": "",
                "value": "EMS",
                "type": "str"
            },
            {
                "label": "",
                "value": "YOTTA",
                "type": "str"
            },
            {
                "label": "",
                "value": "CANON",
                "type": "str"
            },
            {
                "label": "",
                "value": "DURST",
                "type": "str"
            },
            {
                "label": "",
                "value": "Altro",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "payload",
        "topicType": "msg",
        "className": "",
        "x": 290,
        "y": 80,
        "wires": [
            [
                "e485912d0cc9f56b"
            ]
        ]
    },
    {
        "id": "e9925fc24310546e",
        "type": "ui-dropdown",
        "z": "9f7adaf3697a89c8",
        "group": "02d631378e343dbf",
        "name": "Bordo Macchina",
        "label": "Bordo Macchina",
        "tooltip": "",
        "order": 3,
        "width": "3",
        "height": "1",
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "Si",
                "type": "str"
            },
            {
                "label": "",
                "value": "No",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "payload",
        "topicType": "msg",
        "className": "",
        "x": 300,
        "y": 120,
        "wires": [
            [
                "dec23c7f4e9dd5a9"
            ]
        ]
    },
    {
        "id": "36701329faccae27",
        "type": "ui-dropdown",
        "z": "9f7adaf3697a89c8",
        "group": "02d631378e343dbf",
        "name": "Esterna",
        "label": "Esterna",
        "tooltip": "",
        "order": 4,
        "width": "3",
        "height": "1",
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "Si",
                "type": "str"
            },
            {
                "label": "",
                "value": "No",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "payload",
        "topicType": "msg",
        "className": "",
        "x": 280,
        "y": 160,
        "wires": [
            [
                "02395120aab5af27"
            ]
        ]
    },
    {
        "id": "93faed0c17c6cc2c",
        "type": "ui-text-input",
        "z": "9f7adaf3697a89c8",
        "group": "02d631378e343dbf",
        "name": "Descrizione Intervento",
        "label": "Descrizione Intervento",
        "order": 9,
        "width": "6",
        "height": "2",
        "topic": "payload",
        "topicType": "msg",
        "mode": "textarea",
        "delay": 300,
        "passthru": false,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": false,
        "className": "",
        "x": 320,
        "y": 360,
        "wires": [
            [
                "9109c40ed08ec0fc"
            ]
        ]
    },
    {
        "id": "54dbfae038874ca5",
        "type": "ui-text-input",
        "z": "9f7adaf3697a89c8",
        "group": "02d631378e343dbf",
        "name": "Ore complessive (h)",
        "label": "Ore complessive (h)",
        "order": 7,
        "width": "3",
        "height": "1",
        "topic": "payload",
        "topicType": "msg",
        "mode": "number",
        "delay": 300,
        "passthru": false,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "x": 320,
        "y": 280,
        "wires": [
            [
                "c6730024dbdb2d10"
            ]
        ]
    },
    {
        "id": "587bb1f1526dbdce",
        "type": "ui-dropdown",
        "z": "9f7adaf3697a89c8",
        "group": "02d631378e343dbf",
        "name": "N°Operatori",
        "label": "N°Operatori",
        "tooltip": "",
        "order": 5,
        "width": "3",
        "height": "1",
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "1",
                "type": "str"
            },
            {
                "label": "",
                "value": "2",
                "type": "str"
            },
            {
                "label": "",
                "value": "3",
                "type": "str"
            },
            {
                "label": "",
                "value": "4",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "payload",
        "topicType": "msg",
        "className": "",
        "x": 290,
        "y": 200,
        "wires": [
            [
                "140735145708b882"
            ]
        ]
    },
    {
        "id": "d971b06cb23fc93b",
        "type": "ui-text-input",
        "z": "9f7adaf3697a89c8",
        "group": "02d631378e343dbf",
        "name": "Ore Fermo Macchina (h)",
        "label": "Ore Fermo Macchina (h)",
        "order": 8,
        "width": "3",
        "height": "1",
        "topic": "payload",
        "topicType": "msg",
        "mode": "number",
        "delay": 300,
        "passthru": false,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "x": 330,
        "y": 320,
        "wires": [
            [
                "90b5aa422e9b606e"
            ]
        ]
    },
    {
        "id": "e425b050a894d665",
        "type": "ui-dropdown",
        "z": "9f7adaf3697a89c8",
        "group": "02d631378e343dbf",
        "name": "Nome Operatori",
        "label": "Nome Operatori",
        "tooltip": "",
        "order": 6,
        "width": "3",
        "height": "1",
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "",
                "value": "Mario Rossi",
                "type": "str"
            },
            {
                "label": "",
                "value": "Carlo Magno",
                "type": "str"
            },
            {
                "label": "",
                "value": "Ajeje Brazorf",
                "type": "str"
            },
            {
                "label": "",
                "value": "Pipino Il Breve",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "payload",
        "topicType": "msg",
        "className": "",
        "x": 300,
        "y": 240,
        "wires": [
            [
                "c1d7bb69a4a5655d"
            ]
        ]
    },
    {
        "id": "773d5415f8e53c3b",
        "type": "function",
        "z": "9f7adaf3697a89c8",
        "name": "1",
        "func": "// Assumendo che il payload contenga la stringa di data e ora\nvar dataOra = msg.payload;\n\n// Sostituisci la \"T\" con due spazi\ndataOra = dataOra.replace(\"T\", \"  \");\n\n// Crea un array con il primo valore impostato a 1 e il secondo valore impostato al payload modificato\nmsg.payload = [1, dataOra];\n\n// Restituisci il messaggio modificato\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 40,
        "wires": [
            [
                "7ec7e0934a372f62"
            ]
        ]
    },
    {
        "id": "7bc504c264338dab",
        "type": "ui-button",
        "z": "9f7adaf3697a89c8",
        "group": "02d631378e343dbf",
        "name": "",
        "label": "Fine",
        "order": 0,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "fatto",
        "payloadType": "str",
        "topic": "payload",
        "topicType": "flow",
        "x": 510,
        "y": 700,
        "wires": [
            [
                "f556308d3fa68d4b",
                "7ec7e0934a372f62"
            ]
        ]
    },
    {
        "id": "f556308d3fa68d4b",
        "type": "function",
        "z": "9f7adaf3697a89c8",
        "name": "Null",
        "func": "msg.client = null;\nmsg.object = null;\nmsg.payload = null;\nmsg.topic = null;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 110,
        "y": 200,
        "wires": [
            [
                "7e47e4d301637e41",
                "84c5d82d0fb54f39",
                "e9925fc24310546e",
                "36701329faccae27",
                "587bb1f1526dbdce",
                "e425b050a894d665",
                "54dbfae038874ca5",
                "d971b06cb23fc93b",
                "93faed0c17c6cc2c"
            ]
        ]
    },
    {
        "id": "e485912d0cc9f56b",
        "type": "function",
        "z": "9f7adaf3697a89c8",
        "name": "2",
        "func": "msg.payload = [2, msg.payload];\n\n// Restituisci il messaggio modificato\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 80,
        "wires": [
            [
                "7ec7e0934a372f62",
                "0724e20c7ad0344c"
            ]
        ]
    },
    {
        "id": "dec23c7f4e9dd5a9",
        "type": "function",
        "z": "9f7adaf3697a89c8",
        "name": "3",
        "func": "msg.payload = [3, msg.payload];\n\n// Restituisci il messaggio modificato\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 120,
        "wires": [
            [
                "7ec7e0934a372f62"
            ]
        ]
    },
    {
        "id": "02395120aab5af27",
        "type": "function",
        "z": "9f7adaf3697a89c8",
        "name": "4",
        "func": "msg.payload = [4, msg.payload];\n\n// Restituisci il messaggio modificato\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 160,
        "wires": [
            [
                "7ec7e0934a372f62"
            ]
        ]
    },
    {
        "id": "140735145708b882",
        "type": "function",
        "z": "9f7adaf3697a89c8",
        "name": "5",
        "func": "msg.payload = [5, msg.payload];\n\n// Restituisci il messaggio modificato\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 200,
        "wires": [
            [
                "7ec7e0934a372f62"
            ]
        ]
    },
    {
        "id": "c1d7bb69a4a5655d",
        "type": "function",
        "z": "9f7adaf3697a89c8",
        "name": "6",
        "func": "msg.payload = [6, msg.payload];\n\n// Restituisci il messaggio modificato\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 240,
        "wires": [
            [
                "7ec7e0934a372f62"
            ]
        ]
    },
    {
        "id": "c6730024dbdb2d10",
        "type": "function",
        "z": "9f7adaf3697a89c8",
        "name": "7",
        "func": "msg.payload = [7, msg.payload];\n\n// Restituisci il messaggio modificato\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 280,
        "wires": [
            [
                "7ec7e0934a372f62"
            ]
        ]
    },
    {
        "id": "90b5aa422e9b606e",
        "type": "function",
        "z": "9f7adaf3697a89c8",
        "name": "8",
        "func": "msg.payload = [8, msg.payload];\n\n// Restituisci il messaggio modificato\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 320,
        "wires": [
            [
                "7ec7e0934a372f62"
            ]
        ]
    },
    {
        "id": "9109c40ed08ec0fc",
        "type": "function",
        "z": "9f7adaf3697a89c8",
        "name": "9",
        "func": "msg.payload = [9, msg.payload];\n\n// Restituisci il messaggio modificato\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 360,
        "wires": [
            [
                "7ec7e0934a372f62"
            ]
        ]
    },
    {
        "id": "7ec7e0934a372f62",
        "type": "switch",
        "z": "9f7adaf3697a89c8",
        "name": "Check",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 890,
        "y": 200,
        "wires": [
            [
                "53e260862fefaa7d"
            ]
        ]
    },
    {
        "id": "53e260862fefaa7d",
        "type": "function",
        "z": "9f7adaf3697a89c8",
        "name": "Join",
        "func": "// Inizializza il contesto del nodo per memorizzare i valori dei payload\nvar joinedPayloads = context.get('joinedPayloads') || {\n    joinedPayload0: null,\n    joinedPayload1: null,\n    joinedPayload2: null,\n    joinedPayload3: null,\n    joinedPayload4: null,\n    joinedPayload5: null,\n    joinedPayload6: null,\n    joinedPayload7: null,\n    joinedPayload8: null,\n    joinedPayload9: null,\n    isDone: false\n};\n\n// Controlla se il payload corrente è \"fatto\"\nif (msg.payload === \"fatto\") {\n    joinedPayloads.isDone = true;\n} else {\n    // Aggiungi il payload corrente alla lista appropriata\n    switch (msg.payload[0]) {\n        case 1:\n            joinedPayloads.joinedPayload0 = msg.payload;\n            break;\n        case 2:\n            joinedPayloads.joinedPayload1 = msg.payload;\n            break;\n        case 3:\n            joinedPayloads.joinedPayload2 = msg.payload;\n            break;\n        case 4:\n            joinedPayloads.joinedPayload3 = msg.payload;\n            break;\n        case 5:\n            joinedPayloads.joinedPayload4 = msg.payload;\n            break;\n        case 6:\n            joinedPayloads.joinedPayload5 = msg.payload;\n            break;\n        case 7:\n            joinedPayloads.joinedPayload6 = msg.payload;\n            break;\n        case 8:\n            joinedPayloads.joinedPayload7 = msg.payload;\n            break;\n        case 9:\n            joinedPayloads.joinedPayload8 = msg.payload;\n            break;\n        case 10:\n            joinedPayloads.joinedPayload9 = msg.payload;\n            break;\n    }\n\n    // Salva il contesto aggiornato\n    context.set('joinedPayloads', joinedPayloads);\n\n    // Ritorna null perché non è ancora \"fatto\"\n    return null;\n}\n\n// Se è \"fatto\", crea l'array di output con i payload raccolti\nif (joinedPayloads.isDone) {\n    var outputPayload = [\n        joinedPayloads.joinedPayload0 ? joinedPayloads.joinedPayload0[1] : null,\n        joinedPayloads.joinedPayload1 ? joinedPayloads.joinedPayload1[1] : null,\n        joinedPayloads.joinedPayload2 ? joinedPayloads.joinedPayload2[1] : null,\n        joinedPayloads.joinedPayload3 ? joinedPayloads.joinedPayload3[1] : null,\n        joinedPayloads.joinedPayload4 ? joinedPayloads.joinedPayload4[1] : null,\n        joinedPayloads.joinedPayload5 ? (Array.isArray(joinedPayloads.joinedPayload5[1]) ? joinedPayloads.joinedPayload5[1].join(\", \") : joinedPayloads.joinedPayload5[1]) : null,\n        joinedPayloads.joinedPayload6 ? joinedPayloads.joinedPayload6[1] : null,\n        joinedPayloads.joinedPayload7 ? joinedPayloads.joinedPayload7[1] : null,\n        joinedPayloads.joinedPayload8 ? joinedPayloads.joinedPayload8[1] : null,\n        joinedPayloads.joinedPayload9 ? joinedPayloads.joinedPayload9[1] : null\n    ];\n\n\n    // Pulisci la memoria\n    context.set('joinedPayloads', null);\n\n    // Assegna l'output al payload\n    msg.payload = outputPayload;\n    return msg;\n}\n\n// Se non c'è nulla da fare, restituisci null\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 200,
        "wires": [
            [
                "33bb81ffce6a571a"
            ]
        ]
    },
    {
        "id": "33bb81ffce6a571a",
        "type": "GSheet",
        "z": "9f7adaf3697a89c8",
        "creds": "25f19bdc3050b475",
        "method": "append",
        "action": "",
        "sheet": "1Ad7UIvJrlw5lkWnCIvy5oZ0PhBkDVBg02pPSDjglE6k",
        "cells": "Storico!A1:J",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 1160,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "0724e20c7ad0344c",
        "type": "function",
        "z": "9f7adaf3697a89c8",
        "name": "10",
        "func": "\nvar Cdc = null; // Inizializza la variabile con un valore di default\nif (msg.payload && msg.payload.length > 1) {\n    switch (msg.payload[1]) {\n        case 'SPM1':\n            Cdc = 130;\n            break;\n        case 'SPM2':\n            Cdc = 130;\n            break;\n        case 'RTC1':\n            Cdc = 100;\n            break;\n        case 'RTC2':\n            Cdc = 100;\n            break;\n        case 'RTC3':\n            Cdc = 100;\n            break;\n        case 'GFC5':\n            Cdc = 110;\n            break;\n        case 'GFC6':\n            Cdc = 110;\n            break;\n        case 'GFC7':\n            Cdc = 110;\n            break;\n        case 'EMS':\n            Cdc = 110;\n            break;\n        case 'YOTTA':\n            Cdc = 102;\n            break;\n        case 'CANON':\n            Cdc = 102;\n            break;\n        case 'DURST':\n            Cdc = 102;\n            break;\n        case 'Altro':\n            Cdc = 1;\n            break;\n    }\n}\n\n// Crea l'array di output con il valore 10 e il valore associato al payload\nvar outputPayload = [10, Cdc];\n\n// Assegna l'output al payload\nmsg.payload = outputPayload;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 80,
        "wires": [
            [
                "7ec7e0934a372f62"
            ]
        ]
    },
    {
        "id": "702536ab33d1a2dc",
        "type": "GSheet",
        "z": "14771c1e9a9adb72",
        "creds": "25f19bdc3050b475",
        "method": "get",
        "action": "",
        "sheet": "1pE38j_rpq_xZByxyXqmWQfcIlOvFVYJRNQyRlBVDUbs",
        "cells": "Foglio1!A2:E10",
        "flatten": false,
        "name": "Acquisizione Manu. Esterna",
        "x": 300,
        "y": 140,
        "wires": [
            [
                "41a03a9aa78dc2b7"
            ]
        ]
    },
    {
        "id": "41a03a9aa78dc2b7",
        "type": "function",
        "z": "14771c1e9a9adb72",
        "name": "Separazione Scadenze",
        "func": "// Array per memorizzare i valori con il secondo elemento 2\nvar Odierne = [];\n\n// Array per memorizzare i valori con il secondo elemento 3\nvar Prossime = [];\n\n// Array per memorizzare i valori con il secondo elemento 1\nvar Scadute = [];\n\n// Array per memorizzare i valori con il secondo elemento 4\nvar FraMolto = [];\n\n// Array per memorizzare i valori con il secondo elemento 5\nvar Completate = [];\n\n// Copia del payload originale\nvar nuovoPayload = JSON.parse(JSON.stringify(msg.payload));\n\n// Scorrimento dell'array ricevuto nel payload\nfor (var i = 0; i < nuovoPayload.length; i++) {\n    var sottoArray = nuovoPayload[i];\n    if (sottoArray.length >= 4) { // Verifica se il sottoarray ha almeno 4 elementi\n        var nuovoSottoArray = [sottoArray[0], sottoArray[1], sottoArray[2], sottoArray[4]]; // Trattiene il primo, il Secondo e il terzo valore\n        if (sottoArray[3] == 2) {\n            Odierne.push(nuovoSottoArray);\n        } else if (sottoArray[3] == 3) {\n            Prossime.push(nuovoSottoArray);\n        } else if (sottoArray[3] == 1) {\n            Scadute.push(nuovoSottoArray);\n        } else if (sottoArray[3] == 4) {\n            FraMolto.push(nuovoSottoArray);\n        } else if (sottoArray[3] == 5) {\n            Completate.push(nuovoSottoArray);\n        }\n    }\n}\n\n// Costruisci il nuovo payload con i cinque array separati\nnuovoPayload = {\n    Odierne: Odierne,\n    Prossime: Prossime,\n    Scadute: Scadute,\n    FraMolto: FraMolto,\n    Completate: Completate\n};\n\n// Assegna il nuovo payload al messaggio\nmsg.payload = nuovoPayload;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 140,
        "wires": [
            [
                "14f1fb97854c5497"
            ]
        ]
    },
    {
        "id": "14f1fb97854c5497",
        "type": "function",
        "z": "14771c1e9a9adb72",
        "name": "Array non vuoti",
        "func": "// Verifica se arrayProssime non è vuoto\nvar prossimeNonVuote = msg.payload.Prossime && msg.payload.Prossime.length > 0;\n\n// Verifica se arrayOdierne non è vuoto\nvar odierneNonVuote = msg.payload.Odierne && msg.payload.Odierne.length > 0;\n\n// Verifica se arrayScadute non è vuoto\nvar scaduteNonVuote = msg.payload.Scadute && msg.payload.Scadute.length > 0;\n\n// Imposta la variabile Case in base alle condizioni\nvar Case;\nvar nuovoPayload = {};\n\nif (prossimeNonVuote && odierneNonVuote && scaduteNonVuote) {\n    Case = 0;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Prossime: msg.payload.Prossime,\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else if (prossimeNonVuote && odierneNonVuote) {\n    Case = 1;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (prossimeNonVuote && scaduteNonVuote) {\n    Case = 2;\n    nuovoPayload = {\n        Prossime: msg.payload.Prossime,\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else if (scaduteNonVuote && odierneNonVuote) {\n    Case = 3;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else if (odierneNonVuote) {\n    Case = 4;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Case: Case\n    };\n} else if (prossimeNonVuote) {\n    Case = 5;\n    nuovoPayload = {\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (scaduteNonVuote) {\n    Case = 6;\n    nuovoPayload = {\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else {\n    Case = 100; // Imposta Case a 100 quando tutti gli array sono vuoti\n    nuovoPayload = {\n        Case: Case\n    };\n}\n\nmsg.payload = nuovoPayload;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 140,
        "wires": [
            [
                "f8bf55579c33fed1"
            ]
        ]
    },
    {
        "id": "6ff3ae530831de06",
        "type": "switch",
        "z": "14771c1e9a9adb72",
        "name": "Smistamento",
        "property": "payload.Case",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 7,
        "x": 1070,
        "y": 140,
        "wires": [
            [
                "45dcedaece3b4f1a"
            ],
            [
                "74186b06d712f0d2"
            ],
            [
                "4d6fb06ac50f5fe3"
            ],
            [
                "b0b5e439d20db908"
            ],
            [
                "b031c8668118cbf5"
            ],
            [
                "2252bb2e53677e35"
            ],
            [
                "1f45a09c2f86334a"
            ]
        ]
    },
    {
        "id": "2252bb2e53677e35",
        "type": "function",
        "z": "14771c1e9a9adb72",
        "name": "tab Prossime",
        "func": "// Inizializza l'HTML della tabella \"Prossime\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"4\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Locazione</th><th>Descrizione</th><th style=\"width: auto;\">Scadenza</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[3] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Esterna Mezzi Di Sollevamento\"\nmsg.topic = \"Manutenzione Esterna Mezzi Di Sollevamento\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 220,
        "wires": [
            [
                "acd1f384f966ae26"
            ]
        ]
    },
    {
        "id": "b031c8668118cbf5",
        "type": "function",
        "z": "14771c1e9a9adb72",
        "name": "tab Odierne",
        "func": "// Inizializza l'HTML della tabella \"Odierne\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"4\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Locazione</th><th>Descrizione</th><th style=\"width: auto;\">Scadenza</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[3] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Esterna Mezzi Di Sollevamento\"\nmsg.topic = \"Manutenzione Esterna Mezzi Di Sollevamento\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 180,
        "wires": [
            [
                "acd1f384f966ae26"
            ]
        ]
    },
    {
        "id": "74186b06d712f0d2",
        "type": "function",
        "z": "14771c1e9a9adb72",
        "name": "tab Prossime-Odierne",
        "func": "// Inizializza l'HTML delle due sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"4\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Locazione</th><th>Descrizione</th><th style=\"width: auto;\">Scadenza</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[3] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Odierne\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"4\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Locazione</th><th>Descrizione</th><th style=\"width: auto;\">Scadenza</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[3] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Esterna Mezzi Di Sollevamento\"\nmsg.topic = \"Manutenzione Esterna Mezzi Di Sollevamento\";\n\n// Ritorna il messaggio\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 60,
        "wires": [
            [
                "acd1f384f966ae26"
            ]
        ]
    },
    {
        "id": "1f45a09c2f86334a",
        "type": "function",
        "z": "14771c1e9a9adb72",
        "name": "tab Scadute",
        "func": "// Inizializza l'HTML della tabella \"Scadute\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"4\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Locazione</th><th>Descrizione</th><th style=\"width: auto;\">Scadenza</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[3] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Esterna Mezzi Di Sollevamento\"\nmsg.topic = \"Manutenzione Esterna Mezzi Di Sollevamento\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 260,
        "wires": [
            [
                "acd1f384f966ae26"
            ]
        ]
    },
    {
        "id": "b0b5e439d20db908",
        "type": "function",
        "z": "14771c1e9a9adb72",
        "name": "tab Odierne-Scadute",
        "func": "// Inizializza l'HTML delle due sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"4\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Locazione</th><th>Descrizione</th><th style=\"width: auto;\">Scadenza</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[3] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Scadute\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"4\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Locazione</th><th>Descrizione</th><th style=\"width: auto;\">Scadenza</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[3] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Esterna Mezzi Di Sollevamento\"\nmsg.topic = \"Manutenzione Esterna Mezzi Di Sollevamento\";\n\n// Ritorna il messaggio\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 140,
        "wires": [
            [
                "acd1f384f966ae26"
            ]
        ]
    },
    {
        "id": "4d6fb06ac50f5fe3",
        "type": "function",
        "z": "14771c1e9a9adb72",
        "name": "tab Prossime-Scadute",
        "func": "// Inizializza l'HTML delle due sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"4\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Locazione</th><th>Descrizione</th><th style=\"width: auto;\">Scadenza</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[3] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Scadute\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"4\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Locazione</th><th>Descrizione</th><th style=\"width: auto;\">Scadenza</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[3] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Esterna Mezzi Di Sollevamento\"\nmsg.topic = \"Manutenzione Esterna Mezzi Di Sollevamento\";\n\n// Ritorna il messaggio\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 100,
        "wires": [
            [
                "acd1f384f966ae26"
            ]
        ]
    },
    {
        "id": "45dcedaece3b4f1a",
        "type": "function",
        "z": "14771c1e9a9adb72",
        "name": "Tab Odie-Pros-Scad",
        "func": "// Inizializza l'HTML delle tre sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"4\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Locazione</th><th>Descrizione</th><th style=\"width: auto;\">Scadenza</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[3] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Prossime\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"4\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Locazione</th><th>Descrizione</th><th style=\"width: auto;\">Scadenza</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[3] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Scadute\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"4\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Locazione</th><th>Descrizione</th><th style=\"width: auto;\">Scadenza</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[3] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Esterna Mezzi Di Sollevamento\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 20,
        "wires": [
            [
                "acd1f384f966ae26"
            ]
        ]
    },
    {
        "id": "f8bf55579c33fed1",
        "type": "switch",
        "z": "14771c1e9a9adb72",
        "name": "Filtro casi",
        "property": "payload.Case",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "0",
                "vt": "num",
                "v2": "6",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 920,
        "y": 140,
        "wires": [
            [
                "6ff3ae530831de06"
            ]
        ]
    },
    {
        "id": "acd1f384f966ae26",
        "type": "e-mail",
        "z": "14771c1e9a9adb72",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "gxausa.studenti@itslombardiameccatronica.it",
        "dname": "Mezzi di sollevamento",
        "x": 1620,
        "y": 140,
        "wires": []
    },
    {
        "id": "c68ce7a21a21f3af",
        "type": "inject",
        "z": "14771c1e9a9adb72",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * 1",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 140,
        "wires": [
            [
                "702536ab33d1a2dc"
            ]
        ]
    },
    {
        "id": "306c34be04a9464d",
        "type": "e-mail in",
        "z": "14771c1e9a9adb72",
        "name": "Risposta Luca",
        "protocol": "IMAP",
        "server": "imap.gmail.com",
        "useSSL": true,
        "autotls": "never",
        "port": "993",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "box": "INBOX",
        "disposition": "None",
        "criteria": "UNSEEN",
        "repeat": "10",
        "fetch": "auto",
        "inputs": 0,
        "x": 70,
        "y": 680,
        "wires": [
            [
                "dc815aa3f8af327f"
            ]
        ]
    },
    {
        "id": "dc815aa3f8af327f",
        "type": "switch",
        "z": "14771c1e9a9adb72",
        "name": "filtro mail",
        "property": "from",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "xausagiovanni@gmail.com",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 220,
        "y": 680,
        "wires": [
            [
                "397b91f14cc808df"
            ]
        ]
    },
    {
        "id": "397b91f14cc808df",
        "type": "switch",
        "z": "14771c1e9a9adb72",
        "name": "Filtro manutenzione",
        "property": "msg.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Esterna",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "esterna",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 680,
        "wires": [
            [
                "8e98da571e5a12ee"
            ],
            []
        ]
    },
    {
        "id": "633f4716b32f0842",
        "type": "function",
        "z": "14771c1e9a9adb72",
        "name": "Scrematura Dati",
        "func": "// Rimuovi gli spazi vuoti all'interno del topic e ottieni i valori\nvar valoriOggetto = msg.topic.trim().split(',');\n\n// Elimina il primo valore dall'oggetto\nvaloriOggetto.shift();\n\n// Ricomponi il topic senza il primo valore\nvar nuovoTopic = valoriOggetto.join(',');\n\n// Estrai la data corrente\nvar dataAttuale = new Date();\nvar dataFormattata = dataAttuale.toLocaleDateString();\n\n// Estrai i valori e le date dal testo della mail\nvar testoMail = msg.payload.trim(); // Rimuovi spazi bianchi all'inizio e alla fine\nvar valori = valoriOggetto.map(function(valore, index) {\n    var nota = ''; // Inizializza la nota vuota\n    // Se il testo della mail contiene più valori separati da virgola,\n    // cerca di estrarre la nota corrispondente al valore\n    if (testoMail) {\n        var note = testoMail.split(',');\n        nota = note[index] || ''; // Prendi la nota corrispondente al valore\n    }\n    return [valore.trim(), dataFormattata, nota.trim()]; // Restituisci il valore, la data e la nota\n});\n\n// Cancella tutte le altre variabili eccetto topic\ndelete msg.payload;\ndelete msg.date;\ndelete msg.header;\ndelete msg.html;\ndelete msg.from;\ndelete msg.attachments;\ndelete msg._msgid;\n\n// Assegna il nuovo payload al messaggio\nmsg.topic = nuovoTopic; // Aggiorna il topic senza il primo valore\nmsg.payload = valori;\n\n// Restituisci il messaggio per l'elaborazione successiva\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 660,
        "wires": [
            [
                "28d3486e47220044"
            ]
        ]
    },
    {
        "id": "434dde362c579a4a",
        "type": "e-mail in",
        "z": "14771c1e9a9adb72",
        "name": "Rimozione risposta",
        "protocol": "IMAP",
        "server": "imap.gmail.com",
        "useSSL": true,
        "autotls": "never",
        "port": "993",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "box": "INBOX",
        "disposition": "Read",
        "criteria": "UNSEEN",
        "repeat": "10",
        "fetch": "trigger",
        "inputs": 1,
        "x": 1150,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "28d3486e47220044",
        "type": "GSheet",
        "z": "14771c1e9a9adb72",
        "creds": "25f19bdc3050b475",
        "method": "append",
        "action": "",
        "sheet": "1pE38j_rpq_xZByxyXqmWQfcIlOvFVYJRNQyRlBVDUbs",
        "cells": "Storico!A:A",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 960,
        "y": 660,
        "wires": [
            [
                "434dde362c579a4a"
            ]
        ]
    },
    {
        "id": "4827db86bcefa3a4",
        "type": "GSheet",
        "z": "14771c1e9a9adb72",
        "creds": "25f19bdc3050b475",
        "method": "get",
        "action": "",
        "sheet": "1DUWVdK8mYgf2fyWfM8UlkbH3zdiUw88npunCR1PzoPI",
        "cells": "Foglio1!A2:E10",
        "flatten": false,
        "name": "Acquisizione Manu. Esterna",
        "x": 300,
        "y": 460,
        "wires": [
            [
                "a07eb6d51778f5ad"
            ]
        ]
    },
    {
        "id": "a07eb6d51778f5ad",
        "type": "function",
        "z": "14771c1e9a9adb72",
        "name": "Separazione Scadenze",
        "func": "// Array per memorizzare i valori con il secondo elemento 2\nvar Odierne = [];\n\n// Array per memorizzare i valori con il secondo elemento 3\nvar Prossime = [];\n\n// Array per memorizzare i valori con il secondo elemento 1\nvar Scadute = [];\n\n// Array per memorizzare i valori con il secondo elemento 4\nvar FraMolto = [];\n\n// Array per memorizzare i valori con il secondo elemento 5\nvar Completate = [];\n\n// Copia del payload originale\nvar nuovoPayload = JSON.parse(JSON.stringify(msg.payload));\n\n// Scorrimento dell'array ricevuto nel payload\nfor (var i = 0; i < nuovoPayload.length; i++) {\n    var sottoArray = nuovoPayload[i];\n    if (sottoArray.length >= 4) { // Verifica se il sottoarray ha almeno 4 elementi\n        var nuovoSottoArray = [sottoArray[0], sottoArray[1], sottoArray[2], sottoArray[4]]; // Trattiene il primo, il Secondo e il terzo valore\n        if (sottoArray[3] == 2) {\n            Odierne.push(nuovoSottoArray);\n        } else if (sottoArray[3] == 3) {\n            Prossime.push(nuovoSottoArray);\n        } else if (sottoArray[3] == 1) {\n            Scadute.push(nuovoSottoArray);\n        } else if (sottoArray[3] == 4) {\n            FraMolto.push(nuovoSottoArray);\n        } else if (sottoArray[3] == 5) {\n            Completate.push(nuovoSottoArray);\n        }\n    }\n}\n\n// Costruisci il nuovo payload con i cinque array separati\nnuovoPayload = {\n    Odierne: Odierne,\n    Prossime: Prossime,\n    Scadute: Scadute,\n    FraMolto: FraMolto,\n    Completate: Completate\n};\n\n// Assegna il nuovo payload al messaggio\nmsg.payload = nuovoPayload;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 460,
        "wires": [
            [
                "aba392841600c2ae"
            ]
        ]
    },
    {
        "id": "aba392841600c2ae",
        "type": "function",
        "z": "14771c1e9a9adb72",
        "name": "Array non vuoti",
        "func": "// Verifica se arrayProssime non è vuoto\nvar prossimeNonVuote = msg.payload.Prossime && msg.payload.Prossime.length > 0;\n\n// Verifica se arrayOdierne non è vuoto\nvar odierneNonVuote = msg.payload.Odierne && msg.payload.Odierne.length > 0;\n\n// Verifica se arrayScadute non è vuoto\nvar scaduteNonVuote = msg.payload.Scadute && msg.payload.Scadute.length > 0;\n\n// Imposta la variabile Case in base alle condizioni\nvar Case;\nvar nuovoPayload = {};\n\nif (prossimeNonVuote && odierneNonVuote && scaduteNonVuote) {\n    Case = 0;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Prossime: msg.payload.Prossime,\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else if (prossimeNonVuote && odierneNonVuote) {\n    Case = 1;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (prossimeNonVuote && scaduteNonVuote) {\n    Case = 2;\n    nuovoPayload = {\n        Prossime: msg.payload.Prossime,\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else if (scaduteNonVuote && odierneNonVuote) {\n    Case = 3;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else if (odierneNonVuote) {\n    Case = 4;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Case: Case\n    };\n} else if (prossimeNonVuote) {\n    Case = 5;\n    nuovoPayload = {\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (scaduteNonVuote) {\n    Case = 6;\n    nuovoPayload = {\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else {\n    Case = 100; // Imposta Case a 100 quando tutti gli array sono vuoti\n    nuovoPayload = {\n        Case: Case\n    };\n}\n\nmsg.payload = nuovoPayload;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 460,
        "wires": [
            [
                "630b0647c336be66"
            ]
        ]
    },
    {
        "id": "848996d38b935c92",
        "type": "switch",
        "z": "14771c1e9a9adb72",
        "name": "Smistamento",
        "property": "payload.Case",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 7,
        "x": 1070,
        "y": 460,
        "wires": [
            [
                "71137fd1e06e1fd3"
            ],
            [
                "3f595004417bf616"
            ],
            [
                "8a2324236f304b62"
            ],
            [
                "411f80fe01bef947"
            ],
            [
                "53d1c6f02759edb9"
            ],
            [
                "3f717a1bafa5b6ca"
            ],
            [
                "10265bf320b3173a"
            ]
        ]
    },
    {
        "id": "3f717a1bafa5b6ca",
        "type": "function",
        "z": "14771c1e9a9adb72",
        "name": "tab Prossime",
        "func": "// Inizializza l'HTML della tabella \"Prossime\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"4\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Locazione</th><th>Descrizione</th><th style=\"width: auto;\">Scadenza</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[3] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Esterna Mezzi Di Sollevamento\"\nmsg.topic = \"Manutenzione Esterna Apparecchi A Pressione\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 540,
        "wires": [
            [
                "b13a3fd764677ef1"
            ]
        ]
    },
    {
        "id": "53d1c6f02759edb9",
        "type": "function",
        "z": "14771c1e9a9adb72",
        "name": "tab Odierne",
        "func": "// Inizializza l'HTML della tabella \"Odierne\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"4\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Locazione</th><th>Descrizione</th><th style=\"width: auto;\">Scadenza</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[3] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Esterna Mezzi Di Sollevamento\"\nmsg.topic = \"Manutenzione Esterna Apparecchi A Pressione\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 500,
        "wires": [
            [
                "b13a3fd764677ef1"
            ]
        ]
    },
    {
        "id": "3f595004417bf616",
        "type": "function",
        "z": "14771c1e9a9adb72",
        "name": "tab Prossime-Odierne",
        "func": "// Inizializza l'HTML delle due sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"4\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Locazione</th><th>Descrizione</th><th style=\"width: auto;\">Scadenza</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[3] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Odierne\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"4\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Locazione</th><th>Descrizione</th><th style=\"width: auto;\">Scadenza</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[3] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Esterna Mezzi Di Sollevamento\"\nmsg.topic = \"Manutenzione Esterna Apparecchi A Pressione\";\n\n// Ritorna il messaggio\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 380,
        "wires": [
            [
                "b13a3fd764677ef1"
            ]
        ]
    },
    {
        "id": "10265bf320b3173a",
        "type": "function",
        "z": "14771c1e9a9adb72",
        "name": "tab Scadute",
        "func": "// Inizializza l'HTML della tabella \"Scadute\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"4\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Locazione</th><th>Descrizione</th><th style=\"width: auto;\">Scadenza</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[3] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Esterna Mezzi Di Sollevamento\"\nmsg.topic = \"Manutenzione Esterna Apparecchi A Pressione\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 580,
        "wires": [
            [
                "b13a3fd764677ef1"
            ]
        ]
    },
    {
        "id": "411f80fe01bef947",
        "type": "function",
        "z": "14771c1e9a9adb72",
        "name": "tab Odierne-Scadute",
        "func": "// Inizializza l'HTML delle due sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"4\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Locazione</th><th>Descrizione</th><th style=\"width: auto;\">Scadenza</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[3] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Scadute\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"4\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Locazione</th><th>Descrizione</th><th style=\"width: auto;\">Scadenza</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[3] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Esterna Mezzi Di Sollevamento\"\nmsg.topic = \"Manutenzione Esterna Apparecchi A Pressione\";\n\n// Ritorna il messaggio\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 460,
        "wires": [
            [
                "b13a3fd764677ef1"
            ]
        ]
    },
    {
        "id": "8a2324236f304b62",
        "type": "function",
        "z": "14771c1e9a9adb72",
        "name": "tab Prossime-Scadute",
        "func": "// Inizializza l'HTML delle due sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"4\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Locazione</th><th>Descrizione</th><th style=\"width: auto;\">Scadenza</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[3] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Scadute\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"4\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Locazione</th><th>Descrizione</th><th style=\"width: auto;\">Scadenza</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[3] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Esterna Mezzi Di Sollevamento\"\nmsg.topic = \"Manutenzione Esterna Apparecchi A Pressione\";\n\n// Ritorna il messaggio\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 420,
        "wires": [
            [
                "b13a3fd764677ef1"
            ]
        ]
    },
    {
        "id": "71137fd1e06e1fd3",
        "type": "function",
        "z": "14771c1e9a9adb72",
        "name": "Tab Odie-Pros-Scad",
        "func": "// Inizializza l'HTML delle tre sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"4\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Locazione</th><th>Descrizione</th><th style=\"width: auto;\">Scadenza</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[3] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Prossime\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"4\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Locazione</th><th>Descrizione</th><th style=\"width: auto;\">Scadenza</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[3] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Scadute\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"4\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Locazione</th><th>Descrizione</th><th style=\"width: auto;\">Scadenza</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[3] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Esterna Apparecchi A Pressione\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 340,
        "wires": [
            [
                "b13a3fd764677ef1"
            ]
        ]
    },
    {
        "id": "630b0647c336be66",
        "type": "switch",
        "z": "14771c1e9a9adb72",
        "name": "Filtro casi",
        "property": "payload.Case",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "0",
                "vt": "num",
                "v2": "6",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 920,
        "y": 460,
        "wires": [
            [
                "848996d38b935c92"
            ]
        ]
    },
    {
        "id": "b13a3fd764677ef1",
        "type": "e-mail",
        "z": "14771c1e9a9adb72",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "gxausa.studenti@itslombardiameccatronica.it",
        "dname": "Apparecchi A Pressione",
        "x": 1630,
        "y": 460,
        "wires": []
    },
    {
        "id": "c6093bac210d15a6",
        "type": "inject",
        "z": "14771c1e9a9adb72",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * 1",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 460,
        "wires": [
            [
                "4827db86bcefa3a4"
            ]
        ]
    },
    {
        "id": "8e98da571e5a12ee",
        "type": "switch",
        "z": "14771c1e9a9adb72",
        "name": "Filtro manutenzione",
        "property": "msg.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Sollevamento",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "sollevamento",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Pressione",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "pressione",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 590,
        "y": 680,
        "wires": [
            [
                "633f4716b32f0842"
            ],
            [
                "633f4716b32f0842"
            ],
            [
                "149457664c2d36fd"
            ],
            [
                "149457664c2d36fd"
            ]
        ]
    },
    {
        "id": "149457664c2d36fd",
        "type": "function",
        "z": "14771c1e9a9adb72",
        "name": "Scrematura Dati",
        "func": "// Rimuovi gli spazi vuoti all'interno del topic e ottieni i valori\nvar valoriOggetto = msg.topic.trim().split(',');\n\n// Elimina il primo valore dall'oggetto\nvaloriOggetto.shift();\n\n// Ricomponi il topic senza il primo valore\nvar nuovoTopic = valoriOggetto.join(',');\n\n// Estrai la data corrente\nvar dataAttuale = new Date();\nvar dataFormattata = dataAttuale.toLocaleDateString();\n\n// Estrai i valori e le date dal testo della mail\nvar testoMail = msg.payload.trim(); // Rimuovi spazi bianchi all'inizio e alla fine\nvar valori = valoriOggetto.map(function(valore, index) {\n    var nota = ''; // Inizializza la nota vuota\n    // Se il testo della mail contiene più valori separati da virgola,\n    // cerca di estrarre la nota corrispondente al valore\n    if (testoMail) {\n        var note = testoMail.split(',');\n        nota = note[index] || ''; // Prendi la nota corrispondente al valore\n    }\n    return [valore.trim(), dataFormattata, nota.trim()]; // Restituisci il valore, la data e la nota\n});\n\n// Cancella tutte le altre variabili eccetto topic\ndelete msg.payload;\ndelete msg.date;\ndelete msg.header;\ndelete msg.html;\ndelete msg.from;\ndelete msg.attachments;\ndelete msg._msgid;\n\n// Assegna il nuovo payload al messaggio\nmsg.topic = nuovoTopic; // Aggiorna il topic senza il primo valore\nmsg.payload = valori;\n\n// Restituisci il messaggio per l'elaborazione successiva\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 700,
        "wires": [
            [
                "b2f5121c937cfecc"
            ]
        ]
    },
    {
        "id": "b2f5121c937cfecc",
        "type": "GSheet",
        "z": "14771c1e9a9adb72",
        "creds": "25f19bdc3050b475",
        "method": "append",
        "action": "",
        "sheet": "1DUWVdK8mYgf2fyWfM8UlkbH3zdiUw88npunCR1PzoPI",
        "cells": "Storico!A:A",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 960,
        "y": 700,
        "wires": [
            [
                "5a20e44694279a44"
            ]
        ]
    },
    {
        "id": "5a20e44694279a44",
        "type": "e-mail in",
        "z": "14771c1e9a9adb72",
        "name": "Rimozione risposta",
        "protocol": "IMAP",
        "server": "imap.gmail.com",
        "useSSL": true,
        "autotls": "never",
        "port": "993",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "box": "INBOX",
        "disposition": "Read",
        "criteria": "UNSEEN",
        "repeat": "10",
        "fetch": "trigger",
        "inputs": 1,
        "x": 1150,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "aeed3e22a852c003",
        "type": "GSheet",
        "z": "cdde5dc48b0f4dd0",
        "creds": "25f19bdc3050b475",
        "method": "get",
        "action": "",
        "sheet": "1MDn3fgd9XlbG9dhuPdHE86jeKYoiOP010u4PtmFR9ho",
        "cells": "Foglio1!A2:D6",
        "flatten": false,
        "name": "Acquisizione Idrico",
        "x": 310,
        "y": 140,
        "wires": [
            [
                "0fb0ebf1033d2dc6"
            ]
        ]
    },
    {
        "id": "0fb0ebf1033d2dc6",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "Separazione Scadenze",
        "func": "// Array per memorizzare i valori con il secondo elemento 2\nvar Odierne = [];\n\n// Array per memorizzare i valori con il secondo elemento 3\nvar Prossime = [];\n\n// Array per memorizzare i valori con il secondo elemento 1\nvar Scadute = [];\n\n// Array per memorizzare i valori con il secondo elemento 4\nvar FraMolto = [];\n\n// Array per memorizzare i valori con il secondo elemento 5\nvar Completate = [];\n\n// Copia del payload originale\nvar nuovoPayload = JSON.parse(JSON.stringify(msg.payload));\n\n// Scorrimento dell'array ricevuto nel payload\nfor (var i = 0; i < nuovoPayload.length; i++) {\n    var sottoArray = nuovoPayload[i];\n    if (sottoArray.length >= 4) { // Verifica se il sottoarray ha almeno 4 elementi\n        var nuovoSottoArray = [sottoArray[0], sottoArray[2], sottoArray[3]]; // Trattiene il primo, il terzo e il quarto valore\n        if (sottoArray[1] == 2) {\n            Odierne.push(nuovoSottoArray);\n        } else if (sottoArray[1] == 3) {\n            Prossime.push(nuovoSottoArray);\n        } else if (sottoArray[1] == 1) {\n            Scadute.push(nuovoSottoArray);\n        } else if (sottoArray[1] == 4) {\n            FraMolto.push(nuovoSottoArray);\n        } else if (sottoArray[1] == 5) {\n            Completate.push(nuovoSottoArray);\n        }\n    }\n}\n\n// Costruisci il nuovo payload con i cinque array separati\nnuovoPayload = {\n    Odierne: Odierne,\n    Prossime: Prossime,\n    Scadute: Scadute,\n    FraMolto: FraMolto,\n    Completate: Completate\n};\n\n// Assegna il nuovo payload al messaggio\nmsg.payload = nuovoPayload;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 140,
        "wires": [
            [
                "cda69af6e967e51e"
            ]
        ]
    },
    {
        "id": "cda69af6e967e51e",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "Array non vuoti",
        "func": "// Verifica se arrayProssime non è vuoto\nvar prossimeNonVuote = msg.payload.Prossime && msg.payload.Prossime.length > 0;\n\n// Verifica se arrayOdierne non è vuoto\nvar odierneNonVuote = msg.payload.Odierne && msg.payload.Odierne.length > 0;\n\n// Verifica se arrayScadute non è vuoto\nvar scaduteNonVuote = msg.payload.Scadute && msg.payload.Scadute.length > 0;\n\n// Copia del payload originale\nvar nuovoPayload = JSON.parse(JSON.stringify(msg.payload));\n\n// Imposta la variabile di uscita in base alle condizioni\nvar Case;\nvar nuovoPayload;\n\nif (prossimeNonVuote && odierneNonVuote && scaduteNonVuote) {\n    Case = 0;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Prossime: msg.payload.Prossime,\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else if (prossimeNonVuote && odierneNonVuote) {\n    Case = 1;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (prossimeNonVuote && scaduteNonVuote) {\n    Case = 2;\n    nuovoPayload = {\n        Scadute: msg.payload.Scadute,\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (scaduteNonVuote && odierneNonVuote) {\n    Case = 3;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else if (odierneNonVuote) {\n    Case = 4;\n    delete msg.payload.Prossime;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Case: Case\n    };\n} else if (prossimeNonVuote) {\n    Case = 5;\n    delete msg.payload.Odierne;\n    nuovoPayload = {\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (scaduteNonVuote) {\n    Case = 6;\n    nuovoPayload = {\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else {\n    Case = 100; // Imposta Case a 100 quando tutti gli array sono vuoti\n    nuovoPayload = {\n        Case: Case\n    };\n}\n\nmsg.payload = nuovoPayload;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 140,
        "wires": [
            [
                "91b1ab7795fffc1a"
            ]
        ]
    },
    {
        "id": "99e17fa2978ce8e7",
        "type": "switch",
        "z": "cdde5dc48b0f4dd0",
        "name": "Smistamento",
        "property": "payload.Case",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 7,
        "x": 1090,
        "y": 140,
        "wires": [
            [
                "815e715b4ecf16c2"
            ],
            [
                "99c320ddf2e896f8"
            ],
            [
                "28319e826e45fc82"
            ],
            [
                "81a30c6182e598ec"
            ],
            [
                "f18d1736b4130707"
            ],
            [
                "29a9f3c4285d2b5c"
            ],
            [
                "98f7c347e622788b"
            ]
        ]
    },
    {
        "id": "9e25d4b86fc016ae",
        "type": "e-mail",
        "z": "cdde5dc48b0f4dd0",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "gxausa.studenti@itslombardiameccatronica.it",
        "dname": "Impianto idrico",
        "x": 1660,
        "y": 140,
        "wires": []
    },
    {
        "id": "29a9f3c4285d2b5c",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Prossime",
        "func": "// Inizializza l'HTML della tabella con il titolo \"Prossime\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Determina il numero di righe in \"Prossime\"\nvar numRows = msg.payload.Prossime ? msg.payload.Prossime.length : 0;\n\n// Itera attraverso le righe di \"Prossime\"\nfor (var i = 0; i < numRows; i++) {\n    // Prendi i valori dall'array \"Prossime\"\n    var rowData = msg.payload.Prossime[i];\n\n    // Aggiungi una riga alla tabella con i valori delle tre colonne\n    htmlTable += '<tr>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n    htmlTable += '</tr>';\n}\n\n// Chiudi la tabella\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Impianto Idrico\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 220,
        "wires": [
            [
                "9e25d4b86fc016ae"
            ]
        ]
    },
    {
        "id": "f18d1736b4130707",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Odierne",
        "func": "// Inizializza l'HTML della tabella con il titolo \"Odierne\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Determina il numero di righe in \"Odierne\"\nvar numRows = msg.payload.Odierne ? msg.payload.Odierne.length : 0;\n\n// Itera attraverso le righe di \"Odierne\"\nfor (var i = 0; i < numRows; i++) {\n    var rowData = msg.payload.Odierne[i]; // Prendi i valori dall'array \"Odierne\"\n    var cellaOdierneID = rowData[0]; // ID\n    var cellaOdierneIntervento = rowData[1]; // Intervento\n    var cellaOdierneDescrizione = rowData[2]; // Descrizione\n\n    htmlTable += '<tr>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + cellaOdierneID + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + cellaOdierneIntervento + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + cellaOdierneDescrizione + '</td>';\n    htmlTable += '</tr>';\n}\n\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Impianto Idrico\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 180,
        "wires": [
            [
                "9e25d4b86fc016ae"
            ]
        ]
    },
    {
        "id": "99c320ddf2e896f8",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Prossime-Odierne",
        "func": "// Inizializza l'HTML delle due tabelle per \"Odierne\" e \"Prossime\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Aggiungi la seconda tabella per \"Prossime\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Impianto Idrico\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 60,
        "wires": [
            [
                "9e25d4b86fc016ae"
            ]
        ]
    },
    {
        "id": "98f7c347e622788b",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Scadute",
        "func": "// Inizializza l'HTML della tabella per \"Scadute\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Determina il numero di righe in \"Scadute\"\nvar numRows = msg.payload.Scadute ? msg.payload.Scadute.length : 0;\n\n// Itera attraverso le righe di \"Scadute\"\nfor (var i = 0; i < numRows; i++) {\n    var rowData = msg.payload.Scadute[i]; // Prendi i valori dall'array \"Scadute\"\n    \n    htmlTable += '<tr>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n    htmlTable += '</tr>';\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Impianto Idrico\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 260,
        "wires": [
            [
                "9e25d4b86fc016ae"
            ]
        ]
    },
    {
        "id": "81a30c6182e598ec",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Odierne-Scadute",
        "func": "// Inizializza l'HTML delle due sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Scadute\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Impianto Idrico\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 140,
        "wires": [
            [
                "9e25d4b86fc016ae"
            ]
        ]
    },
    {
        "id": "28319e826e45fc82",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Prossime-Scadute",
        "func": "// Inizializza l'HTML delle due sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Scadute\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Impianto Idrico\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 100,
        "wires": [
            [
                "9e25d4b86fc016ae"
            ]
        ]
    },
    {
        "id": "815e715b4ecf16c2",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "Tab Odie-Pros-Scad",
        "func": "// Inizializza l'HTML delle tre sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Prossime\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Scadute\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Impianto Idrico\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 20,
        "wires": [
            [
                "9e25d4b86fc016ae"
            ]
        ]
    },
    {
        "id": "def7bf94eea13d5d",
        "type": "comment",
        "z": "cdde5dc48b0f4dd0",
        "name": "Acquisizione e Comunicazione",
        "info": "in questa sezione si vanno ad acquisire\ni dati da ogni Gsheet , vengono poi \nraffinati nei primi due blocchi \nfunzio",
        "x": 130,
        "y": 20,
        "wires": []
    },
    {
        "id": "91b1ab7795fffc1a",
        "type": "switch",
        "z": "cdde5dc48b0f4dd0",
        "name": "Filtro casi1",
        "property": "payload.Case",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "0",
                "vt": "num",
                "v2": "6",
                "v2t": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 910,
        "y": 140,
        "wires": [
            [
                "99e17fa2978ce8e7"
            ]
        ]
    },
    {
        "id": "7691c8f155a3ce3c",
        "type": "GSheet",
        "z": "cdde5dc48b0f4dd0",
        "creds": "25f19bdc3050b475",
        "method": "get",
        "action": "",
        "sheet": "1lcvlmQaZ99HBOnXqW1kvxI0D_GO7pMz_KnkNKz5ntgo",
        "cells": "Foglio1!A2:D29",
        "flatten": false,
        "name": "Acquisizione KITO",
        "x": 310,
        "y": 460,
        "wires": [
            [
                "8a88b68b8e7939e5"
            ]
        ]
    },
    {
        "id": "8a88b68b8e7939e5",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "Separazione Scadenze",
        "func": "// Array per memorizzare i valori con il secondo elemento 2\nvar Odierne = [];\n\n// Array per memorizzare i valori con il secondo elemento 3\nvar Prossime = [];\n\n// Array per memorizzare i valori con il secondo elemento 1\nvar Scadute = [];\n\n// Array per memorizzare i valori con il secondo elemento 4\nvar FraMolto = [];\n\n// Array per memorizzare i valori con il secondo elemento 5\nvar Completate = [];\n\n// Copia del payload originale\nvar nuovoPayload = JSON.parse(JSON.stringify(msg.payload));\n\n// Scorrimento dell'array ricevuto nel payload\nfor (var i = 0; i < nuovoPayload.length; i++) {\n    var sottoArray = nuovoPayload[i];\n    if (sottoArray.length >= 4) { // Verifica se il sottoarray ha almeno 4 elementi\n        var nuovoSottoArray = [sottoArray[0], sottoArray[2], sottoArray[3]]; // Trattiene il primo, il terzo e il quarto valore\n        if (sottoArray[1] == 2) {\n            Odierne.push(nuovoSottoArray);\n        } else if (sottoArray[1] == 3) {\n            Prossime.push(nuovoSottoArray);\n        } else if (sottoArray[1] == 1) {\n            Scadute.push(nuovoSottoArray);\n        } else if (sottoArray[1] == 4) {\n            FraMolto.push(nuovoSottoArray);\n        } else if (sottoArray[1] == 5) {\n            Completate.push(nuovoSottoArray);\n        }\n    }\n}\n\n// Costruisci il nuovo payload con i cinque array separati\nnuovoPayload = {\n    Odierne: Odierne,\n    Prossime: Prossime,\n    Scadute: Scadute,\n    FraMolto: FraMolto,\n    Completate: Completate\n};\n\n// Assegna il nuovo payload al messaggio\nmsg.payload = nuovoPayload;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 460,
        "wires": [
            [
                "7d95fca1306ff55d"
            ]
        ]
    },
    {
        "id": "7d95fca1306ff55d",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "Array non vuoti",
        "func": "// Verifica se arrayProssime non è vuoto\nvar prossimeNonVuote = msg.payload.Prossime && msg.payload.Prossime.length > 0;\n\n// Verifica se arrayOdierne non è vuoto\nvar odierneNonVuote = msg.payload.Odierne && msg.payload.Odierne.length > 0;\n\n// Verifica se arrayScadute non è vuoto\nvar scaduteNonVuote = msg.payload.Scadute && msg.payload.Scadute.length > 0;\n\n// Copia del payload originale\nvar nuovoPayload = JSON.parse(JSON.stringify(msg.payload));\n\n// Imposta la variabile di uscita in base alle condizioni\nvar Case;\nvar nuovoPayload;\n\nif (prossimeNonVuote && odierneNonVuote && scaduteNonVuote) {\n    Case = 0;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Prossime: msg.payload.Prossime,\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else if (prossimeNonVuote && odierneNonVuote) {\n    Case = 1;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (prossimeNonVuote && scaduteNonVuote) {\n    Case = 2;\n    nuovoPayload = {\n        Scadute: msg.payload.Scadute,\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (scaduteNonVuote && odierneNonVuote) {\n    Case = 3;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else if (odierneNonVuote) {\n    Case = 4;\n    delete msg.payload.Prossime;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Case: Case\n    };\n} else if (prossimeNonVuote) {\n    Case = 5;\n    delete msg.payload.Odierne;\n    nuovoPayload = {\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (scaduteNonVuote) {\n    Case = 6;\n    nuovoPayload = {\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else {\n    Case = 100; // Imposta Case a 100 quando tutti gli array sono vuoti\n    nuovoPayload = {\n        Case: Case\n    };\n}\n\nmsg.payload = nuovoPayload;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 460,
        "wires": [
            [
                "22e235a3a859b710"
            ]
        ]
    },
    {
        "id": "154da1a0df935593",
        "type": "switch",
        "z": "cdde5dc48b0f4dd0",
        "name": "Smistamento",
        "property": "payload.Case",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 7,
        "x": 1090,
        "y": 460,
        "wires": [
            [
                "926ea6005169f357"
            ],
            [
                "0e6e51e0611fe77c"
            ],
            [
                "339e9f87545b6964"
            ],
            [
                "38cd625108f02232"
            ],
            [
                "4a5c5a6c6f06e2d6"
            ],
            [
                "7a324f52b65f316d"
            ],
            [
                "a4a4749a7cca8d4c"
            ]
        ]
    },
    {
        "id": "855bbec68a5f6e83",
        "type": "e-mail",
        "z": "cdde5dc48b0f4dd0",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "gxausa.studenti@itslombardiameccatronica.it",
        "dname": "Sollevamento KITO",
        "x": 1670,
        "y": 460,
        "wires": []
    },
    {
        "id": "7a324f52b65f316d",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Prossime",
        "func": "// Inizializza l'HTML della tabella con il titolo \"Prossime\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Determina il numero di righe in \"Prossime\"\nvar numRows = msg.payload.Prossime ? msg.payload.Prossime.length : 0;\n\n// Itera attraverso le righe di \"Prossime\"\nfor (var i = 0; i < numRows; i++) {\n    // Prendi i valori dall'array \"Prossime\"\n    var rowData = msg.payload.Prossime[i];\n\n    // Aggiungi una riga alla tabella con i valori delle tre colonne\n    htmlTable += '<tr>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n    htmlTable += '</tr>';\n}\n\n// Chiudi la tabella\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Paranchi KITO\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 540,
        "wires": [
            [
                "855bbec68a5f6e83"
            ]
        ]
    },
    {
        "id": "4a5c5a6c6f06e2d6",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Odierne",
        "func": "// Inizializza l'HTML della tabella con il titolo \"Odierne\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Determina il numero di righe in \"Odierne\"\nvar numRows = msg.payload.Odierne ? msg.payload.Odierne.length : 0;\n\n// Itera attraverso le righe di \"Odierne\"\nfor (var i = 0; i < numRows; i++) {\n    var rowData = msg.payload.Odierne[i]; // Prendi i valori dall'array \"Odierne\"\n    var cellaOdierneID = rowData[0]; // ID\n    var cellaOdierneIntervento = rowData[1]; // Intervento\n    var cellaOdierneDescrizione = rowData[2]; // Descrizione\n\n    htmlTable += '<tr>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + cellaOdierneID + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + cellaOdierneIntervento + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + cellaOdierneDescrizione + '</td>';\n    htmlTable += '</tr>';\n}\n\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Paranchi KITO\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 500,
        "wires": [
            [
                "855bbec68a5f6e83"
            ]
        ]
    },
    {
        "id": "0e6e51e0611fe77c",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Prossime-Odierne",
        "func": "// Inizializza l'HTML delle due tabelle per \"Odierne\" e \"Prossime\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Aggiungi la seconda tabella per \"Prossime\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Paranchi KITO\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 380,
        "wires": [
            [
                "855bbec68a5f6e83"
            ]
        ]
    },
    {
        "id": "a4a4749a7cca8d4c",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Scadute",
        "func": "// Inizializza l'HTML della tabella per \"Scadute\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Determina il numero di righe in \"Scadute\"\nvar numRows = msg.payload.Scadute ? msg.payload.Scadute.length : 0;\n\n// Itera attraverso le righe di \"Scadute\"\nfor (var i = 0; i < numRows; i++) {\n    var rowData = msg.payload.Scadute[i]; // Prendi i valori dall'array \"Scadute\"\n\n    htmlTable += '<tr>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n    htmlTable += '</tr>';\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Paranchi KITO\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 580,
        "wires": [
            [
                "855bbec68a5f6e83"
            ]
        ]
    },
    {
        "id": "38cd625108f02232",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Odierne-Scadute",
        "func": "// Inizializza l'HTML delle due sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Scadute\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Paranchi KITO\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 460,
        "wires": [
            [
                "855bbec68a5f6e83"
            ]
        ]
    },
    {
        "id": "339e9f87545b6964",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Prossime-Scadute",
        "func": "// Inizializza l'HTML delle due sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Scadute\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Paranchi KITO\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 420,
        "wires": [
            [
                "855bbec68a5f6e83"
            ]
        ]
    },
    {
        "id": "926ea6005169f357",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "Tab Odie-Pros-Scad",
        "func": "// Inizializza l'HTML delle tre sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Prossime\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Scadute\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Paranchi KITO\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 340,
        "wires": [
            [
                "855bbec68a5f6e83"
            ]
        ]
    },
    {
        "id": "22e235a3a859b710",
        "type": "switch",
        "z": "cdde5dc48b0f4dd0",
        "name": "Filtro casi",
        "property": "payload.Case",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "0",
                "vt": "num",
                "v2": "6",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 900,
        "y": 460,
        "wires": [
            [
                "154da1a0df935593"
            ]
        ]
    },
    {
        "id": "a8a711b5801373a6",
        "type": "inject",
        "z": "cdde5dc48b0f4dd0",
        "name": "Avvio",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 05 * * 1,2,3,4,5",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 70,
        "y": 940,
        "wires": [
            [
                "186ea20f36175ac9",
                "666a8e866089984e",
                "ec42e77e6f04c741",
                "7691c8f155a3ce3c",
                "b819d66c420e7280",
                "aeed3e22a852c003"
            ]
        ]
    },
    {
        "id": "b819d66c420e7280",
        "type": "GSheet",
        "z": "cdde5dc48b0f4dd0",
        "creds": "25f19bdc3050b475",
        "method": "get",
        "action": "",
        "sheet": "1JnfII5N6dyVfvLfyexxVzacZqU2y7BvvEZWJ3IQ5Yws",
        "cells": "Foglio1!A3:D25",
        "flatten": false,
        "name": "Acquisizione MORRIS",
        "x": 320,
        "y": 780,
        "wires": [
            [
                "61a2473dddc859e9"
            ]
        ]
    },
    {
        "id": "61a2473dddc859e9",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "Separazione Scadenze",
        "func": "// Array per memorizzare i valori con il secondo elemento 2\nvar Odierne = [];\n\n// Array per memorizzare i valori con il secondo elemento 3\nvar Prossime = [];\n\n// Array per memorizzare i valori con il secondo elemento 1\nvar Scadute = [];\n\n// Array per memorizzare i valori con il secondo elemento 4\nvar FraMolto = [];\n\n// Array per memorizzare i valori con il secondo elemento 5\nvar Completate = [];\n\n// Copia del payload originale\nvar nuovoPayload = JSON.parse(JSON.stringify(msg.payload));\n\n// Scorrimento dell'array ricevuto nel payload\nfor (var i = 0; i < nuovoPayload.length; i++) {\n    var sottoArray = nuovoPayload[i];\n    if (sottoArray.length >= 4) { // Verifica se il sottoarray ha almeno 4 elementi\n        var nuovoSottoArray = [sottoArray[0], sottoArray[2], sottoArray[3]]; // Trattiene il primo, il terzo e il quarto valore\n        if (sottoArray[1] == 2) {\n            Odierne.push(nuovoSottoArray);\n        } else if (sottoArray[1] == 3) {\n            Prossime.push(nuovoSottoArray);\n        } else if (sottoArray[1] == 1) {\n            Scadute.push(nuovoSottoArray);\n        } else if (sottoArray[1] == 4) {\n            FraMolto.push(nuovoSottoArray);\n        } else if (sottoArray[1] == 5) {\n            Completate.push(nuovoSottoArray);\n        }\n    }\n}\n\n// Costruisci il nuovo payload con i cinque array separati\nnuovoPayload = {\n    Odierne: Odierne,\n    Prossime: Prossime,\n    Scadute: Scadute,\n    FraMolto: FraMolto,\n    Completate: Completate\n};\n\n// Assegna il nuovo payload al messaggio\nmsg.payload = nuovoPayload;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 780,
        "wires": [
            [
                "3d589feac78fed92"
            ]
        ]
    },
    {
        "id": "3d589feac78fed92",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "Array non vuoti",
        "func": "// Verifica se arrayProssime non è vuoto\nvar prossimeNonVuote = msg.payload.Prossime && msg.payload.Prossime.length > 0;\n\n// Verifica se arrayOdierne non è vuoto\nvar odierneNonVuote = msg.payload.Odierne && msg.payload.Odierne.length > 0;\n\n// Verifica se arrayScadute non è vuoto\nvar scaduteNonVuote = msg.payload.Scadute && msg.payload.Scadute.length > 0;\n\n// Copia del payload originale\nvar nuovoPayload = JSON.parse(JSON.stringify(msg.payload));\n\n// Imposta la variabile di uscita in base alle condizioni\nvar Case;\nvar nuovoPayload;\n\nif (prossimeNonVuote && odierneNonVuote && scaduteNonVuote) {\n    Case = 0;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Prossime: msg.payload.Prossime,\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else if (prossimeNonVuote && odierneNonVuote) {\n    Case = 1;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (prossimeNonVuote && scaduteNonVuote) {\n    Case = 2;\n    nuovoPayload = {\n        Scadute: msg.payload.Scadute,\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (scaduteNonVuote && odierneNonVuote) {\n    Case = 3;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else if (odierneNonVuote) {\n    Case = 4;\n    delete msg.payload.Prossime;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Case: Case\n    };\n} else if (prossimeNonVuote) {\n    Case = 5;\n    delete msg.payload.Odierne;\n    nuovoPayload = {\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (scaduteNonVuote) {\n    Case = 6;\n    nuovoPayload = {\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else {\n    Case = 100; // Imposta Case a 100 quando tutti gli array sono vuoti\n    nuovoPayload = {\n        Case: Case\n    };\n}\n\nmsg.payload = nuovoPayload;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 780,
        "wires": [
            [
                "c3958a6ad5eafe0b"
            ]
        ]
    },
    {
        "id": "33c8ba1d763e1025",
        "type": "switch",
        "z": "cdde5dc48b0f4dd0",
        "name": "Smistamento",
        "property": "payload.Case",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 7,
        "x": 1090,
        "y": 780,
        "wires": [
            [
                "1741d926031f98f2"
            ],
            [
                "d4d4aa366dc76b33"
            ],
            [
                "7539a47763650f0a"
            ],
            [
                "d6a0ebd113159b4b"
            ],
            [
                "9674a0ee73ae5152"
            ],
            [
                "65447795f5dee5f4"
            ],
            [
                "40b990d8ac9f2b83"
            ]
        ]
    },
    {
        "id": "4938bfd9667d2f24",
        "type": "e-mail",
        "z": "cdde5dc48b0f4dd0",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "gxausa.studenti@itslombardiameccatronica.it",
        "dname": "Sollevamento MORRIS",
        "x": 1690,
        "y": 780,
        "wires": []
    },
    {
        "id": "65447795f5dee5f4",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Prossime",
        "func": "// Inizializza l'HTML della tabella con il titolo \"Prossime\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Determina il numero di righe in \"Prossime\"\nvar numRows = msg.payload.Prossime ? msg.payload.Prossime.length : 0;\n\n// Itera attraverso le righe di \"Prossime\"\nfor (var i = 0; i < numRows; i++) {\n    // Prendi i valori dall'array \"Prossime\"\n    var rowData = msg.payload.Prossime[i];\n\n    // Aggiungi una riga alla tabella con i valori delle tre colonne\n    htmlTable += '<tr>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n    htmlTable += '</tr>';\n}\n\n// Chiudi la tabella\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Paranchi MORRIS\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 860,
        "wires": [
            [
                "4938bfd9667d2f24"
            ]
        ]
    },
    {
        "id": "9674a0ee73ae5152",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Odierne",
        "func": "// Inizializza l'HTML della tabella con il titolo \"Odierne\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Determina il numero di righe in \"Odierne\"\nvar numRows = msg.payload.Odierne ? msg.payload.Odierne.length : 0;\n\n// Itera attraverso le righe di \"Odierne\"\nfor (var i = 0; i < numRows; i++) {\n    var rowData = msg.payload.Odierne[i]; // Prendi i valori dall'array \"Odierne\"\n    var cellaOdierneID = rowData[0]; // ID\n    var cellaOdierneIntervento = rowData[1]; // Intervento\n    var cellaOdierneDescrizione = rowData[2]; // Descrizione\n\n    htmlTable += '<tr>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + cellaOdierneID + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + cellaOdierneIntervento + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + cellaOdierneDescrizione + '</td>';\n    htmlTable += '</tr>';\n}\n\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Paranchi MORRIS\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 820,
        "wires": [
            [
                "4938bfd9667d2f24"
            ]
        ]
    },
    {
        "id": "d4d4aa366dc76b33",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Prossime-Odierne",
        "func": "// Inizializza l'HTML delle due tabelle per \"Odierne\" e \"Prossime\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Aggiungi la seconda tabella per \"Prossime\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Paranchi MORRIS\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 700,
        "wires": [
            [
                "4938bfd9667d2f24"
            ]
        ]
    },
    {
        "id": "40b990d8ac9f2b83",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Scadute",
        "func": "// Inizializza l'HTML della tabella per \"Scadute\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Determina il numero di righe in \"Scadute\"\nvar numRows = msg.payload.Scadute ? msg.payload.Scadute.length : 0;\n\n// Itera attraverso le righe di \"Scadute\"\nfor (var i = 0; i < numRows; i++) {\n    var rowData = msg.payload.Scadute[i]; // Prendi i valori dall'array \"Scadute\"\n\n    htmlTable += '<tr>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n    htmlTable += '</tr>';\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Paranchi MORRIS\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 900,
        "wires": [
            [
                "4938bfd9667d2f24"
            ]
        ]
    },
    {
        "id": "d6a0ebd113159b4b",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Odierne-Scadute",
        "func": "// Inizializza l'HTML delle due sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Scadute\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Paranchi MORRIS\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 780,
        "wires": [
            [
                "4938bfd9667d2f24"
            ]
        ]
    },
    {
        "id": "7539a47763650f0a",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Prossime-Scadute",
        "func": "// Inizializza l'HTML delle due sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Scadute\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Paranchi MORRIS\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 740,
        "wires": [
            [
                "4938bfd9667d2f24"
            ]
        ]
    },
    {
        "id": "c3958a6ad5eafe0b",
        "type": "switch",
        "z": "cdde5dc48b0f4dd0",
        "name": "Filtro casi",
        "property": "payload.Case",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "0",
                "vt": "num",
                "v2": "6",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 920,
        "y": 780,
        "wires": [
            [
                "33c8ba1d763e1025"
            ]
        ]
    },
    {
        "id": "1741d926031f98f2",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "Tab Odie-Pros-Scad",
        "func": "// Inizializza l'HTML delle tre sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Prossime\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Scadute\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Paranchi MORRIS\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 660,
        "wires": [
            [
                "4938bfd9667d2f24"
            ]
        ]
    },
    {
        "id": "3c22b97291555f9d",
        "type": "e-mail in",
        "z": "cdde5dc48b0f4dd0",
        "name": "Risposta manutenzione",
        "protocol": "IMAP",
        "server": "imap.gmail.com",
        "useSSL": true,
        "autotls": "never",
        "port": "993",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "box": "INBOX",
        "disposition": "None",
        "criteria": "UNSEEN",
        "repeat": "180",
        "fetch": "auto",
        "inputs": 0,
        "x": 100,
        "y": 2180,
        "wires": [
            [
                "cc6365ae1a35cbd1"
            ]
        ]
    },
    {
        "id": "cc6365ae1a35cbd1",
        "type": "switch",
        "z": "cdde5dc48b0f4dd0",
        "name": "filtro mail",
        "property": "from",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "xausagiovanni@gmail.com",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 2180,
        "wires": [
            [
                "7394dc13b6787aaa"
            ]
        ]
    },
    {
        "id": "9ca62032b3bdd232",
        "type": "comment",
        "z": "cdde5dc48b0f4dd0",
        "name": "Ricezione Risposta e Aggiornamento Storico",
        "info": "",
        "x": 170,
        "y": 2000,
        "wires": []
    },
    {
        "id": "7394dc13b6787aaa",
        "type": "switch",
        "z": "cdde5dc48b0f4dd0",
        "name": "Filtro manutenzione",
        "property": "msg.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Morris",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Kito",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Idrico",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Fas",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Inoxtech",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Bono",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 450,
        "y": 2180,
        "wires": [
            [
                "c9cad14b4c5c8020"
            ],
            [
                "341da176e9b1d05e"
            ],
            [
                "6811e3ba564426b2"
            ],
            [
                "8e71bab28c724372"
            ],
            [
                "5f8d7d0662f36e39"
            ],
            [
                "dae3dac067374f6b"
            ]
        ]
    },
    {
        "id": "6811e3ba564426b2",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "Scrematura Dati",
        "func": "// Rimuovi gli spazi vuoti all'interno del topic e ottieni i valori\nvar valoriOggetto = msg.topic.trim().split(',');\n\n// Elimina il primo valore dall'oggetto\nvaloriOggetto.shift();\n\n// Ricomponi il topic senza il primo valore\nvar nuovoTopic = valoriOggetto.join(',');\n\n// Estrai la data corrente\nvar dataAttuale = new Date();\nvar dataFormattata = dataAttuale.toLocaleDateString();\n\n// Estrai i valori e le date dal testo della mail\nvar testoMail = msg.payload.trim(); // Rimuovi spazi bianchi all'inizio e alla fine\nvar valori = valoriOggetto.map(function(valore, index) {\n    var nota = ''; // Inizializza la nota vuota\n    // Se il testo della mail contiene più valori separati da virgola,\n    // cerca di estrarre la nota corrispondente al valore\n    if (testoMail) {\n        var note = testoMail.split(',');\n        nota = note[index] || ''; // Prendi la nota corrispondente al valore\n    }\n    return [valore.trim(), dataFormattata, nota.trim()]; // Restituisci il valore, la data e la nota\n});\n\n// Cancella tutte le altre variabili eccetto topic\ndelete msg.payload;\ndelete msg.date;\ndelete msg.header;\ndelete msg.html;\ndelete msg.from;\ndelete msg.attachments;\ndelete msg._msgid;\n\n// Assegna il nuovo payload al messaggio\nmsg.topic = nuovoTopic; // Aggiorna il topic senza il primo valore\nmsg.payload = valori;\n\n// Restituisci il messaggio per l'elaborazione successiva\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 2160,
        "wires": [
            [
                "566a86f9a6606e3a"
            ]
        ]
    },
    {
        "id": "566a86f9a6606e3a",
        "type": "GSheet",
        "z": "cdde5dc48b0f4dd0",
        "creds": "25f19bdc3050b475",
        "method": "append",
        "action": "",
        "sheet": "1MDn3fgd9XlbG9dhuPdHE86jeKYoiOP010u4PtmFR9ho",
        "cells": "Storico!A:A",
        "flatten": false,
        "name": "Aggiornamento ",
        "x": 900,
        "y": 2160,
        "wires": [
            [
                "fd08a36a8969f624"
            ]
        ]
    },
    {
        "id": "fd08a36a8969f624",
        "type": "e-mail in",
        "z": "cdde5dc48b0f4dd0",
        "name": "Rimozione risposta",
        "protocol": "IMAP",
        "server": "imap.gmail.com",
        "useSSL": true,
        "autotls": "never",
        "port": "993",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "box": "INBOX",
        "disposition": "Read",
        "criteria": "UNSEEN",
        "repeat": "10",
        "fetch": "trigger",
        "inputs": 1,
        "x": 1090,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "341da176e9b1d05e",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "Scrematura Dati",
        "func": "// Rimuovi gli spazi vuoti all'interno del topic e ottieni i valori\nvar valoriOggetto = msg.topic.trim().split(',');\n\n// Elimina il primo valore dall'oggetto\nvaloriOggetto.shift();\n\n// Ricomponi il topic senza il primo valore\nvar nuovoTopic = valoriOggetto.join(',');\n\n// Estrai la data corrente\nvar dataAttuale = new Date();\nvar dataFormattata = dataAttuale.toLocaleDateString();\n\n// Estrai i valori e le date dal testo della mail\nvar testoMail = msg.payload.trim(); // Rimuovi spazi bianchi all'inizio e alla fine\nvar valori = valoriOggetto.map(function(valore, index) {\n    var nota = ''; // Inizializza la nota vuota\n    // Se il testo della mail contiene più valori separati da virgola,\n    // cerca di estrarre la nota corrispondente al valore\n    if (testoMail) {\n        var note = testoMail.split(',');\n        nota = note[index] || ''; // Prendi la nota corrispondente al valore\n    }\n    return [valore.trim(), dataFormattata, nota.trim()]; // Restituisci il valore, la data e la nota\n});\n\n// Cancella tutte le altre variabili eccetto topic\ndelete msg.payload;\ndelete msg.date;\ndelete msg.header;\ndelete msg.html;\ndelete msg.from;\ndelete msg.attachments;\ndelete msg._msgid;\n\n// Assegna il nuovo payload al messaggio\nmsg.topic = nuovoTopic; // Aggiorna il topic senza il primo valore\nmsg.payload = valori;\n\n// Restituisci il messaggio per l'elaborazione successiva\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 2120,
        "wires": [
            [
                "83440936da7f5c18"
            ]
        ]
    },
    {
        "id": "83440936da7f5c18",
        "type": "GSheet",
        "z": "cdde5dc48b0f4dd0",
        "creds": "25f19bdc3050b475",
        "method": "append",
        "action": "",
        "sheet": "1lcvlmQaZ99HBOnXqW1kvxI0D_GO7pMz_KnkNKz5ntgo",
        "cells": "Storico!A:A",
        "flatten": false,
        "name": "Aggiornamento ",
        "x": 900,
        "y": 2120,
        "wires": [
            [
                "c089c5b12edd40b1"
            ]
        ]
    },
    {
        "id": "c089c5b12edd40b1",
        "type": "e-mail in",
        "z": "cdde5dc48b0f4dd0",
        "name": "Rimozione risposta",
        "protocol": "IMAP",
        "server": "imap.gmail.com",
        "useSSL": true,
        "autotls": "never",
        "port": "993",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "box": "INBOX",
        "disposition": "Read",
        "criteria": "UNSEEN",
        "repeat": "10",
        "fetch": "trigger",
        "inputs": 1,
        "x": 1090,
        "y": 2120,
        "wires": [
            []
        ]
    },
    {
        "id": "c9cad14b4c5c8020",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "Scrematura Dati",
        "func": "// Rimuovi gli spazi vuoti all'interno del topic e ottieni i valori\nvar valoriOggetto = msg.topic.trim().split(',');\n\n// Elimina il primo valore dall'oggetto\nvaloriOggetto.shift();\n\n// Ricomponi il topic senza il primo valore\nvar nuovoTopic = valoriOggetto.join(',');\n\n// Estrai la data corrente\nvar dataAttuale = new Date();\nvar dataFormattata = dataAttuale.toLocaleDateString();\n\n// Estrai i valori e le date dal testo della mail\nvar testoMail = msg.payload.trim(); // Rimuovi spazi bianchi all'inizio e alla fine\nvar valori = valoriOggetto.map(function(valore, index) {\n    var nota = ''; // Inizializza la nota vuota\n    // Se il testo della mail contiene più valori separati da virgola,\n    // cerca di estrarre la nota corrispondente al valore\n    if (testoMail) {\n        var note = testoMail.split(',');\n        nota = note[index] || ''; // Prendi la nota corrispondente al valore\n    }\n    return [valore.trim(), dataFormattata, nota.trim()]; // Restituisci il valore, la data e la nota\n});\n\n// Cancella tutte le altre variabili eccetto topic\ndelete msg.payload;\ndelete msg.date;\ndelete msg.header;\ndelete msg.html;\ndelete msg.from;\ndelete msg.attachments;\ndelete msg._msgid;\n\n// Assegna il nuovo payload al messaggio\nmsg.topic = nuovoTopic; // Aggiorna il topic senza il primo valore\nmsg.payload = valori;\n\n// Restituisci il messaggio per l'elaborazione successiva\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 2080,
        "wires": [
            [
                "9345a53e28b5075f"
            ]
        ]
    },
    {
        "id": "9345a53e28b5075f",
        "type": "GSheet",
        "z": "cdde5dc48b0f4dd0",
        "creds": "25f19bdc3050b475",
        "method": "append",
        "action": "",
        "sheet": "1JnfII5N6dyVfvLfyexxVzacZqU2y7BvvEZWJ3IQ5Yws",
        "cells": "Storico!A:A",
        "flatten": false,
        "name": "Aggiornamento ",
        "x": 900,
        "y": 2080,
        "wires": [
            [
                "ab8cdeb640c6a578"
            ]
        ]
    },
    {
        "id": "ab8cdeb640c6a578",
        "type": "e-mail in",
        "z": "cdde5dc48b0f4dd0",
        "name": "Rimozione risposta",
        "protocol": "IMAP",
        "server": "imap.gmail.com",
        "useSSL": true,
        "autotls": "never",
        "port": "993",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "box": "INBOX",
        "disposition": "Read",
        "criteria": "UNSEEN",
        "repeat": "10",
        "fetch": "trigger",
        "inputs": 1,
        "x": 1090,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "186ea20f36175ac9",
        "type": "GSheet",
        "z": "cdde5dc48b0f4dd0",
        "creds": "25f19bdc3050b475",
        "method": "get",
        "action": "",
        "sheet": "1LFOfYOLSMsYnl-p7vJxAZfOIif7xIV7HffM4geuRr2c",
        "cells": "Foglio1!A2:D8",
        "flatten": false,
        "name": "Acquisizione FAS",
        "x": 310,
        "y": 1100,
        "wires": [
            [
                "38a24668ba3ccd0d"
            ]
        ]
    },
    {
        "id": "38a24668ba3ccd0d",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "Separazione Scadenze",
        "func": "// Array per memorizzare i valori con il secondo elemento 2\nvar Odierne = [];\n\n// Array per memorizzare i valori con il secondo elemento 3\nvar Prossime = [];\n\n// Array per memorizzare i valori con il secondo elemento 1\nvar Scadute = [];\n\n// Array per memorizzare i valori con il secondo elemento 4\nvar FraMolto = [];\n\n// Array per memorizzare i valori con il secondo elemento 5\nvar Completate = [];\n\n// Copia del payload originale\nvar nuovoPayload = JSON.parse(JSON.stringify(msg.payload));\n\n// Scorrimento dell'array ricevuto nel payload\nfor (var i = 0; i < nuovoPayload.length; i++) {\n    var sottoArray = nuovoPayload[i];\n    if (sottoArray.length >= 4) { // Verifica se il sottoarray ha almeno 4 elementi\n        var nuovoSottoArray = [sottoArray[0], sottoArray[2], sottoArray[3]]; // Trattiene il primo, il terzo e il quarto valore\n        if (sottoArray[1] == 2) {\n            Odierne.push(nuovoSottoArray);\n        } else if (sottoArray[1] == 3) {\n            Prossime.push(nuovoSottoArray);\n        } else if (sottoArray[1] == 1) {\n            Scadute.push(nuovoSottoArray);\n        } else if (sottoArray[1] == 4) {\n            FraMolto.push(nuovoSottoArray);\n        } else if (sottoArray[1] == 5) {\n            Completate.push(nuovoSottoArray);\n        }\n    }\n}\n\n// Costruisci il nuovo payload con i cinque array separati\nnuovoPayload = {\n    Odierne: Odierne,\n    Prossime: Prossime,\n    Scadute: Scadute,\n    FraMolto: FraMolto,\n    Completate: Completate\n};\n\n// Assegna il nuovo payload al messaggio\nmsg.payload = nuovoPayload;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1100,
        "wires": [
            [
                "8438e3b3fa58b1fa"
            ]
        ]
    },
    {
        "id": "8438e3b3fa58b1fa",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "Array non vuoti",
        "func": "// Verifica se arrayProssime non è vuoto\nvar prossimeNonVuote = msg.payload.Prossime && msg.payload.Prossime.length > 0;\n\n// Verifica se arrayOdierne non è vuoto\nvar odierneNonVuote = msg.payload.Odierne && msg.payload.Odierne.length > 0;\n\n// Verifica se arrayScadute non è vuoto\nvar scaduteNonVuote = msg.payload.Scadute && msg.payload.Scadute.length > 0;\n\n// Copia del payload originale\nvar nuovoPayload = JSON.parse(JSON.stringify(msg.payload));\n\n// Imposta la variabile di uscita in base alle condizioni\nvar Case;\nvar nuovoPayload;\n\nif (prossimeNonVuote && odierneNonVuote && scaduteNonVuote) {\n    Case = 0;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Prossime: msg.payload.Prossime,\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else if (prossimeNonVuote && odierneNonVuote) {\n    Case = 1;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (prossimeNonVuote && scaduteNonVuote) {\n    Case = 2;\n    nuovoPayload = {\n        Scadute: msg.payload.Scadute,\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (scaduteNonVuote && odierneNonVuote) {\n    Case = 3;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else if (odierneNonVuote) {\n    Case = 4;\n    delete msg.payload.Prossime;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Case: Case\n    };\n} else if (prossimeNonVuote) {\n    Case = 5;\n    delete msg.payload.Odierne;\n    nuovoPayload = {\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (scaduteNonVuote) {\n    Case = 6;\n    nuovoPayload = {\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else {\n    Case = 100; // Imposta Case a 100 quando tutti gli array sono vuoti\n    nuovoPayload = {\n        Case: Case\n    };\n}\n\nmsg.payload = nuovoPayload;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1100,
        "wires": [
            [
                "0656e0affa7e7250"
            ]
        ]
    },
    {
        "id": "3df56d2d3d3d9a57",
        "type": "switch",
        "z": "cdde5dc48b0f4dd0",
        "name": "Smistamento",
        "property": "payload.Case",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 7,
        "x": 1090,
        "y": 1100,
        "wires": [
            [
                "2d2f70f0c904c453"
            ],
            [
                "414343a507a73ced"
            ],
            [
                "bac4e21ba888f7dd"
            ],
            [
                "0ce5e9170681e45c"
            ],
            [
                "2908fa1fc92c931c"
            ],
            [
                "e095e83e38e086e8"
            ],
            [
                "75b0d70a6cecaf31"
            ]
        ]
    },
    {
        "id": "ee67415d043716b2",
        "type": "e-mail",
        "z": "cdde5dc48b0f4dd0",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "gxausa.studenti@itslombardiameccatronica.it",
        "dname": "Sollevamento FAS",
        "x": 1670,
        "y": 1100,
        "wires": []
    },
    {
        "id": "e095e83e38e086e8",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Prossime",
        "func": "// Inizializza l'HTML della tabella con il titolo \"Prossime\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Determina il numero di righe in \"Prossime\"\nvar numRows = msg.payload.Prossime ? msg.payload.Prossime.length : 0;\n\n// Itera attraverso le righe di \"Prossime\"\nfor (var i = 0; i < numRows; i++) {\n    // Prendi i valori dall'array \"Prossime\"\n    var rowData = msg.payload.Prossime[i];\n\n    // Aggiungi una riga alla tabella con i valori delle tre colonne\n    htmlTable += '<tr>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n    htmlTable += '</tr>';\n}\n\n// Chiudi la tabella\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Paranchi FAS\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 1180,
        "wires": [
            [
                "ee67415d043716b2"
            ]
        ]
    },
    {
        "id": "2908fa1fc92c931c",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Odierne",
        "func": "// Inizializza l'HTML della tabella con il titolo \"Odierne\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Determina il numero di righe in \"Odierne\"\nvar numRows = msg.payload.Odierne ? msg.payload.Odierne.length : 0;\n\n// Itera attraverso le righe di \"Odierne\"\nfor (var i = 0; i < numRows; i++) {\n    var rowData = msg.payload.Odierne[i]; // Prendi i valori dall'array \"Odierne\"\n    var cellaOdierneID = rowData[0]; // ID\n    var cellaOdierneIntervento = rowData[1]; // Intervento\n    var cellaOdierneDescrizione = rowData[2]; // Descrizione\n\n    htmlTable += '<tr>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + cellaOdierneID + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + cellaOdierneIntervento + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + cellaOdierneDescrizione + '</td>';\n    htmlTable += '</tr>';\n}\n\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Paranchi FAS\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 1140,
        "wires": [
            [
                "ee67415d043716b2"
            ]
        ]
    },
    {
        "id": "414343a507a73ced",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Prossime-Odierne",
        "func": "// Inizializza l'HTML delle due tabelle per \"Odierne\" e \"Prossime\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Aggiungi la seconda tabella per \"Prossime\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Paranchi FAS\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 1020,
        "wires": [
            [
                "ee67415d043716b2"
            ]
        ]
    },
    {
        "id": "75b0d70a6cecaf31",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Scadute",
        "func": "// Inizializza l'HTML della tabella per \"Scadute\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Determina il numero di righe in \"Scadute\"\nvar numRows = msg.payload.Scadute ? msg.payload.Scadute.length : 0;\n\n// Itera attraverso le righe di \"Scadute\"\nfor (var i = 0; i < numRows; i++) {\n    var rowData = msg.payload.Scadute[i]; // Prendi i valori dall'array \"Scadute\"\n\n    htmlTable += '<tr>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n    htmlTable += '</tr>';\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Paranchi FAS\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 1220,
        "wires": [
            [
                "ee67415d043716b2"
            ]
        ]
    },
    {
        "id": "0ce5e9170681e45c",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Odierne-Scadute",
        "func": "// Inizializza l'HTML delle due sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Scadute\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Paranchi FAS\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 1100,
        "wires": [
            [
                "ee67415d043716b2"
            ]
        ]
    },
    {
        "id": "bac4e21ba888f7dd",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Prossime-Scadute",
        "func": "// Inizializza l'HTML delle due sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Scadute\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Paranchi FAS\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 1060,
        "wires": [
            [
                "ee67415d043716b2"
            ]
        ]
    },
    {
        "id": "0656e0affa7e7250",
        "type": "switch",
        "z": "cdde5dc48b0f4dd0",
        "name": "Filtro casi",
        "property": "payload.Case",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "0",
                "vt": "num",
                "v2": "6",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 900,
        "y": 1100,
        "wires": [
            [
                "3df56d2d3d3d9a57"
            ]
        ]
    },
    {
        "id": "2d2f70f0c904c453",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "Tab Odie-Pros-Scad",
        "func": "// Inizializza l'HTML delle tre sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Prossime\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Scadute\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Paranchi FAS\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 980,
        "wires": [
            [
                "ee67415d043716b2"
            ]
        ]
    },
    {
        "id": "8e71bab28c724372",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "Scrematura Dati",
        "func": "// Rimuovi gli spazi vuoti all'interno del topic e ottieni i valori\nvar valoriOggetto = msg.topic.trim().split(',');\n\n// Elimina il primo valore dall'oggetto\nvaloriOggetto.shift();\n\n// Ricomponi il topic senza il primo valore\nvar nuovoTopic = valoriOggetto.join(',');\n\n// Estrai la data corrente\nvar dataAttuale = new Date();\nvar dataFormattata = dataAttuale.toLocaleDateString();\n\n// Estrai i valori e le date dal testo della mail\nvar testoMail = msg.payload.trim(); // Rimuovi spazi bianchi all'inizio e alla fine\nvar valori = valoriOggetto.map(function(valore, index) {\n    var nota = ''; // Inizializza la nota vuota\n    // Se il testo della mail contiene più valori separati da virgola,\n    // cerca di estrarre la nota corrispondente al valore\n    if (testoMail) {\n        var note = testoMail.split(',');\n        nota = note[index] || ''; // Prendi la nota corrispondente al valore\n    }\n    return [valore.trim(), dataFormattata, nota.trim()]; // Restituisci il valore, la data e la nota\n});\n\n// Cancella tutte le altre variabili eccetto topic\ndelete msg.payload;\ndelete msg.date;\ndelete msg.header;\ndelete msg.html;\ndelete msg.from;\ndelete msg.attachments;\ndelete msg._msgid;\n\n// Assegna il nuovo payload al messaggio\nmsg.topic = nuovoTopic; // Aggiorna il topic senza il primo valore\nmsg.payload = valori;\n\n// Restituisci il messaggio per l'elaborazione successiva\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 2200,
        "wires": [
            [
                "7e128ca7c75f17cb"
            ]
        ]
    },
    {
        "id": "7e128ca7c75f17cb",
        "type": "GSheet",
        "z": "cdde5dc48b0f4dd0",
        "creds": "25f19bdc3050b475",
        "method": "append",
        "action": "",
        "sheet": "1LFOfYOLSMsYnl-p7vJxAZfOIif7xIV7HffM4geuRr2c",
        "cells": "Storico!A:A",
        "flatten": false,
        "name": "Aggiornamento ",
        "x": 900,
        "y": 2200,
        "wires": [
            [
                "e8b58568c9d837f0"
            ]
        ]
    },
    {
        "id": "e8b58568c9d837f0",
        "type": "e-mail in",
        "z": "cdde5dc48b0f4dd0",
        "name": "Rimozione risposta",
        "protocol": "IMAP",
        "server": "imap.gmail.com",
        "useSSL": true,
        "autotls": "never",
        "port": "993",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "box": "INBOX",
        "disposition": "Read",
        "criteria": "UNSEEN",
        "repeat": "10",
        "fetch": "trigger",
        "inputs": 1,
        "x": 1090,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "666a8e866089984e",
        "type": "GSheet",
        "z": "cdde5dc48b0f4dd0",
        "creds": "25f19bdc3050b475",
        "method": "get",
        "action": "",
        "sheet": "1D4MGvUe8nMwbaf2H7799m5w4Lc93pXxPKXbrGh7rPtg",
        "cells": "Foglio1!A2:D2",
        "flatten": false,
        "name": "Acquisizione INOXTECH",
        "x": 330,
        "y": 1420,
        "wires": [
            [
                "f9685aceeb31d3e8"
            ]
        ]
    },
    {
        "id": "f9685aceeb31d3e8",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "Separazione Scadenze",
        "func": "// Array per memorizzare i valori con il secondo elemento 2\nvar Odierne = [];\n\n// Array per memorizzare i valori con il secondo elemento 3\nvar Prossime = [];\n\n// Array per memorizzare i valori con il secondo elemento 1\nvar Scadute = [];\n\n// Array per memorizzare i valori con il secondo elemento 4\nvar FraMolto = [];\n\n// Array per memorizzare i valori con il secondo elemento 5\nvar Completate = [];\n\n// Copia del payload originale\nvar nuovoPayload = JSON.parse(JSON.stringify(msg.payload));\n\n// Scorrimento dell'array ricevuto nel payload\nfor (var i = 0; i < nuovoPayload.length; i++) {\n    var sottoArray = nuovoPayload[i];\n    if (sottoArray.length >= 4) { // Verifica se il sottoarray ha almeno 4 elementi\n        var nuovoSottoArray = [sottoArray[0], sottoArray[2], sottoArray[3]]; // Trattiene il primo, il terzo e il quarto valore\n        if (sottoArray[1] == 2) {\n            Odierne.push(nuovoSottoArray);\n        } else if (sottoArray[1] == 3) {\n            Prossime.push(nuovoSottoArray);\n        } else if (sottoArray[1] == 1) {\n            Scadute.push(nuovoSottoArray);\n        } else if (sottoArray[1] == 4) {\n            FraMolto.push(nuovoSottoArray);\n        } else if (sottoArray[1] == 5) {\n            Completate.push(nuovoSottoArray);\n        }\n    }\n}\n\n// Costruisci il nuovo payload con i cinque array separati\nnuovoPayload = {\n    Odierne: Odierne,\n    Prossime: Prossime,\n    Scadute: Scadute,\n    FraMolto: FraMolto,\n    Completate: Completate\n};\n\n// Assegna il nuovo payload al messaggio\nmsg.payload = nuovoPayload;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1420,
        "wires": [
            [
                "947002a5a289298e"
            ]
        ]
    },
    {
        "id": "947002a5a289298e",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "Array non vuoti",
        "func": "// Verifica se arrayProssime non è vuoto\nvar prossimeNonVuote = msg.payload.Prossime && msg.payload.Prossime.length > 0;\n\n// Verifica se arrayOdierne non è vuoto\nvar odierneNonVuote = msg.payload.Odierne && msg.payload.Odierne.length > 0;\n\n// Verifica se arrayScadute non è vuoto\nvar scaduteNonVuote = msg.payload.Scadute && msg.payload.Scadute.length > 0;\n\n// Copia del payload originale\nvar nuovoPayload = JSON.parse(JSON.stringify(msg.payload));\n\n// Imposta la variabile di uscita in base alle condizioni\nvar Case;\nvar nuovoPayload;\n\nif (prossimeNonVuote && odierneNonVuote && scaduteNonVuote) {\n    Case = 0;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Prossime: msg.payload.Prossime,\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else if (prossimeNonVuote && odierneNonVuote) {\n    Case = 1;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (prossimeNonVuote && scaduteNonVuote) {\n    Case = 2;\n    nuovoPayload = {\n        Scadute: msg.payload.Scadute,\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (scaduteNonVuote && odierneNonVuote) {\n    Case = 3;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else if (odierneNonVuote) {\n    Case = 4;\n    delete msg.payload.Prossime;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Case: Case\n    };\n} else if (prossimeNonVuote) {\n    Case = 5;\n    delete msg.payload.Odierne;\n    nuovoPayload = {\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (scaduteNonVuote) {\n    Case = 6;\n    nuovoPayload = {\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else {\n    Case = 100; // Imposta Case a 100 quando tutti gli array sono vuoti\n    nuovoPayload = {\n        Case: Case\n    };\n}\n\nmsg.payload = nuovoPayload;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1420,
        "wires": [
            [
                "c651c536e467cd6f"
            ]
        ]
    },
    {
        "id": "d2cdace6dbb99ed9",
        "type": "switch",
        "z": "cdde5dc48b0f4dd0",
        "name": "Smistamento",
        "property": "payload.Case",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 7,
        "x": 1090,
        "y": 1420,
        "wires": [
            [
                "d09d1914a8d7d322"
            ],
            [
                "2c429bad4250541b"
            ],
            [
                "173aa51e8363c7b4"
            ],
            [
                "936960e9c9504886"
            ],
            [
                "2d844a68d05004cc"
            ],
            [
                "167e3a33f165b7c2"
            ],
            [
                "f9f1d264752a7750"
            ]
        ]
    },
    {
        "id": "0525b45a65a86e24",
        "type": "e-mail",
        "z": "cdde5dc48b0f4dd0",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "gxausa.studenti@itslombardiameccatronica.it",
        "dname": "Evaporatore INOXTECH",
        "x": 1690,
        "y": 1420,
        "wires": []
    },
    {
        "id": "167e3a33f165b7c2",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Prossime",
        "func": "// Inizializza l'HTML della tabella con il titolo \"Prossime\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Determina il numero di righe in \"Prossime\"\nvar numRows = msg.payload.Prossime ? msg.payload.Prossime.length : 0;\n\n// Itera attraverso le righe di \"Prossime\"\nfor (var i = 0; i < numRows; i++) {\n    // Prendi i valori dall'array \"Prossime\"\n    var rowData = msg.payload.Prossime[i];\n\n    // Aggiungi una riga alla tabella con i valori delle tre colonne\n    htmlTable += '<tr>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n    htmlTable += '</tr>';\n}\n\n// Chiudi la tabella\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Evaporatore INOXTECH\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 1500,
        "wires": [
            [
                "0525b45a65a86e24"
            ]
        ]
    },
    {
        "id": "2d844a68d05004cc",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Odierne",
        "func": "// Inizializza l'HTML della tabella con il titolo \"Odierne\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Determina il numero di righe in \"Odierne\"\nvar numRows = msg.payload.Odierne ? msg.payload.Odierne.length : 0;\n\n// Itera attraverso le righe di \"Odierne\"\nfor (var i = 0; i < numRows; i++) {\n    var rowData = msg.payload.Odierne[i]; // Prendi i valori dall'array \"Odierne\"\n    var cellaOdierneID = rowData[0]; // ID\n    var cellaOdierneIntervento = rowData[1]; // Intervento\n    var cellaOdierneDescrizione = rowData[2]; // Descrizione\n\n    htmlTable += '<tr>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + cellaOdierneID + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + cellaOdierneIntervento + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + cellaOdierneDescrizione + '</td>';\n    htmlTable += '</tr>';\n}\n\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Evaporatore INOXTECH\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 1460,
        "wires": [
            [
                "0525b45a65a86e24"
            ]
        ]
    },
    {
        "id": "2c429bad4250541b",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Prossime-Odierne",
        "func": "// Inizializza l'HTML delle due tabelle per \"Odierne\" e \"Prossime\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Aggiungi la seconda tabella per \"Prossime\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Evaporatore INOXTECH\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 1340,
        "wires": [
            [
                "0525b45a65a86e24"
            ]
        ]
    },
    {
        "id": "f9f1d264752a7750",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Scadute",
        "func": "// Inizializza l'HTML della tabella per \"Scadute\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Determina il numero di righe in \"Scadute\"\nvar numRows = msg.payload.Scadute ? msg.payload.Scadute.length : 0;\n\n// Itera attraverso le righe di \"Scadute\"\nfor (var i = 0; i < numRows; i++) {\n    var rowData = msg.payload.Scadute[i]; // Prendi i valori dall'array \"Scadute\"\n\n    htmlTable += '<tr>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n    htmlTable += '</tr>';\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Evaporatore INOXTECH\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 1540,
        "wires": [
            [
                "0525b45a65a86e24"
            ]
        ]
    },
    {
        "id": "936960e9c9504886",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Odierne-Scadute",
        "func": "// Inizializza l'HTML delle due sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Scadute\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Evaporatore INOXTECH\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 1420,
        "wires": [
            [
                "0525b45a65a86e24"
            ]
        ]
    },
    {
        "id": "173aa51e8363c7b4",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Prossime-Scadute",
        "func": "// Inizializza l'HTML delle due sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Scadute\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Evaporatore INOXTECH\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 1380,
        "wires": [
            [
                "0525b45a65a86e24"
            ]
        ]
    },
    {
        "id": "c651c536e467cd6f",
        "type": "switch",
        "z": "cdde5dc48b0f4dd0",
        "name": "Filtro casi",
        "property": "payload.Case",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "0",
                "vt": "num",
                "v2": "6",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 940,
        "y": 1420,
        "wires": [
            [
                "d2cdace6dbb99ed9"
            ]
        ]
    },
    {
        "id": "d09d1914a8d7d322",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "Tab Odie-Pros-Scad",
        "func": "// Inizializza l'HTML delle tre sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Prossime\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Scadute\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Evaporatore INOXTECH\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 1300,
        "wires": [
            [
                "0525b45a65a86e24"
            ]
        ]
    },
    {
        "id": "5f8d7d0662f36e39",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "Scrematura Dati",
        "func": "// Rimuovi gli spazi vuoti all'interno del topic e ottieni i valori\nvar valoriOggetto = msg.topic.trim().split(',');\n\n// Elimina il primo valore dall'oggetto\nvaloriOggetto.shift();\n\n// Ricomponi il topic senza il primo valore\nvar nuovoTopic = valoriOggetto.join(',');\n\n// Estrai la data corrente\nvar dataAttuale = new Date();\nvar dataFormattata = dataAttuale.toLocaleDateString();\n\n// Estrai i valori e le date dal testo della mail\nvar testoMail = msg.payload.trim(); // Rimuovi spazi bianchi all'inizio e alla fine\nvar valori = valoriOggetto.map(function(valore, index) {\n    var nota = ''; // Inizializza la nota vuota\n    // Se il testo della mail contiene più valori separati da virgola,\n    // cerca di estrarre la nota corrispondente al valore\n    if (testoMail) {\n        var note = testoMail.split(',');\n        nota = note[index] || ''; // Prendi la nota corrispondente al valore\n    }\n    return [valore.trim(), dataFormattata, nota.trim()]; // Restituisci il valore, la data e la nota\n});\n\n// Cancella tutte le altre variabili eccetto topic\ndelete msg.payload;\ndelete msg.date;\ndelete msg.header;\ndelete msg.html;\ndelete msg.from;\ndelete msg.attachments;\ndelete msg._msgid;\n\n// Assegna il nuovo payload al messaggio\nmsg.topic = nuovoTopic; // Aggiorna il topic senza il primo valore\nmsg.payload = valori;\n\n// Restituisci il messaggio per l'elaborazione successiva\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 2240,
        "wires": [
            [
                "390d2651b83296f4"
            ]
        ]
    },
    {
        "id": "390d2651b83296f4",
        "type": "GSheet",
        "z": "cdde5dc48b0f4dd0",
        "creds": "25f19bdc3050b475",
        "method": "append",
        "action": "",
        "sheet": "1D4MGvUe8nMwbaf2H7799m5w4Lc93pXxPKXbrGh7rPtg",
        "cells": "Storico!A:A",
        "flatten": false,
        "name": "Aggiornamento ",
        "x": 900,
        "y": 2240,
        "wires": [
            [
                "f3ed19ae5213507b"
            ]
        ]
    },
    {
        "id": "f3ed19ae5213507b",
        "type": "e-mail in",
        "z": "cdde5dc48b0f4dd0",
        "name": "Rimozione risposta",
        "protocol": "IMAP",
        "server": "imap.gmail.com",
        "useSSL": true,
        "autotls": "never",
        "port": "993",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "box": "INBOX",
        "disposition": "Read",
        "criteria": "UNSEEN",
        "repeat": "10",
        "fetch": "trigger",
        "inputs": 1,
        "x": 1090,
        "y": 2240,
        "wires": [
            []
        ]
    },
    {
        "id": "ec42e77e6f04c741",
        "type": "GSheet",
        "z": "cdde5dc48b0f4dd0",
        "creds": "25f19bdc3050b475",
        "method": "get",
        "action": "",
        "sheet": "1ziVBdDb05YX-XBrG0pFV0hKDzn4g7nXA14-cRCcmBAA",
        "cells": "Foglio1!A2:D17",
        "flatten": false,
        "name": "Acquisizione BONO",
        "x": 320,
        "y": 1740,
        "wires": [
            [
                "4a96f050f746a4ba"
            ]
        ]
    },
    {
        "id": "4a96f050f746a4ba",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "Separazione Scadenze",
        "func": "// Array per memorizzare i valori con il secondo elemento 2\nvar Odierne = [];\n\n// Array per memorizzare i valori con il secondo elemento 3\nvar Prossime = [];\n\n// Array per memorizzare i valori con il secondo elemento 1\nvar Scadute = [];\n\n// Array per memorizzare i valori con il secondo elemento 4\nvar FraMolto = [];\n\n// Array per memorizzare i valori con il secondo elemento 5\nvar Completate = [];\n\n// Copia del payload originale\nvar nuovoPayload = JSON.parse(JSON.stringify(msg.payload));\n\n// Scorrimento dell'array ricevuto nel payload\nfor (var i = 0; i < nuovoPayload.length; i++) {\n    var sottoArray = nuovoPayload[i];\n    if (sottoArray.length >= 4) { // Verifica se il sottoarray ha almeno 4 elementi\n        var nuovoSottoArray = [sottoArray[0], sottoArray[2], sottoArray[3]]; // Trattiene il primo, il terzo e il quarto valore\n        if (sottoArray[1] == 2) {\n            Odierne.push(nuovoSottoArray);\n        } else if (sottoArray[1] == 3) {\n            Prossime.push(nuovoSottoArray);\n        } else if (sottoArray[1] == 1) {\n            Scadute.push(nuovoSottoArray);\n        } else if (sottoArray[1] == 4) {\n            FraMolto.push(nuovoSottoArray);\n        } else if (sottoArray[1] == 5) {\n            Completate.push(nuovoSottoArray);\n        }\n    }\n}\n\n// Costruisci il nuovo payload con i cinque array separati\nnuovoPayload = {\n    Odierne: Odierne,\n    Prossime: Prossime,\n    Scadute: Scadute,\n    FraMolto: FraMolto,\n    Completate: Completate\n};\n\n// Assegna il nuovo payload al messaggio\nmsg.payload = nuovoPayload;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1740,
        "wires": [
            [
                "8bcb02a0c5723168"
            ]
        ]
    },
    {
        "id": "8bcb02a0c5723168",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "Array non vuoti",
        "func": "// Verifica se arrayProssime non è vuoto\nvar prossimeNonVuote = msg.payload.Prossime && msg.payload.Prossime.length > 0;\n\n// Verifica se arrayOdierne non è vuoto\nvar odierneNonVuote = msg.payload.Odierne && msg.payload.Odierne.length > 0;\n\n// Verifica se arrayScadute non è vuoto\nvar scaduteNonVuote = msg.payload.Scadute && msg.payload.Scadute.length > 0;\n\n// Copia del payload originale\nvar nuovoPayload = JSON.parse(JSON.stringify(msg.payload));\n\n// Imposta la variabile di uscita in base alle condizioni\nvar Case;\nvar nuovoPayload;\n\nif (prossimeNonVuote && odierneNonVuote && scaduteNonVuote) {\n    Case = 0;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Prossime: msg.payload.Prossime,\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else if (prossimeNonVuote && odierneNonVuote) {\n    Case = 1;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (prossimeNonVuote && scaduteNonVuote) {\n    Case = 2;\n    nuovoPayload = {\n        Scadute: msg.payload.Scadute,\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (scaduteNonVuote && odierneNonVuote) {\n    Case = 3;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else if (odierneNonVuote) {\n    Case = 4;\n    delete msg.payload.Prossime;\n    nuovoPayload = {\n        Odierne: msg.payload.Odierne,\n        Case: Case\n    };\n} else if (prossimeNonVuote) {\n    Case = 5;\n    delete msg.payload.Odierne;\n    nuovoPayload = {\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (scaduteNonVuote) {\n    Case = 6;\n    nuovoPayload = {\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else {\n    Case = 100; // Imposta Case a 100 quando tutti gli array sono vuoti\n    nuovoPayload = {\n        Case: Case\n    };\n}\n\nmsg.payload = nuovoPayload;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1740,
        "wires": [
            [
                "f25fe2e3e68890da"
            ]
        ]
    },
    {
        "id": "a00d1ddc5aef41bb",
        "type": "switch",
        "z": "cdde5dc48b0f4dd0",
        "name": "Smistamento",
        "property": "payload.Case",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 7,
        "x": 1090,
        "y": 1740,
        "wires": [
            [
                "01dd20067aa65a64"
            ],
            [
                "c83b70c896df1fb6"
            ],
            [
                "fd6df26fbce4e754"
            ],
            [
                "65701f90bca396f2"
            ],
            [
                "226b3e3de03028f3"
            ],
            [
                "ae98c64b06fe6a2b"
            ],
            [
                "ecc4910b06389a4f"
            ]
        ]
    },
    {
        "id": "0c99321f23bba286",
        "type": "e-mail",
        "z": "cdde5dc48b0f4dd0",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "gxausa.studenti@itslombardiameccatronica.it",
        "dname": "Sollevamento BONO",
        "x": 1680,
        "y": 1740,
        "wires": []
    },
    {
        "id": "ae98c64b06fe6a2b",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Prossime",
        "func": "// Inizializza l'HTML della tabella con il titolo \"Prossime\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Determina il numero di righe in \"Prossime\"\nvar numRows = msg.payload.Prossime ? msg.payload.Prossime.length : 0;\n\n// Itera attraverso le righe di \"Prossime\"\nfor (var i = 0; i < numRows; i++) {\n    // Prendi i valori dall'array \"Prossime\"\n    var rowData = msg.payload.Prossime[i];\n\n    // Aggiungi una riga alla tabella con i valori delle tre colonne\n    htmlTable += '<tr>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n    htmlTable += '</tr>';\n}\n\n// Chiudi la tabella\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Caldaia BONO\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 1820,
        "wires": [
            [
                "0c99321f23bba286"
            ]
        ]
    },
    {
        "id": "226b3e3de03028f3",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Odierne",
        "func": "// Inizializza l'HTML della tabella con il titolo \"Odierne\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Determina il numero di righe in \"Odierne\"\nvar numRows = msg.payload.Odierne ? msg.payload.Odierne.length : 0;\n\n// Itera attraverso le righe di \"Odierne\"\nfor (var i = 0; i < numRows; i++) {\n    var rowData = msg.payload.Odierne[i]; // Prendi i valori dall'array \"Odierne\"\n    var cellaOdierneID = rowData[0]; // ID\n    var cellaOdierneIntervento = rowData[1]; // Intervento\n    var cellaOdierneDescrizione = rowData[2]; // Descrizione\n\n    htmlTable += '<tr>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + cellaOdierneID + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + cellaOdierneIntervento + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + cellaOdierneDescrizione + '</td>';\n    htmlTable += '</tr>';\n}\n\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Caldaia BONO\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 1780,
        "wires": [
            [
                "0c99321f23bba286"
            ]
        ]
    },
    {
        "id": "c83b70c896df1fb6",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Prossime-Odierne",
        "func": "// Inizializza l'HTML delle due tabelle per \"Odierne\" e \"Prossime\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Aggiungi la seconda tabella per \"Prossime\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Caldaia BONO\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 1660,
        "wires": [
            [
                "0c99321f23bba286"
            ]
        ]
    },
    {
        "id": "ecc4910b06389a4f",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Scadute",
        "func": "// Inizializza l'HTML della tabella per \"Scadute\"\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Determina il numero di righe in \"Scadute\"\nvar numRows = msg.payload.Scadute ? msg.payload.Scadute.length : 0;\n\n// Itera attraverso le righe di \"Scadute\"\nfor (var i = 0; i < numRows; i++) {\n    var rowData = msg.payload.Scadute[i]; // Prendi i valori dall'array \"Scadute\"\n\n    htmlTable += '<tr>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n    htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n    htmlTable += '</tr>';\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Caldaia BONO\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 1860,
        "wires": [
            [
                "0c99321f23bba286"
            ]
        ]
    },
    {
        "id": "65701f90bca396f2",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Odierne-Scadute",
        "func": "// Inizializza l'HTML delle due sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Scadute\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Caldaia BONO\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 1740,
        "wires": [
            [
                "0c99321f23bba286"
            ]
        ]
    },
    {
        "id": "fd6df26fbce4e754",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "tab Prossime-Scadute",
        "func": "// Inizializza l'HTML delle due sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Scadute\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Caldaia BONO\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 1700,
        "wires": [
            [
                "0c99321f23bba286"
            ]
        ]
    },
    {
        "id": "f25fe2e3e68890da",
        "type": "switch",
        "z": "cdde5dc48b0f4dd0",
        "name": "Filtro casi",
        "property": "payload.Case",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "0",
                "vt": "num",
                "v2": "6",
                "v2t": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 920,
        "y": 1740,
        "wires": [
            [
                "a00d1ddc5aef41bb"
            ]
        ]
    },
    {
        "id": "01dd20067aa65a64",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "Tab Odie-Pros-Scad",
        "func": "// Inizializza l'HTML delle tre sotto tabelle\nvar htmlTable = '<table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Odierne</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Odierne\nif (msg.payload.Odierne && msg.payload.Odierne.length > 0) {\n    for (var i = 0; i < msg.payload.Odierne.length; i++) {\n        var rowData = msg.payload.Odierne[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Odierne\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Prossime\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Prossime</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Prossime\nif (msg.payload.Prossime && msg.payload.Prossime.length > 0) {\n    for (var i = 0; i < msg.payload.Prossime.length; i++) {\n        var rowData = msg.payload.Prossime[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Prossime\"\nhtmlTable += '</table>';\n\n// Aggiungi sotto tabella per \"Scadute\"\nhtmlTable += '<br><br><table style=\"border-collapse: collapse; border: 1px solid black;\"><tr><th colspan=\"3\" style=\"border: 1px solid black;\">Scadute</th></tr>';\nhtmlTable += '<tr><th>ID</th><th>Intervento</th><th style=\"width: auto;\">Descrizione</th></tr>';\n\n// Aggiungi righe per i valori in msg.payload.Scadute\nif (msg.payload.Scadute && msg.payload.Scadute.length > 0) {\n    for (var i = 0; i < msg.payload.Scadute.length; i++) {\n        var rowData = msg.payload.Scadute[i];\n        htmlTable += '<tr>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px;\">' + rowData[0] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; white-space: pre-line;\">' + rowData[1] + '</td>';\n        htmlTable += '<td style=\"border: 1px solid black; padding: 3px; width: auto; white-space: pre-line;\">' + rowData[2] + '</td>';\n        htmlTable += '</tr>';\n    }\n}\n\n// Chiudi la tabella per \"Scadute\"\nhtmlTable += '</table>';\n\n// Assegna l'HTML della tabella al payload del messaggio\nmsg.payload = htmlTable;\n\n// Imposta l'oggetto della mail come \"Manutenzione Impianto Idrico\"\nmsg.topic = \"Manutenzione Caldaia BONO\";\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 1620,
        "wires": [
            [
                "0c99321f23bba286"
            ]
        ]
    },
    {
        "id": "dae3dac067374f6b",
        "type": "function",
        "z": "cdde5dc48b0f4dd0",
        "name": "Scrematura Dati",
        "func": "// Rimuovi gli spazi vuoti all'interno del topic e ottieni i valori\nvar valoriOggetto = msg.topic.trim().split(',');\n\n// Elimina il primo valore dall'oggetto\nvaloriOggetto.shift();\n\n// Ricomponi il topic senza il primo valore\nvar nuovoTopic = valoriOggetto.join(',');\n\n// Estrai la data corrente\nvar dataAttuale = new Date();\nvar dataFormattata = dataAttuale.toLocaleDateString();\n\n// Estrai i valori e le date dal testo della mail\nvar testoMail = msg.payload.trim(); // Rimuovi spazi bianchi all'inizio e alla fine\nvar valori = valoriOggetto.map(function(valore, index) {\n    var nota = ''; // Inizializza la nota vuota\n    // Se il testo della mail contiene più valori separati da virgola,\n    // cerca di estrarre la nota corrispondente al valore\n    if (testoMail) {\n        var note = testoMail.split(',');\n        nota = note[index] || ''; // Prendi la nota corrispondente al valore\n    }\n    return [valore.trim(), dataFormattata, nota.trim()]; // Restituisci il valore, la data e la nota\n});\n\n// Cancella tutte le altre variabili eccetto topic\ndelete msg.payload;\ndelete msg.date;\ndelete msg.header;\ndelete msg.html;\ndelete msg.from;\ndelete msg.attachments;\ndelete msg._msgid;\n\n// Assegna il nuovo payload al messaggio\nmsg.topic = nuovoTopic; // Aggiorna il topic senza il primo valore\nmsg.payload = valori;\n\n// Restituisci il messaggio per l'elaborazione successiva\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 2280,
        "wires": [
            [
                "b8c3eee25fe011d2"
            ]
        ]
    },
    {
        "id": "b8c3eee25fe011d2",
        "type": "GSheet",
        "z": "cdde5dc48b0f4dd0",
        "creds": "25f19bdc3050b475",
        "method": "append",
        "action": "",
        "sheet": "1ziVBdDb05YX-XBrG0pFV0hKDzn4g7nXA14-cRCcmBAA",
        "cells": "Storico!A:A",
        "flatten": false,
        "name": "Aggiornamento ",
        "x": 900,
        "y": 2280,
        "wires": [
            [
                "de11b95666989765"
            ]
        ]
    },
    {
        "id": "de11b95666989765",
        "type": "e-mail in",
        "z": "cdde5dc48b0f4dd0",
        "name": "Rimozione risposta",
        "protocol": "IMAP",
        "server": "imap.gmail.com",
        "useSSL": true,
        "autotls": "never",
        "port": "993",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "box": "INBOX",
        "disposition": "Read",
        "criteria": "UNSEEN",
        "repeat": "10",
        "fetch": "trigger",
        "inputs": 1,
        "x": 1090,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "25ac98b93577727f",
        "type": "function",
        "z": "65d25791f6b50219",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Scadute\nvar countScadute = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Scadute\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"1\" (Scadute)\n    if (secondoValore === \"1\") {\n        countScadute++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countScadute;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 40,
        "wires": [
            [
                "4ff6e4e456b02858",
                "c27ccaaa6c596570"
            ]
        ]
    },
    {
        "id": "4ff6e4e456b02858",
        "type": "ui-gauge",
        "z": "65d25791f6b50219",
        "name": "Scadute",
        "group": "70b43b96c003cea7",
        "order": 7,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Scadute",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#ff0000"
            },
            {
                "from": "0,5",
                "color": "#ff0000"
            },
            {
                "from": "1",
                "color": "#ff0000"
            }
        ],
        "min": 0,
        "max": "1",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 680,
        "y": 20,
        "wires": []
    },
    {
        "id": "fdbb71f8dd470a1e",
        "type": "function",
        "z": "65d25791f6b50219",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Odierne\nvar countOdierne = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Odierne\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"2\" (Odierne)\n    if (secondoValore === \"2\") {\n        countOdierne++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countOdierne;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 120,
        "wires": [
            [
                "42f02489f5f26f26",
                "bec2f59816c37f24"
            ]
        ]
    },
    {
        "id": "9b248e7f156cf140",
        "type": "function",
        "z": "65d25791f6b50219",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Prossime\nvar countProssime = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Prossime\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"3\" (Prossime)\n    if (secondoValore === \"3\") {\n        countProssime++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countProssime;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 200,
        "wires": [
            [
                "7bf006482a9362e2",
                "2fa1cb4ffdc04152"
            ]
        ]
    },
    {
        "id": "448727b7afd152e7",
        "type": "function",
        "z": "65d25791f6b50219",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Lontane\nvar countLontane = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Lontane\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"4\" (Lontane)\n    if (secondoValore === \"4\") {\n        countLontane++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countLontane;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 280,
        "wires": [
            [
                "b686986525b5e517",
                "5cf1e66bfe278dce"
            ]
        ]
    },
    {
        "id": "e71e2fa6d9858aac",
        "type": "function",
        "z": "65d25791f6b50219",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Completate\nvar countCompletate = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Completate\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"5\" (Completate)\n    if (secondoValore === \"5\") {\n        countCompletate++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countCompletate;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 360,
        "wires": [
            [
                "3db832d1d783549a",
                "9d574e5938311a5c"
            ]
        ]
    },
    {
        "id": "42f02489f5f26f26",
        "type": "ui-gauge",
        "z": "65d25791f6b50219",
        "name": "Odierne",
        "group": "70b43b96c003cea7",
        "order": 6,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Odierne",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#ff4d00"
            },
            {
                "from": "0.5",
                "color": "#ff4d00"
            },
            {
                "from": "1",
                "color": "#ff4d00"
            }
        ],
        "min": 0,
        "max": "1",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 680,
        "y": 100,
        "wires": []
    },
    {
        "id": "7bf006482a9362e2",
        "type": "ui-gauge",
        "z": "65d25791f6b50219",
        "name": "Prossime",
        "group": "70b43b96c003cea7",
        "order": 5,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Prossime",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#fff000"
            },
            {
                "from": "0.5",
                "color": "#fff000"
            },
            {
                "from": "1",
                "color": "#fff000"
            }
        ],
        "min": 0,
        "max": "1",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 680,
        "y": 180,
        "wires": []
    },
    {
        "id": "b686986525b5e517",
        "type": "ui-gauge",
        "z": "65d25791f6b50219",
        "name": "Lontane",
        "group": "70b43b96c003cea7",
        "order": 4,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Lontane",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#0000ff"
            },
            {
                "from": "0,5",
                "color": "#0000ff"
            },
            {
                "from": "1",
                "color": "#0000ff"
            }
        ],
        "min": 0,
        "max": "1",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 680,
        "y": 260,
        "wires": []
    },
    {
        "id": "3db832d1d783549a",
        "type": "ui-gauge",
        "z": "65d25791f6b50219",
        "name": "Completate",
        "group": "70b43b96c003cea7",
        "order": 3,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Completate",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#00ff00"
            },
            {
                "from": "0,5",
                "color": "#00ff00"
            },
            {
                "from": "1",
                "color": "#00ff00"
            }
        ],
        "min": 0,
        "max": "1",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 690,
        "y": 340,
        "wires": []
    },
    {
        "id": "089a5d4bd27343cf",
        "type": "GSheet",
        "z": "65d25791f6b50219",
        "creds": "25f19bdc3050b475",
        "method": "get",
        "action": "",
        "sheet": "1D4MGvUe8nMwbaf2H7799m5w4Lc93pXxPKXbrGh7rPtg",
        "cells": "Foglio1!A2:E2",
        "flatten": false,
        "name": "Acquisizione INOXTECH",
        "x": 290,
        "y": 120,
        "wires": [
            [
                "25ac98b93577727f",
                "fdbb71f8dd470a1e",
                "9b248e7f156cf140",
                "448727b7afd152e7",
                "e71e2fa6d9858aac"
            ]
        ]
    },
    {
        "id": "0e8295a837d73738",
        "type": "inject",
        "z": "65d25791f6b50219",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "180",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 260,
        "wires": [
            [
                "089a5d4bd27343cf"
            ]
        ]
    },
    {
        "id": "c27ccaaa6c596570",
        "type": "GSheet",
        "z": "65d25791f6b50219",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!B7",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 700,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "bec2f59816c37f24",
        "type": "GSheet",
        "z": "65d25791f6b50219",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!C7",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 700,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "2fa1cb4ffdc04152",
        "type": "GSheet",
        "z": "65d25791f6b50219",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!D7",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 700,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "5cf1e66bfe278dce",
        "type": "GSheet",
        "z": "65d25791f6b50219",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!E7",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 700,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "9d574e5938311a5c",
        "type": "GSheet",
        "z": "65d25791f6b50219",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!F7",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 700,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "3edb46bbf93b7891",
        "type": "function",
        "z": "d6a07ff22947c9d6",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Scadute\nvar countScadute = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Scadute\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"1\" (Scadute)\n    if (secondoValore === \"1\") {\n        countScadute++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countScadute;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 40,
        "wires": [
            [
                "eb546e06268a7373",
                "d839dcfc58048068"
            ]
        ]
    },
    {
        "id": "eb546e06268a7373",
        "type": "ui-gauge",
        "z": "d6a07ff22947c9d6",
        "name": "Scadute",
        "group": "bbf90eaef78f08c1",
        "order": 1,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Scadute",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#ff0000"
            },
            {
                "from": "8",
                "color": "#ff0000"
            },
            {
                "from": "16",
                "color": "#ff0000"
            }
        ],
        "min": 0,
        "max": "16",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 660,
        "y": 20,
        "wires": []
    },
    {
        "id": "e96a20aebc5703c7",
        "type": "function",
        "z": "d6a07ff22947c9d6",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Odierne\nvar countOdierne = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Odierne\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"2\" (Odierne)\n    if (secondoValore === \"2\") {\n        countOdierne++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countOdierne;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 120,
        "wires": [
            [
                "a1f56444f8c2dd99",
                "3a9ee867a8fb344f"
            ]
        ]
    },
    {
        "id": "754c24f2a006f15c",
        "type": "function",
        "z": "d6a07ff22947c9d6",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Prossime\nvar countProssime = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Prossime\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"3\" (Prossime)\n    if (secondoValore === \"3\") {\n        countProssime++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countProssime;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 200,
        "wires": [
            [
                "84cdd61b31681475",
                "0854cc4a80c3b684"
            ]
        ]
    },
    {
        "id": "7c03ba6715db303f",
        "type": "function",
        "z": "d6a07ff22947c9d6",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Lontane\nvar countLontane = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Lontane\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"4\" (Lontane)\n    if (secondoValore === \"4\") {\n        countLontane++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countLontane;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 280,
        "wires": [
            [
                "afd5eade6c950807",
                "1c297e5500bb084e"
            ]
        ]
    },
    {
        "id": "4ba7cc2593b03f69",
        "type": "function",
        "z": "d6a07ff22947c9d6",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Completate\nvar countCompletate = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Completate\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"5\" (Completate)\n    if (secondoValore === \"5\") {\n        countCompletate++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countCompletate;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 360,
        "wires": [
            [
                "2523ad9f06ed847c",
                "b64ea652a5c2aebb"
            ]
        ]
    },
    {
        "id": "a1f56444f8c2dd99",
        "type": "ui-gauge",
        "z": "d6a07ff22947c9d6",
        "name": "Odierne",
        "group": "bbf90eaef78f08c1",
        "order": 3,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Odierne",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#ff4d00"
            },
            {
                "from": "8",
                "color": "#ff4d00"
            },
            {
                "from": "16",
                "color": "#ff4d00"
            }
        ],
        "min": 0,
        "max": "16",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 660,
        "y": 100,
        "wires": []
    },
    {
        "id": "84cdd61b31681475",
        "type": "ui-gauge",
        "z": "d6a07ff22947c9d6",
        "name": "Prossime",
        "group": "bbf90eaef78f08c1",
        "order": 5,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Prossime",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#fff000"
            },
            {
                "from": "8",
                "color": "#fff000"
            },
            {
                "from": "16",
                "color": "#fff000"
            }
        ],
        "min": 0,
        "max": "16",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 660,
        "y": 180,
        "wires": []
    },
    {
        "id": "afd5eade6c950807",
        "type": "ui-gauge",
        "z": "d6a07ff22947c9d6",
        "name": "Lontane",
        "group": "bbf90eaef78f08c1",
        "order": 4,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Lontane",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#0000ff"
            },
            {
                "from": "8",
                "color": "#0000ff"
            },
            {
                "from": "16",
                "color": "#0000ff"
            }
        ],
        "min": 0,
        "max": "16",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 660,
        "y": 260,
        "wires": []
    },
    {
        "id": "2523ad9f06ed847c",
        "type": "ui-gauge",
        "z": "d6a07ff22947c9d6",
        "name": "Completate",
        "group": "bbf90eaef78f08c1",
        "order": 2,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Completate",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#00ff00"
            },
            {
                "from": "8",
                "color": "#00ff00"
            },
            {
                "from": "16",
                "color": "#00ff00"
            }
        ],
        "min": 0,
        "max": "16",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 670,
        "y": 340,
        "wires": []
    },
    {
        "id": "2c0c6e74efc0c94a",
        "type": "GSheet",
        "z": "d6a07ff22947c9d6",
        "creds": "25f19bdc3050b475",
        "method": "get",
        "action": "",
        "sheet": "1ziVBdDb05YX-XBrG0pFV0hKDzn4g7nXA14-cRCcmBAA",
        "cells": "Foglio1!A2:D17",
        "flatten": false,
        "name": "Acquisizione BONO",
        "x": 280,
        "y": 120,
        "wires": [
            [
                "3edb46bbf93b7891",
                "e96a20aebc5703c7",
                "754c24f2a006f15c",
                "7c03ba6715db303f",
                "4ba7cc2593b03f69"
            ]
        ]
    },
    {
        "id": "5be602c679e0cbe0",
        "type": "inject",
        "z": "d6a07ff22947c9d6",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "180",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 120,
        "wires": [
            [
                "2c0c6e74efc0c94a"
            ]
        ]
    },
    {
        "id": "d839dcfc58048068",
        "type": "GSheet",
        "z": "d6a07ff22947c9d6",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!B6",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 680,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "3a9ee867a8fb344f",
        "type": "GSheet",
        "z": "d6a07ff22947c9d6",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!C6",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 680,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "0854cc4a80c3b684",
        "type": "GSheet",
        "z": "d6a07ff22947c9d6",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!D6",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 680,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "1c297e5500bb084e",
        "type": "GSheet",
        "z": "d6a07ff22947c9d6",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!E6",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 680,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "b64ea652a5c2aebb",
        "type": "GSheet",
        "z": "d6a07ff22947c9d6",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!F6",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 680,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "9cceaa5c9d891f70",
        "type": "function",
        "z": "8d153e4e01dc9bc6",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Scadute\nvar countScadute = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Scadute\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"1\" (Scadute)\n    if (secondoValore === \"1\") {\n        countScadute++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countScadute;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 40,
        "wires": [
            [
                "637d88f617e97371",
                "ee59dcf89f87dbf4"
            ]
        ]
    },
    {
        "id": "637d88f617e97371",
        "type": "ui-gauge",
        "z": "8d153e4e01dc9bc6",
        "name": "Scadute",
        "group": "82f55174091ff4d8",
        "order": 5,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Scadute",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#ff0000"
            },
            {
                "from": "2,5",
                "color": "#ff0000"
            },
            {
                "from": "5",
                "color": "#ff0000"
            }
        ],
        "min": 0,
        "max": "5",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 640,
        "y": 20,
        "wires": []
    },
    {
        "id": "992836b08679f375",
        "type": "function",
        "z": "8d153e4e01dc9bc6",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Odierne\nvar countOdierne = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Odierne\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"2\" (Odierne)\n    if (secondoValore === \"2\") {\n        countOdierne++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countOdierne;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 120,
        "wires": [
            [
                "b2efcfed27e71de8",
                "14677322ad358eed"
            ]
        ]
    },
    {
        "id": "ebdb32487e67a849",
        "type": "function",
        "z": "8d153e4e01dc9bc6",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Prossime\nvar countProssime = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Prossime\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"3\" (Prossime)\n    if (secondoValore === \"3\") {\n        countProssime++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countProssime;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 200,
        "wires": [
            [
                "81c4c111976ba928",
                "f4e0f2f162f0ad86"
            ]
        ]
    },
    {
        "id": "1a9051ee9305f03e",
        "type": "function",
        "z": "8d153e4e01dc9bc6",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Lontane\nvar countLontane = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Lontane\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"4\" (Lontane)\n    if (secondoValore === \"4\") {\n        countLontane++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countLontane;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 280,
        "wires": [
            [
                "873ebb9ef9f0bdfd",
                "a749700ef128c694"
            ]
        ]
    },
    {
        "id": "aff43a4c38f38056",
        "type": "function",
        "z": "8d153e4e01dc9bc6",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Completate\nvar countCompletate = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Completate\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"5\" (Completate)\n    if (secondoValore === \"5\") {\n        countCompletate++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countCompletate;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 360,
        "wires": [
            [
                "6c218c87629719f1",
                "db3d9d8fcabc253b"
            ]
        ]
    },
    {
        "id": "b2efcfed27e71de8",
        "type": "ui-gauge",
        "z": "8d153e4e01dc9bc6",
        "name": "Odierne",
        "group": "82f55174091ff4d8",
        "order": 4,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Odierne",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#ff4d00"
            },
            {
                "from": "2,5",
                "color": "#ff4d00"
            },
            {
                "from": "5",
                "color": "#ff4d00"
            }
        ],
        "min": 0,
        "max": "5",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 640,
        "y": 100,
        "wires": []
    },
    {
        "id": "81c4c111976ba928",
        "type": "ui-gauge",
        "z": "8d153e4e01dc9bc6",
        "name": "Prossime",
        "group": "82f55174091ff4d8",
        "order": 3,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Prossime",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#fff000"
            },
            {
                "from": "2,5",
                "color": "#fff000"
            },
            {
                "from": "5",
                "color": "#fff000"
            }
        ],
        "min": 0,
        "max": "5",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 640,
        "y": 180,
        "wires": []
    },
    {
        "id": "873ebb9ef9f0bdfd",
        "type": "ui-gauge",
        "z": "8d153e4e01dc9bc6",
        "name": "Lontane",
        "group": "82f55174091ff4d8",
        "order": 2,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Lontane",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#0000ff"
            },
            {
                "from": "2,5",
                "color": "#0000ff"
            },
            {
                "from": "5",
                "color": "#0000ff"
            }
        ],
        "min": 0,
        "max": "5",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 640,
        "y": 260,
        "wires": []
    },
    {
        "id": "6c218c87629719f1",
        "type": "ui-gauge",
        "z": "8d153e4e01dc9bc6",
        "name": "Completate",
        "group": "82f55174091ff4d8",
        "order": 1,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Completate",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#00ff00"
            },
            {
                "from": "2,5",
                "color": "#00ff00"
            },
            {
                "from": "5",
                "color": "#00ff00"
            }
        ],
        "min": 0,
        "max": "5",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 650,
        "y": 340,
        "wires": []
    },
    {
        "id": "54e0a6f41453b2f4",
        "type": "GSheet",
        "z": "8d153e4e01dc9bc6",
        "creds": "25f19bdc3050b475",
        "method": "get",
        "action": "",
        "sheet": "1MDn3fgd9XlbG9dhuPdHE86jeKYoiOP010u4PtmFR9ho",
        "cells": "Foglio1!A2:D6",
        "flatten": false,
        "name": "Acquisizione Idrico",
        "x": 270,
        "y": 120,
        "wires": [
            [
                "9cceaa5c9d891f70",
                "992836b08679f375",
                "ebdb32487e67a849",
                "1a9051ee9305f03e",
                "aff43a4c38f38056"
            ]
        ]
    },
    {
        "id": "3968b31b288a704c",
        "type": "inject",
        "z": "8d153e4e01dc9bc6",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "180",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 120,
        "wires": [
            [
                "54e0a6f41453b2f4"
            ]
        ]
    },
    {
        "id": "ee59dcf89f87dbf4",
        "type": "GSheet",
        "z": "8d153e4e01dc9bc6",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!B5",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 660,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "14677322ad358eed",
        "type": "GSheet",
        "z": "8d153e4e01dc9bc6",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!C5",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 660,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "f4e0f2f162f0ad86",
        "type": "GSheet",
        "z": "8d153e4e01dc9bc6",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!D5",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 660,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "a749700ef128c694",
        "type": "GSheet",
        "z": "8d153e4e01dc9bc6",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!E5",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 660,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "db3d9d8fcabc253b",
        "type": "GSheet",
        "z": "8d153e4e01dc9bc6",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!F5",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 660,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "7aa6d6ee7e23acaa",
        "type": "function",
        "z": "f6f2bdebccc6eb71",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Scadute\nvar countScadute = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Scadute\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"1\" (Scadute)\n    if (secondoValore === \"1\") {\n        countScadute++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countScadute;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 40,
        "wires": [
            [
                "bb8b7cf08df46c2b",
                "96bf8ad2ed384a1e"
            ]
        ]
    },
    {
        "id": "bb8b7cf08df46c2b",
        "type": "ui-gauge",
        "z": "f6f2bdebccc6eb71",
        "name": "Scadute",
        "group": "b2c746788e527ec4",
        "order": 5,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Scadute",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#ff0000"
            },
            {
                "from": "3,5",
                "color": "#ff0000"
            },
            {
                "from": "7",
                "color": "#ff0000"
            }
        ],
        "min": 0,
        "max": "7",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 640,
        "y": 20,
        "wires": []
    },
    {
        "id": "74a5ae35610a3eb3",
        "type": "function",
        "z": "f6f2bdebccc6eb71",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Odierne\nvar countOdierne = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Odierne\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"2\" (Odierne)\n    if (secondoValore === \"2\") {\n        countOdierne++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countOdierne;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 120,
        "wires": [
            [
                "901cca15fda38f6a",
                "928d05344fe9bf79"
            ]
        ]
    },
    {
        "id": "88f188824553b5e3",
        "type": "function",
        "z": "f6f2bdebccc6eb71",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Prossime\nvar countProssime = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Prossime\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"3\" (Prossime)\n    if (secondoValore === \"3\") {\n        countProssime++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countProssime;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 200,
        "wires": [
            [
                "6c5e4f6277d8d92b",
                "8b5c80aa9921a0ee"
            ]
        ]
    },
    {
        "id": "9eefbd8bec7541bb",
        "type": "function",
        "z": "f6f2bdebccc6eb71",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Lontane\nvar countLontane = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Lontane\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"4\" (Lontane)\n    if (secondoValore === \"4\") {\n        countLontane++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countLontane;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 280,
        "wires": [
            [
                "724f4456317477a3",
                "4c235cbcc54e4a92"
            ]
        ]
    },
    {
        "id": "37eb7b3a58130465",
        "type": "function",
        "z": "f6f2bdebccc6eb71",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Completate\nvar countCompletate = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Completate\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"5\" (Completate)\n    if (secondoValore === \"5\") {\n        countCompletate++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countCompletate;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 360,
        "wires": [
            [
                "86a84bea1012e034",
                "fbd4e6e4de54a8e2"
            ]
        ]
    },
    {
        "id": "901cca15fda38f6a",
        "type": "ui-gauge",
        "z": "f6f2bdebccc6eb71",
        "name": "Odierne",
        "group": "b2c746788e527ec4",
        "order": 4,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Odierne",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#ff4d00"
            },
            {
                "from": "3,5",
                "color": "#ff4d00"
            },
            {
                "from": "7",
                "color": "#ff4d00"
            }
        ],
        "min": 0,
        "max": "7",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 640,
        "y": 100,
        "wires": []
    },
    {
        "id": "6c5e4f6277d8d92b",
        "type": "ui-gauge",
        "z": "f6f2bdebccc6eb71",
        "name": "Prossime",
        "group": "b2c746788e527ec4",
        "order": 3,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Prossime",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#fff000"
            },
            {
                "from": "3,5",
                "color": "#fff000"
            },
            {
                "from": "7",
                "color": "#fff000"
            }
        ],
        "min": 0,
        "max": "7",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 640,
        "y": 180,
        "wires": []
    },
    {
        "id": "724f4456317477a3",
        "type": "ui-gauge",
        "z": "f6f2bdebccc6eb71",
        "name": "Lontane",
        "group": "b2c746788e527ec4",
        "order": 2,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Lontane",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#0000ff"
            },
            {
                "from": "3,5",
                "color": "#0000ff"
            },
            {
                "from": "7",
                "color": "#0000ff"
            }
        ],
        "min": 0,
        "max": "7",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 640,
        "y": 260,
        "wires": []
    },
    {
        "id": "86a84bea1012e034",
        "type": "ui-gauge",
        "z": "f6f2bdebccc6eb71",
        "name": "Completate",
        "group": "b2c746788e527ec4",
        "order": 1,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Completate",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#00ff00"
            },
            {
                "from": "3,5",
                "color": "#00ff00"
            },
            {
                "from": "7",
                "color": "#00ff00"
            }
        ],
        "min": 0,
        "max": "7",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 650,
        "y": 340,
        "wires": []
    },
    {
        "id": "4da9433694003fd3",
        "type": "GSheet",
        "z": "f6f2bdebccc6eb71",
        "creds": "25f19bdc3050b475",
        "method": "get",
        "action": "",
        "sheet": "1LFOfYOLSMsYnl-p7vJxAZfOIif7xIV7HffM4geuRr2c",
        "cells": "Foglio1!A2:D8",
        "flatten": false,
        "name": "Acquisizione FAS",
        "x": 270,
        "y": 120,
        "wires": [
            [
                "7aa6d6ee7e23acaa",
                "74a5ae35610a3eb3",
                "88f188824553b5e3",
                "9eefbd8bec7541bb",
                "37eb7b3a58130465"
            ]
        ]
    },
    {
        "id": "a3a7b387efe26d67",
        "type": "inject",
        "z": "f6f2bdebccc6eb71",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "180",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 120,
        "wires": [
            [
                "4da9433694003fd3"
            ]
        ]
    },
    {
        "id": "96bf8ad2ed384a1e",
        "type": "GSheet",
        "z": "f6f2bdebccc6eb71",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!B4",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 660,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "928d05344fe9bf79",
        "type": "GSheet",
        "z": "f6f2bdebccc6eb71",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!C4",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 660,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "8b5c80aa9921a0ee",
        "type": "GSheet",
        "z": "f6f2bdebccc6eb71",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!D4",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 660,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "4c235cbcc54e4a92",
        "type": "GSheet",
        "z": "f6f2bdebccc6eb71",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!E4",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 660,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "fbd4e6e4de54a8e2",
        "type": "GSheet",
        "z": "f6f2bdebccc6eb71",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!F4",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 660,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "9876944d9f23dfb4",
        "type": "function",
        "z": "8a10c241be2dffac",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Scadute\nvar countScadute = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Scadute\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"1\" (Scadute)\n    if (secondoValore === \"1\") {\n        countScadute++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countScadute;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 40,
        "wires": [
            [
                "29cd723f187f1ed8",
                "72ab2ca3d0d94125"
            ]
        ]
    },
    {
        "id": "72ab2ca3d0d94125",
        "type": "ui-gauge",
        "z": "8a10c241be2dffac",
        "name": "Scadute",
        "group": "aa9dd4a848f9fef2",
        "order": 5,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Scadute",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#ff0000"
            },
            {
                "from": "14",
                "color": "#ff0000"
            },
            {
                "from": "28",
                "color": "#ff0000"
            }
        ],
        "min": 0,
        "max": "28",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 640,
        "y": 60,
        "wires": []
    },
    {
        "id": "2f35d63f0fd82a15",
        "type": "function",
        "z": "8a10c241be2dffac",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Odierne\nvar countOdierne = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Odierne\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"2\" (Odierne)\n    if (secondoValore === \"2\") {\n        countOdierne++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countOdierne;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 120,
        "wires": [
            [
                "ced2b93a15d75540",
                "98d917161283e7c7"
            ]
        ]
    },
    {
        "id": "aae04f66e4a5d523",
        "type": "function",
        "z": "8a10c241be2dffac",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Prossime\nvar countProssime = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Prossime\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"3\" (Prossime)\n    if (secondoValore === \"3\") {\n        countProssime++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countProssime;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 200,
        "wires": [
            [
                "ef44f449841ef2e5",
                "0e0403eaa33fccd8"
            ]
        ]
    },
    {
        "id": "028607265c9d0746",
        "type": "function",
        "z": "8a10c241be2dffac",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Lontane\nvar countLontane = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Lontane\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"4\" (Lontane)\n    if (secondoValore === \"4\") {\n        countLontane++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countLontane;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 280,
        "wires": [
            [
                "a1c812a3803f2609",
                "2d32c9d92796f46e"
            ]
        ]
    },
    {
        "id": "fd15e669fd761b6a",
        "type": "function",
        "z": "8a10c241be2dffac",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Completate\nvar countCompletate = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Completate\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"5\" (Completate)\n    if (secondoValore === \"5\") {\n        countCompletate++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countCompletate;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 360,
        "wires": [
            [
                "a0c09da9f570f783",
                "3eb5efca27988b8c"
            ]
        ]
    },
    {
        "id": "98d917161283e7c7",
        "type": "ui-gauge",
        "z": "8a10c241be2dffac",
        "name": "Odierne",
        "group": "aa9dd4a848f9fef2",
        "order": 4,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Odierne",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#ff4d00"
            },
            {
                "from": "14",
                "color": "#ff4d00"
            },
            {
                "from": "28",
                "color": "#ff4d00"
            }
        ],
        "min": 0,
        "max": "28",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 640,
        "y": 140,
        "wires": []
    },
    {
        "id": "0e0403eaa33fccd8",
        "type": "ui-gauge",
        "z": "8a10c241be2dffac",
        "name": "Prossime",
        "group": "aa9dd4a848f9fef2",
        "order": 3,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Prossime",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#fff000"
            },
            {
                "from": "14",
                "color": "#fff000"
            },
            {
                "from": "28",
                "color": "#fff000"
            }
        ],
        "min": 0,
        "max": "28",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 640,
        "y": 220,
        "wires": []
    },
    {
        "id": "2d32c9d92796f46e",
        "type": "ui-gauge",
        "z": "8a10c241be2dffac",
        "name": "Lontane",
        "group": "aa9dd4a848f9fef2",
        "order": 2,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Lontane",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#0000ff"
            },
            {
                "from": "14",
                "color": "#0000ff"
            },
            {
                "from": "28",
                "color": "#0000ff"
            }
        ],
        "min": 0,
        "max": "28",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 640,
        "y": 300,
        "wires": []
    },
    {
        "id": "3eb5efca27988b8c",
        "type": "ui-gauge",
        "z": "8a10c241be2dffac",
        "name": "Completate",
        "group": "aa9dd4a848f9fef2",
        "order": 1,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Completate",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#00ff00"
            },
            {
                "from": "14",
                "color": "#00ff00"
            },
            {
                "from": "28",
                "color": "#00ff00"
            }
        ],
        "min": 0,
        "max": "28",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 650,
        "y": 380,
        "wires": []
    },
    {
        "id": "eaeee52419e4129d",
        "type": "GSheet",
        "z": "8a10c241be2dffac",
        "creds": "25f19bdc3050b475",
        "method": "get",
        "action": "",
        "sheet": "1lcvlmQaZ99HBOnXqW1kvxI0D_GO7pMz_KnkNKz5ntgo",
        "cells": "Foglio1!A2:D29",
        "flatten": false,
        "name": "Acquisizione KITO",
        "x": 270,
        "y": 120,
        "wires": [
            [
                "9876944d9f23dfb4",
                "fd15e669fd761b6a",
                "028607265c9d0746",
                "aae04f66e4a5d523",
                "2f35d63f0fd82a15"
            ]
        ]
    },
    {
        "id": "e95e8118bed63be8",
        "type": "inject",
        "z": "8a10c241be2dffac",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "180",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 120,
        "wires": [
            [
                "eaeee52419e4129d"
            ]
        ]
    },
    {
        "id": "29cd723f187f1ed8",
        "type": "GSheet",
        "z": "8a10c241be2dffac",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!B2",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 660,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "ced2b93a15d75540",
        "type": "GSheet",
        "z": "8a10c241be2dffac",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!C2",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 660,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "ef44f449841ef2e5",
        "type": "GSheet",
        "z": "8a10c241be2dffac",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!D2",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 660,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "a1c812a3803f2609",
        "type": "GSheet",
        "z": "8a10c241be2dffac",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!E2",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 660,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "a0c09da9f570f783",
        "type": "GSheet",
        "z": "8a10c241be2dffac",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!F2",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 660,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "8cd502dadfcc5a87",
        "type": "function",
        "z": "a2e9bfc377f52fbe",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Scadute\nvar countScadute = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Scadute\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"1\" (Scadute)\n    if (secondoValore === \"1\") {\n        countScadute++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countScadute;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 40,
        "wires": [
            [
                "c29bb2858173abfd",
                "6afa6db33b2517ac"
            ]
        ]
    },
    {
        "id": "c29bb2858173abfd",
        "type": "ui-gauge",
        "z": "a2e9bfc377f52fbe",
        "name": "Scadute",
        "group": "0f31a9627eaafebd",
        "order": 5,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Scadute",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#ff0000"
            },
            {
                "from": "11,5",
                "color": "#ff0000"
            },
            {
                "from": "23",
                "color": "#ff0000"
            }
        ],
        "min": 0,
        "max": "23",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 660,
        "y": 20,
        "wires": []
    },
    {
        "id": "70a4d4b93f74dc5d",
        "type": "function",
        "z": "a2e9bfc377f52fbe",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Odierne\nvar countOdierne = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Odierne\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"2\" (Odierne)\n    if (secondoValore === \"2\") {\n        countOdierne++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countOdierne;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 120,
        "wires": [
            [
                "2e966fc16884461b",
                "c7ba3953bb8209cf"
            ]
        ]
    },
    {
        "id": "6b18630afcd07c51",
        "type": "function",
        "z": "a2e9bfc377f52fbe",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Prossime\nvar countProssime = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Prossime\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"3\" (Prossime)\n    if (secondoValore === \"3\") {\n        countProssime++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countProssime;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 200,
        "wires": [
            [
                "7ea595f25edc724b",
                "de808c4278582012"
            ]
        ]
    },
    {
        "id": "c1b331fe49ca184d",
        "type": "function",
        "z": "a2e9bfc377f52fbe",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Lontane\nvar countLontane = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Lontane\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"4\" (Lontane)\n    if (secondoValore === \"4\") {\n        countLontane++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countLontane;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 280,
        "wires": [
            [
                "2d2cd8eb0e01d507",
                "89e5e5b40e053c3e"
            ]
        ]
    },
    {
        "id": "8c33db6038af5409",
        "type": "function",
        "z": "a2e9bfc377f52fbe",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Completate\nvar countCompletate = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Completate\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var secondoValore = msg.payload[i][1]; // Ottieni il secondo valore dell'array\n\n    // Incrementa il conteggio se il secondo valore è \"5\" (Completate)\n    if (secondoValore === \"5\") {\n        countCompletate++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countCompletate;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 360,
        "wires": [
            [
                "7575c36f6acb71eb",
                "c05a6b6be0166742"
            ]
        ]
    },
    {
        "id": "2e966fc16884461b",
        "type": "ui-gauge",
        "z": "a2e9bfc377f52fbe",
        "name": "Odierne",
        "group": "0f31a9627eaafebd",
        "order": 4,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Odierne",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#ff4d00"
            },
            {
                "from": "11,5",
                "color": "#ff4d00"
            },
            {
                "from": "23",
                "color": "#ff4d00"
            }
        ],
        "min": 0,
        "max": "23",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 660,
        "y": 100,
        "wires": []
    },
    {
        "id": "7ea595f25edc724b",
        "type": "ui-gauge",
        "z": "a2e9bfc377f52fbe",
        "name": "Prossime",
        "group": "0f31a9627eaafebd",
        "order": 3,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Prossime",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#fff000"
            },
            {
                "from": "11,5",
                "color": "#fff000"
            },
            {
                "from": "23",
                "color": "#fff000"
            }
        ],
        "min": 0,
        "max": "23",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 660,
        "y": 180,
        "wires": []
    },
    {
        "id": "2d2cd8eb0e01d507",
        "type": "ui-gauge",
        "z": "a2e9bfc377f52fbe",
        "name": "Lontane",
        "group": "0f31a9627eaafebd",
        "order": 2,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Lontane",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#0000ff"
            },
            {
                "from": "11,5",
                "color": "#0000ff"
            },
            {
                "from": "23",
                "color": "#0000ff"
            }
        ],
        "min": 0,
        "max": "23",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 660,
        "y": 260,
        "wires": []
    },
    {
        "id": "7575c36f6acb71eb",
        "type": "ui-gauge",
        "z": "a2e9bfc377f52fbe",
        "name": "Completate",
        "group": "0f31a9627eaafebd",
        "order": 1,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Completate",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#00ff00"
            },
            {
                "from": "11,5",
                "color": "#00ff00"
            },
            {
                "from": "23",
                "color": "#00ff00"
            }
        ],
        "min": 0,
        "max": "23",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 670,
        "y": 340,
        "wires": []
    },
    {
        "id": "a28e1ca441758cd5",
        "type": "GSheet",
        "z": "a2e9bfc377f52fbe",
        "creds": "25f19bdc3050b475",
        "method": "get",
        "action": "",
        "sheet": "1JnfII5N6dyVfvLfyexxVzacZqU2y7BvvEZWJ3IQ5Yws",
        "cells": "Foglio1!A3:D25",
        "flatten": false,
        "name": "Acquisizione MORRIS",
        "x": 280,
        "y": 120,
        "wires": [
            [
                "8cd502dadfcc5a87",
                "70a4d4b93f74dc5d",
                "6b18630afcd07c51",
                "c1b331fe49ca184d",
                "8c33db6038af5409"
            ]
        ]
    },
    {
        "id": "754f4c404454d86d",
        "type": "inject",
        "z": "a2e9bfc377f52fbe",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "180",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 120,
        "wires": [
            [
                "a28e1ca441758cd5"
            ]
        ]
    },
    {
        "id": "6afa6db33b2517ac",
        "type": "GSheet",
        "z": "a2e9bfc377f52fbe",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!B3",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 680,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "c7ba3953bb8209cf",
        "type": "GSheet",
        "z": "a2e9bfc377f52fbe",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!C3",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 680,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "de808c4278582012",
        "type": "GSheet",
        "z": "a2e9bfc377f52fbe",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!D3",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 680,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "89e5e5b40e053c3e",
        "type": "GSheet",
        "z": "a2e9bfc377f52fbe",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!E3",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 680,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "c05a6b6be0166742",
        "type": "GSheet",
        "z": "a2e9bfc377f52fbe",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!F3",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 680,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "4550f1bb1763f03d",
        "type": "function",
        "z": "342cd2c7e4e3b12f",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Scadute\nvar countScadute = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Scadute\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var quartoValore = msg.payload[i][3]; // Ottieni il quarto valore dell'array\n\n    // Incrementa il conteggio se il quarto valore è \"1\" (Scadute)\n    if (quartoValore === \"1\") {\n        countScadute++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countScadute;\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 40,
        "wires": [
            [
                "04903dd31de225bc",
                "19ab15232b830e32"
            ]
        ]
    },
    {
        "id": "04903dd31de225bc",
        "type": "ui-gauge",
        "z": "342cd2c7e4e3b12f",
        "name": "Scadute",
        "group": "fefa1d931d830ed7",
        "order": 5,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Scadute",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#ff0000"
            },
            {
                "from": "4,5",
                "color": "#ff0000"
            },
            {
                "from": "9",
                "color": "#ff0000"
            }
        ],
        "min": 0,
        "max": "9",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 700,
        "y": 20,
        "wires": []
    },
    {
        "id": "26565cfd3a90b424",
        "type": "function",
        "z": "342cd2c7e4e3b12f",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Odierne\nvar countOdierne = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Odierne\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var quartoValore = msg.payload[i][3]; // Ottieni il quarto valore dell'array\n\n    // Incrementa il conteggio se il quarto valore è \"2\" (Odierne)\n    if (quartoValore === \"2\") {\n        countOdierne++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countOdierne;\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [
                "bb9ba46492ce3df5",
                "9323e4e34807b76e"
            ]
        ]
    },
    {
        "id": "435b12610abb925f",
        "type": "function",
        "z": "342cd2c7e4e3b12f",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Prossime\nvar countProssime = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Prossime\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var quartoValore = msg.payload[i][3]; // Ottieni il quarto valore dell'array\n\n    // Incrementa il conteggio se il quarto valore è \"3\" (Prossime)\n    if (quartoValore === \"3\") {\n        countProssime++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countProssime;\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 200,
        "wires": [
            [
                "f63b3ec47e6d076e",
                "3ec837986ada6bb2"
            ]
        ]
    },
    {
        "id": "9cc137ad5047fe72",
        "type": "function",
        "z": "342cd2c7e4e3b12f",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Lontane\nvar countLontane = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Lontane\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var quartoValore = msg.payload[i][3]; // Ottieni il quarto valore dell'array\n\n    // Incrementa il conteggio se il quarto valore è \"4\" (Lontane)\n    if (quartoValore === \"4\") {\n        countLontane++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countLontane;\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 280,
        "wires": [
            [
                "594b72aed95ccba6",
                "5d568ceb6cd29fbf"
            ]
        ]
    },
    {
        "id": "ba8de5c75c06344c",
        "type": "function",
        "z": "342cd2c7e4e3b12f",
        "name": "Scrematura",
        "func": "// Inizializza il conteggio dei valori per Completate\nvar countCompletate = 0;\n\n// Itera attraverso l'array di input per contare i valori per tipo \"Completate\"\nfor (var i = 0; i < msg.payload.length; i++) {\n    var quartoValore = msg.payload[i][3]; // Ottieni il quarto valore dell'array\n\n    // Incrementa il conteggio se il quarto valore è \"5\" (Completate)\n    if (quartoValore === \"5\") {\n        countCompletate++;\n    }\n}\n\n// Assegna il conteggio al payload del messaggio\nmsg.payload = countCompletate;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 360,
        "wires": [
            [
                "a2b2d05db5710659",
                "2ee5e1fd1a1d90ea"
            ]
        ]
    },
    {
        "id": "bb9ba46492ce3df5",
        "type": "ui-gauge",
        "z": "342cd2c7e4e3b12f",
        "name": "Odierne",
        "group": "fefa1d931d830ed7",
        "order": 4,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Odierne",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#ff4d00"
            },
            {
                "from": "4,5",
                "color": "#ff4d00"
            },
            {
                "from": "9",
                "color": "#ff4d00"
            }
        ],
        "min": 0,
        "max": "9",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 700,
        "y": 100,
        "wires": []
    },
    {
        "id": "f63b3ec47e6d076e",
        "type": "ui-gauge",
        "z": "342cd2c7e4e3b12f",
        "name": "Prossime",
        "group": "fefa1d931d830ed7",
        "order": 3,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Prossime",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#fff000"
            },
            {
                "from": "4.5",
                "color": "#fff000"
            },
            {
                "from": "9",
                "color": "#fff000"
            }
        ],
        "min": 0,
        "max": "9",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 700,
        "y": 180,
        "wires": []
    },
    {
        "id": "594b72aed95ccba6",
        "type": "ui-gauge",
        "z": "342cd2c7e4e3b12f",
        "name": "Lontane",
        "group": "fefa1d931d830ed7",
        "order": 2,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Lontane",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#0000ff"
            },
            {
                "from": "4,5",
                "color": "#0000ff"
            },
            {
                "from": "9",
                "color": "#0000ff"
            }
        ],
        "min": 0,
        "max": "9",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 700,
        "y": 260,
        "wires": []
    },
    {
        "id": "a2b2d05db5710659",
        "type": "ui-gauge",
        "z": "342cd2c7e4e3b12f",
        "name": "Completate",
        "group": "fefa1d931d830ed7",
        "order": 1,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Completate",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#00ff00"
            },
            {
                "from": "4,5",
                "color": "#00ff00"
            },
            {
                "from": "9",
                "color": "#00ff00"
            }
        ],
        "min": 0,
        "max": "9",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 710,
        "y": 340,
        "wires": []
    },
    {
        "id": "53f9096a328e574e",
        "type": "inject",
        "z": "342cd2c7e4e3b12f",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "180",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 120,
        "wires": [
            [
                "6b92dfeac5a5a624"
            ]
        ]
    },
    {
        "id": "6b92dfeac5a5a624",
        "type": "GSheet",
        "z": "342cd2c7e4e3b12f",
        "creds": "25f19bdc3050b475",
        "method": "get",
        "action": "",
        "sheet": "1pE38j_rpq_xZByxyXqmWQfcIlOvFVYJRNQyRlBVDUbs",
        "cells": "Foglio1!A2:E10",
        "flatten": false,
        "name": "Acquisizione Manu. Esterna",
        "x": 300,
        "y": 120,
        "wires": [
            [
                "435b12610abb925f",
                "26565cfd3a90b424",
                "9cc137ad5047fe72",
                "ba8de5c75c06344c",
                "4550f1bb1763f03d"
            ]
        ]
    },
    {
        "id": "19ab15232b830e32",
        "type": "GSheet",
        "z": "342cd2c7e4e3b12f",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!B8",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 720,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "9323e4e34807b76e",
        "type": "GSheet",
        "z": "342cd2c7e4e3b12f",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!C8",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 720,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "3ec837986ada6bb2",
        "type": "GSheet",
        "z": "342cd2c7e4e3b12f",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!D8",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 720,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "5d568ceb6cd29fbf",
        "type": "GSheet",
        "z": "342cd2c7e4e3b12f",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!E8",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 720,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "2ee5e1fd1a1d90ea",
        "type": "GSheet",
        "z": "342cd2c7e4e3b12f",
        "creds": "25f19bdc3050b475",
        "method": "update",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!F8",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 720,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "c28024ffc4cb58fd",
        "type": "ui-gauge",
        "z": "1e480ff4e3a159cb",
        "name": "Scadute",
        "group": "41835a3210e295ce",
        "order": 6,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Scadute",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#ff0000"
            },
            {
                "from": "44.5",
                "color": "#ff0000"
            },
            {
                "from": "89",
                "color": "#ff0000"
            }
        ],
        "min": 0,
        "max": "89",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 580,
        "y": 20,
        "wires": []
    },
    {
        "id": "0bd7b136dc1865bd",
        "type": "ui-gauge",
        "z": "1e480ff4e3a159cb",
        "name": "Odierne",
        "group": "41835a3210e295ce",
        "order": 5,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Odierne",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#ff4d00"
            },
            {
                "from": "44,5",
                "color": "#ff4d00"
            },
            {
                "from": "89",
                "color": "#ff4d00"
            }
        ],
        "min": 0,
        "max": "89",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 580,
        "y": 60,
        "wires": []
    },
    {
        "id": "3bca050f9a32656a",
        "type": "ui-gauge",
        "z": "1e480ff4e3a159cb",
        "name": "Prossime",
        "group": "41835a3210e295ce",
        "order": 4,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Prossime",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#fff000"
            },
            {
                "from": "44,5",
                "color": "#fff000"
            },
            {
                "from": "89",
                "color": "#fff000"
            }
        ],
        "min": 0,
        "max": "89",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 580,
        "y": 100,
        "wires": []
    },
    {
        "id": "8fc8c46e0d9ae20b",
        "type": "ui-gauge",
        "z": "1e480ff4e3a159cb",
        "name": "Lontane",
        "group": "41835a3210e295ce",
        "order": 3,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Lontane",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#0000ff"
            },
            {
                "from": "44,5",
                "color": "#0000ff"
            },
            {
                "from": "89",
                "color": "#0000ff"
            }
        ],
        "min": 0,
        "max": "89",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 580,
        "y": 140,
        "wires": []
    },
    {
        "id": "f55de32e72f52b34",
        "type": "ui-gauge",
        "z": "1e480ff4e3a159cb",
        "name": "Completate",
        "group": "41835a3210e295ce",
        "order": 2,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "Completate",
        "units": "Interventi",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#00ff00"
            },
            {
                "from": "44,5",
                "color": "#00ff00"
            },
            {
                "from": "89",
                "color": "#00ff00"
            }
        ],
        "min": 0,
        "max": "89",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 590,
        "y": 180,
        "wires": []
    },
    {
        "id": "afee7d7f627af8b1",
        "type": "GSheet",
        "z": "1e480ff4e3a159cb",
        "creds": "25f19bdc3050b475",
        "method": "get",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!B9",
        "flatten": true,
        "name": "Estrazione",
        "x": 310,
        "y": 20,
        "wires": [
            [
                "dd07f07fee08a87d"
            ]
        ]
    },
    {
        "id": "5ac64316cdd362cd",
        "type": "GSheet",
        "z": "1e480ff4e3a159cb",
        "creds": "25f19bdc3050b475",
        "method": "get",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!C9",
        "flatten": false,
        "name": "Estrazione",
        "x": 310,
        "y": 60,
        "wires": [
            [
                "b879d2c81169bf61"
            ]
        ]
    },
    {
        "id": "aa07293e1ba52f5c",
        "type": "GSheet",
        "z": "1e480ff4e3a159cb",
        "creds": "25f19bdc3050b475",
        "method": "get",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!D9",
        "flatten": false,
        "name": "Estrazione",
        "x": 310,
        "y": 100,
        "wires": [
            [
                "db794ba9c11f3f0b"
            ]
        ]
    },
    {
        "id": "ee04360bcb181e76",
        "type": "GSheet",
        "z": "1e480ff4e3a159cb",
        "creds": "25f19bdc3050b475",
        "method": "get",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!E9",
        "flatten": false,
        "name": "Estrazione",
        "x": 310,
        "y": 140,
        "wires": [
            [
                "3962ac7a6032d905"
            ]
        ]
    },
    {
        "id": "d94903cc4c7a10eb",
        "type": "GSheet",
        "z": "1e480ff4e3a159cb",
        "creds": "25f19bdc3050b475",
        "method": "get",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!F9",
        "flatten": false,
        "name": "Estrazione",
        "x": 310,
        "y": 180,
        "wires": [
            [
                "b94c0e1bb85055de"
            ]
        ]
    },
    {
        "id": "47667e0b4d7a326d",
        "type": "inject",
        "z": "1e480ff4e3a159cb",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "180",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 100,
        "wires": [
            [
                "aa07293e1ba52f5c",
                "5ac64316cdd362cd",
                "afee7d7f627af8b1",
                "ee04360bcb181e76",
                "d94903cc4c7a10eb",
                "f61edd2bc868c2b7"
            ]
        ]
    },
    {
        "id": "b94c0e1bb85055de",
        "type": "function",
        "z": "1e480ff4e3a159cb",
        "name": "Pulizia",
        "func": "var numero = msg.payload[0][0]\nmsg.payload = numero;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 180,
        "wires": [
            [
                "f55de32e72f52b34"
            ]
        ]
    },
    {
        "id": "3962ac7a6032d905",
        "type": "function",
        "z": "1e480ff4e3a159cb",
        "name": "Pulizia",
        "func": "var numero = msg.payload[0][0]\nmsg.payload = numero;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 140,
        "wires": [
            [
                "8fc8c46e0d9ae20b"
            ]
        ]
    },
    {
        "id": "db794ba9c11f3f0b",
        "type": "function",
        "z": "1e480ff4e3a159cb",
        "name": "Pulizia",
        "func": "var numero = msg.payload[0][0]\nmsg.payload = numero;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 100,
        "wires": [
            [
                "3bca050f9a32656a"
            ]
        ]
    },
    {
        "id": "b879d2c81169bf61",
        "type": "function",
        "z": "1e480ff4e3a159cb",
        "name": "Pulizia",
        "func": "var numero = msg.payload[0][0]\nmsg.payload = numero;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 60,
        "wires": [
            [
                "0bd7b136dc1865bd"
            ]
        ]
    },
    {
        "id": "dd07f07fee08a87d",
        "type": "function",
        "z": "1e480ff4e3a159cb",
        "name": "Pulizia",
        "func": "var numero = msg.payload[0]\nmsg.payload = numero;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 20,
        "wires": [
            [
                "c28024ffc4cb58fd"
            ]
        ]
    },
    {
        "id": "f61edd2bc868c2b7",
        "type": "GSheet",
        "z": "1e480ff4e3a159cb",
        "creds": "25f19bdc3050b475",
        "method": "get",
        "action": "",
        "sheet": "1eID-T2GKHwTKFa30cqbAqf6bVRY5nQ0ktjb6rzIB2Ow",
        "cells": "Foglio1!G9",
        "flatten": false,
        "name": "Estrazione",
        "x": 310,
        "y": 220,
        "wires": [
            [
                "81c23365237c276c"
            ]
        ]
    },
    {
        "id": "81c23365237c276c",
        "type": "function",
        "z": "1e480ff4e3a159cb",
        "name": "Pulizia",
        "func": "var numero = msg.payload[0][0]\nmsg.payload = numero;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 220,
        "wires": [
            [
                "77156dce7271be83"
            ]
        ]
    },
    {
        "id": "77156dce7271be83",
        "type": "ui-text",
        "z": "1e480ff4e3a159cb",
        "group": "41835a3210e295ce",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Totali : ",
        "format": "{{msg.payload}}",
        "layout": "row-right",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 570,
        "y": 220,
        "wires": []
    },
    {
        "id": "5d4a63d2dfb92efd",
        "type": "inject",
        "z": "3efe85d54df4051a",
        "name": "Avvio",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * 1",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "06dedc075954c74e",
        "type": "function",
        "z": "3efe85d54df4051a",
        "name": "Case",
        "func": "// Verifica se gli array non sono vuoti\nvar lontaneNonVuote = msg.payload.Lontane && msg.payload.Lontane.length > 0;\nvar prossimeNonVuote = msg.payload.Prossime && msg.payload.Prossime.length > 0;\nvar scaduteNonVuote = msg.payload.Scadute && msg.payload.Scadute.length > 0;\n\n// Inizializza la variabile Case\nvar Case;\n\n// Definisci il nuovo payload in base ai raggruppamenti e al controllo finale\nvar nuovoPayload;\nif (prossimeNonVuote && lontaneNonVuote && scaduteNonVuote) {\n    Case = 0;\n    nuovoPayload = {\n        Lontane: msg.payload.Lontane,\n        Prossime: msg.payload.Prossime,\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else if (prossimeNonVuote && lontaneNonVuote) {\n    Case = 1;\n    nuovoPayload = {\n        Lontane: msg.payload.Lontane,\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (prossimeNonVuote && scaduteNonVuote) {\n    Case = 2;\n    nuovoPayload = {\n        Scadute: msg.payload.Scadute,\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (scaduteNonVuote && lontaneNonVuote) {\n    Case = 3;\n    nuovoPayload = {\n        Lontane: msg.payload.Lontane,\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else if (lontaneNonVuote) {\n    Case = 4;\n    delete msg.payload.Prossime;\n    nuovoPayload = {\n        Lontane: msg.payload.Lontane,\n        Case: Case\n    };\n} else if (prossimeNonVuote) {\n    Case = 5;\n    delete msg.payload.Lontane;\n    nuovoPayload = {\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (scaduteNonVuote) {\n    Case = 6;\n    nuovoPayload = {\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else {\n    Case = 100; // Imposta Case a 100 quando tutti gli array sono vuoti\n    nuovoPayload = {\n        Case: Case\n    };\n}\n\n// Ritorna il nuovo payload\nreturn { payload: nuovoPayload };\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 160,
        "wires": [
            [
                "63c54801c778a1cc"
            ]
        ]
    },
    {
        "id": "fb7e049691079847",
        "type": "function",
        "z": "3efe85d54df4051a",
        "name": "Scrematura",
        "func": "// Ottieni la data odierna\nvar today = new Date();\n\n// Inizializza gli array per i diversi raggruppamenti\nvar lontane = [];\nvar prossime = [];\nvar scadute = [];\n\n// Itera attraverso ogni voce nell'array\nmsg.payload.forEach(function (item) {\n    // Converti la stringa \"Ultima\" in un oggetto Date\n    var ultimaDate = new Date(item.Ultima);\n\n    // Calcola l'età della macchina in anni\n    var todayYear = today.getFullYear();\n    var costruzioneYear = new Date(item.Costruzione).getFullYear();\n    var age = todayYear - costruzioneYear;\n\n    // Calcola la periodicità in base all'età della macchina\n    var periodicità = age > 10 ? 365 : 730;\n\n    // Calcola la data di scadenza sommando la \"Ultima\" e la periodicità in giorni\n    var scadenzaDate = new Date(ultimaDate);\n    scadenzaDate.setDate(scadenzaDate.getDate() + periodicità);\n\n    // Calcola il numero di giorni mancanti alla data di scadenza\n    var diffTime = scadenzaDate.getTime() - today.getTime();\n    var diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n    // Aggiorna l'elemento dell'array\n    item.Scadenza = scadenzaDate.toISOString().slice(0, 10); // Formatta la data di scadenza come 'yyyy-mm-dd'\n    item.Giorni = diffDays;\n    delete item.Periodicità;\n    delete item.Costruzione;\n\n    // Verifica il valore di Giorni e aggiungi l'elemento al relativo array\n    if (diffDays > 60) {\n        lontane.push(item);\n    } else if (diffDays < 0) {\n        scadute.push(item);\n    } else {\n        prossime.push(item);\n    }\n});\n\n// Costruisci il payload finale\nvar payloadFinale = {};\nif (lontane.length > 0) {\n    payloadFinale.Lontane = lontane;\n}\nif (prossime.length > 0) {\n    payloadFinale.Prossime = prossime;\n}\nif (scadute.length > 0) {\n    payloadFinale.Scadute = scadute;\n}\n\n// Ritorna il messaggio con il payload finale\nreturn { payload: payloadFinale };\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "06dedc075954c74e"
            ]
        ]
    },
    {
        "id": "3201552cd9d91a6d",
        "type": "switch",
        "z": "3efe85d54df4051a",
        "name": "",
        "property": "payload.Case",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 890,
        "y": 160,
        "wires": [
            [
                "56ed667eb2a6f5bc"
            ],
            [
                "d85317e96eec6c79"
            ],
            [
                "3f74a6cf14ed2be3"
            ],
            [
                "3b0a0a16104698bd"
            ],
            [
                "883925cbe64b7870"
            ],
            [
                "8e24f0cae5f6b4d8"
            ],
            [
                "5596553e143d7dc5"
            ]
        ]
    },
    {
        "id": "63c54801c778a1cc",
        "type": "switch",
        "z": "3efe85d54df4051a",
        "name": "Filtro casi",
        "property": "payload.Case",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "0",
                "vt": "num",
                "v2": "6",
                "v2t": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 760,
        "y": 160,
        "wires": [
            [
                "3201552cd9d91a6d"
            ]
        ]
    },
    {
        "id": "8e24f0cae5f6b4d8",
        "type": "function",
        "z": "3efe85d54df4051a",
        "name": "tab Prossime",
        "func": "// Funzione per creare una tabella HTML con rientro dalle celle\nfunction createTable(data, tableName) {\n    var tableHTML = '<h2>' + tableName + '</h2><table border=\"1\" style=\"border-collapse: collapse;\"><tr><th style=\"padding: 8px;\">ID</th><th style=\"padding: 8px;\">Ultima</th><th style=\"padding: 8px;\">Scadenza</th><th style=\"padding: 8px;\">Giorni</th></tr>';\n    data.forEach(function (item) {\n        tableHTML += '<tr>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.ID + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Ultima + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Scadenza + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Giorni + '</td>';\n        tableHTML += '</tr>';\n    });\n    tableHTML += '</table>';\n    return tableHTML;\n}\n\n// Estrai le informazioni per la tabella \"Prossime\" dal payload\nvar prossime = msg.payload.Prossime || [];\n\n// Crea la tabella HTML per gli elementi \"Prossime\"\nvar prossimeTableHTML = createTable(prossime, 'Prossime');\n\n// Aggiungi l'oggetto del messaggio\nmsg.topic = \"Manutenzione Esterna Mezzi Di Sollevamento\";\n\n// Ritorna il corpo dell'email con la tabella \"Prossime\"\nreturn { payload: prossimeTableHTML, topic: msg.topic };\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 240,
        "wires": [
            [
                "a2a5fe1f93d5e2d0"
            ]
        ]
    },
    {
        "id": "883925cbe64b7870",
        "type": "function",
        "z": "3efe85d54df4051a",
        "name": "tab Lontane",
        "func": "// Funzione per creare una tabella HTML con rientro dalle celle\nfunction createTable(data, tableName) {\n    var tableHTML = '<h2>' + tableName + '</h2><table border=\"1\" style=\"border-collapse: collapse;\"><tr><th style=\"padding: 8px;\">ID</th><th style=\"padding: 8px;\">Ultima</th><th style=\"padding: 8px;\">Scadenza</th><th style=\"padding: 8px;\">Giorni</th></tr>';\n    data.forEach(function (item) {\n        tableHTML += '<tr>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.ID + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Ultima + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Scadenza + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Giorni + '</td>';\n        tableHTML += '</tr>';\n    });\n    tableHTML += '</table>';\n    return tableHTML;\n}\n\n// Estrai le informazioni per la tabella \"Lontane\" dal payload\nvar lontane = msg.payload.Lontane || [];\n\n// Crea la tabella HTML per gli elementi \"Lontane\"\nvar lontaneTableHTML = createTable(lontane, 'Lontane');\n\n// Aggiungi l'oggetto del messaggio\nmsg.topic = \"Manutenzione Esterna Mezzi Di Sollevamento\";\n\n// Ritorna il corpo dell'email con la tabella \"Lontane\"\nreturn { payload: lontaneTableHTML, topic: msg.topic };\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 200,
        "wires": [
            [
                "a2a5fe1f93d5e2d0"
            ]
        ]
    },
    {
        "id": "d85317e96eec6c79",
        "type": "function",
        "z": "3efe85d54df4051a",
        "name": "tab Prossime-Lontane",
        "func": "// Funzione per creare una tabella HTML con rientro dalle celle\nfunction createTable(data, tableName) {\n    var tableHTML = '<h2>' + tableName + '</h2><table border=\"1\" style=\"border-collapse: collapse;\"><tr><th style=\"padding: 8px;\">ID</th><th style=\"padding: 8px;\">Ultima</th><th style=\"padding: 8px;\">Scadenza</th><th style=\"padding: 8px;\">Giorni</th></tr>';\n    data.forEach(function (item) {\n        tableHTML += '<tr>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.ID + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Ultima + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Scadenza + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Giorni + '</td>';\n        tableHTML += '</tr>';\n    });\n    tableHTML += '</table>';\n    return tableHTML;\n}\n\n// Estrai le informazioni per le tabelle \"Prossime\" e \"Lontane\" dal payload\nvar prossime = msg.payload.Prossime || [];\nvar lontane = msg.payload.Lontane || [];\n\n// Crea le tabelle HTML\nvar prossimeTableHTML = createTable(prossime, 'Prossime');\nvar lontaneTableHTML = createTable(lontane, 'Lontane');\n\n// Costruisci il corpo dell'email\nvar emailBody = prossimeTableHTML + lontaneTableHTML;\n\n// Aggiungi l'oggetto del messaggio\nmsg.topic = \"Manutenzione Esterna Mezzi Di Sollevamento\";\n\n// Ritorna il corpo dell'email e l'oggetto del messaggio\nreturn { payload: emailBody, topic: msg.topic };\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 80,
        "wires": [
            [
                "a2a5fe1f93d5e2d0"
            ]
        ]
    },
    {
        "id": "5596553e143d7dc5",
        "type": "function",
        "z": "3efe85d54df4051a",
        "name": "tab Scadute",
        "func": "// Funzione per creare una tabella HTML con rientro dalle celle\nfunction createTable(data, tableName) {\n    var tableHTML = '<h2>' + tableName + '</h2><table border=\"1\" style=\"border-collapse: collapse;\"><tr><th style=\"padding: 8px;\">ID</th><th style=\"padding: 8px;\">Ultima</th><th style=\"padding: 8px;\">Scadenza</th><th style=\"padding: 8px;\">Giorni</th></tr>';\n    data.forEach(function (item) {\n        tableHTML += '<tr>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.ID + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Ultima + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Scadenza + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Giorni + '</td>';\n        tableHTML += '</tr>';\n    });\n    tableHTML += '</table>';\n    return tableHTML;\n}\n\n// Estrai le informazioni per la tabella \"Scadute\" dal payload\nvar scadute = msg.payload.Scadute || [];\n\n// Crea la tabella HTML per gli elementi \"Scadute\"\nvar scaduteTableHTML = createTable(scadute, 'Scadute');\n\n// Aggiungi l'oggetto del messaggio\nmsg.topic = \"Manutenzione Esterna Mezzi Di Sollevamento\";\n\n// Ritorna il corpo dell'email con la tabella \"Scadute\"\nreturn { payload: scaduteTableHTML, topic: msg.topic };\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 280,
        "wires": [
            [
                "a2a5fe1f93d5e2d0"
            ]
        ]
    },
    {
        "id": "3b0a0a16104698bd",
        "type": "function",
        "z": "3efe85d54df4051a",
        "name": "tab Lontane-Scadute",
        "func": "// Funzione per creare una tabella HTML con rientro dalle celle\nfunction createTable(data, tableName) {\n    var tableHTML = '<h2>' + tableName + '</h2><table border=\"1\" style=\"border-collapse: collapse;\"><tr><th style=\"padding: 8px;\">ID</th><th style=\"padding: 8px;\">Ultima</th><th style=\"padding: 8px;\">Scadenza</th><th style=\"padding: 8px;\">Giorni</th></tr>';\n    data.forEach(function (item) {\n        tableHTML += '<tr>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.ID + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Ultima + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Scadenza + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Giorni + '</td>';\n        tableHTML += '</tr>';\n    });\n    tableHTML += '</table>';\n    return tableHTML;\n}\n\n// Estrai le informazioni per le tabelle \"Lontane\" e \"Scadute\" dal payload\nvar lontane = msg.payload.Lontane || [];\nvar scadute = msg.payload.Scadute || [];\n\n// Crea le tabelle HTML\nvar lontaneTableHTML = createTable(lontane, 'Lontane');\nvar scaduteTableHTML = createTable(scadute, 'Scadute');\n\n// Costruisci il corpo dell'email\nvar emailBody = lontaneTableHTML + scaduteTableHTML;\n\n// Aggiungi l'oggetto del messaggio\nmsg.topic = \"Manutenzione Esterna Mezzi Di Sollevamento\";\n\n// Ritorna il corpo dell'email e l'oggetto del messaggio\nreturn { payload: emailBody, topic: msg.topic };\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 160,
        "wires": [
            [
                "a2a5fe1f93d5e2d0"
            ]
        ]
    },
    {
        "id": "3f74a6cf14ed2be3",
        "type": "function",
        "z": "3efe85d54df4051a",
        "name": "tab Prossime-Scadute",
        "func": "// Funzione per creare una tabella HTML con rientro dalle celle\nfunction createTable(data, tableName) {\n    var tableHTML = '<h2>' + tableName + '</h2><table border=\"1\" style=\"border-collapse: collapse;\"><tr><th style=\"padding: 8px;\">ID</th><th style=\"padding: 8px;\">Ultima</th><th style=\"padding: 8px;\">Scadenza</th><th style=\"padding: 8px;\">Giorni</th></tr>';\n    data.forEach(function (item) {\n        tableHTML += '<tr>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.ID + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Ultima + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Scadenza + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Giorni + '</td>';\n        tableHTML += '</tr>';\n    });\n    tableHTML += '</table>';\n    return tableHTML;\n}\n\n// Estrai le informazioni per le tabelle \"Prossime\" e \"Scadute\" dal payload\nvar prossime = msg.payload.Prossime || [];\nvar scadute = msg.payload.Scadute || [];\n\n// Crea le tabelle HTML\nvar prossimeTableHTML = createTable(prossime, 'Prossime');\nvar scaduteTableHTML = createTable(scadute, 'Scadute');\n\n// Costruisci il corpo dell'email\nvar emailBody = prossimeTableHTML + scaduteTableHTML;\n\n// Aggiungi l'oggetto del messaggio\nmsg.topic = \"Manutenzione Esterna Mezzi Di Sollevamento\";\n\n// Ritorna il corpo dell'email e l'oggetto del messaggio\nreturn { payload: emailBody, topic: msg.topic };\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 120,
        "wires": [
            [
                "a2a5fe1f93d5e2d0"
            ]
        ]
    },
    {
        "id": "56ed667eb2a6f5bc",
        "type": "function",
        "z": "3efe85d54df4051a",
        "name": "Tab Lont-Pros-Scad",
        "func": "// Funzione per creare una tabella HTML con rientro dalle celle\nfunction createTable(data, tableName) {\n    var tableHTML = '<h2>' + tableName + '</h2><table border=\"1\" style=\"border-collapse: collapse;\"><tr><th style=\"padding: 8px;\">ID</th><th style=\"padding: 8px;\">Ultima</th><th style=\"padding: 8px;\">Scadenza</th><th style=\"padding: 8px;\">Giorni</th></tr>';\n    data.forEach(function (item) {\n        tableHTML += '<tr>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.ID + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Ultima + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Scadenza + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Giorni + '</td>';\n        tableHTML += '</tr>';\n    });\n    tableHTML += '</table>';\n    return tableHTML;\n}\n\n// Estrai le informazioni per le tabelle \"Prossime\", \"Scadute\" e \"Lontane\" dal payload\nvar prossime = msg.payload.Prossime || [];\nvar scadute = msg.payload.Scadute || [];\nvar lontane = msg.payload.Lontane || [];\n\n// Crea le tabelle HTML\nvar prossimeTableHTML = createTable(prossime, 'Prossime');\nvar scaduteTableHTML = createTable(scadute, 'Scadute');\nvar lontaneTableHTML = createTable(lontane, 'Lontane');\n\n// Costruisci il corpo dell'email\nvar emailBody = prossimeTableHTML + scaduteTableHTML + lontaneTableHTML;\n\n// Aggiungi l'oggetto del messaggio\nmsg.topic = \"Manutenzione Esterna Mezzi Di Sollevamento\";\n\n// Ritorna il corpo dell'email e l'oggetto del messaggio\nreturn { payload: emailBody, topic: msg.topic };\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 40,
        "wires": [
            [
                "a2a5fe1f93d5e2d0"
            ]
        ]
    },
    {
        "id": "a2a5fe1f93d5e2d0",
        "type": "e-mail",
        "z": "3efe85d54df4051a",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "gxausa.studenti@itslombardiameccatronica.it",
        "dname": "Impianto Sollevamento",
        "x": 1420,
        "y": 160,
        "wires": []
    },
    {
        "id": "0c76f4ac759b43bc",
        "type": "function",
        "z": "3efe85d54df4051a",
        "name": "Query",
        "func": "// Costruisci la query SQL\nvar query = \"SELECT ID, DATE_FORMAT(Ultima, '%Y-%m-%d') AS Ultima, Costruzione FROM manutenzione_esterna_mezzi_di_sollevamento\";\n\n// Assegna la query al msg.topic\nmsg.topic = query;\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "e21b8dcd9e993935",
        "type": "e-mail in",
        "z": "3efe85d54df4051a",
        "name": "Risposta Luca",
        "protocol": "IMAP",
        "server": "imap.gmail.com",
        "useSSL": true,
        "autotls": "never",
        "port": "993",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "box": "INBOX",
        "disposition": "None",
        "criteria": "UNSEEN",
        "repeat": "60",
        "fetch": "auto",
        "inputs": 0,
        "x": 90,
        "y": 820,
        "wires": [
            [
                "8cd31b4c771acf33"
            ]
        ]
    },
    {
        "id": "8cd31b4c771acf33",
        "type": "switch",
        "z": "3efe85d54df4051a",
        "name": "filtro mail",
        "property": "from",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "xausagiovanni@gmail.com",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 240,
        "y": 820,
        "wires": [
            [
                "93282e1c5ea8058a"
            ]
        ]
    },
    {
        "id": "93282e1c5ea8058a",
        "type": "switch",
        "z": "3efe85d54df4051a",
        "name": "Filtro manutenzione",
        "property": "msg.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Esterna",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 410,
        "y": 820,
        "wires": [
            [
                "b1ba3851d2a53574",
                "13f22377c358eb8c"
            ]
        ]
    },
    {
        "id": "b1ba3851d2a53574",
        "type": "function",
        "z": "3efe85d54df4051a",
        "name": "Scrematura Dati",
        "func": "// Rimuovi gli spazi vuoti all'interno del topic e ottieni i valori\nvar valoriOggetto = msg.topic.trim().split(',');\n\n// Elimina il primo valore dall'oggetto\nvaloriOggetto.shift();\n\n// Ricomponi il topic senza il primo valore\nvar nuovoTopic = valoriOggetto.join(',');\n\n// Estrai la data corrente\nvar dataAttuale = new Date();\nvar dataFormattata = dataAttuale.toLocaleDateString();\n\n// Estrai i valori e le date dal testo della mail\nvar testoMail = msg.payload.trim(); // Rimuovi spazi bianchi all'inizio e alla fine\nvar valori = valoriOggetto.map(function(valore, index) {\n    var nota = ''; // Inizializza la nota vuota\n    // Se il testo della mail contiene più valori separati da virgola,\n    // cerca di estrarre la nota corrispondente al valore\n    if (testoMail) {\n        var note = testoMail.split(',');\n        nota = note[index] || ''; // Prendi la nota corrispondente al valore\n    }\n    return [valore.trim(), dataFormattata, nota.trim()]; // Restituisci il valore, la data e la nota\n});\n\n// Cancella tutte le altre variabili eccetto topic\ndelete msg.payload;\ndelete msg.date;\ndelete msg.header;\ndelete msg.html;\ndelete msg.from;\ndelete msg.attachments;\ndelete msg._msgid;\n\n// Assegna il nuovo payload al messaggio\nmsg.topic = nuovoTopic; // Aggiorna il topic senza il primo valore\nmsg.payload = valori;\n\n// Restituisci il messaggio per l'elaborazione successiva\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 780,
        "wires": [
            [
                "2823b76324396119"
            ]
        ]
    },
    {
        "id": "992f38be0dcb86f2",
        "type": "e-mail in",
        "z": "3efe85d54df4051a",
        "name": "Rimozione risposta",
        "protocol": "IMAP",
        "server": "imap.gmail.com",
        "useSSL": true,
        "autotls": "never",
        "port": "993",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "box": "INBOX",
        "disposition": "Read",
        "criteria": "UNSEEN",
        "repeat": "10",
        "fetch": "trigger",
        "inputs": 1,
        "x": 1030,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "2823b76324396119",
        "type": "GSheet",
        "z": "3efe85d54df4051a",
        "creds": "25f19bdc3050b475",
        "method": "append",
        "action": "",
        "sheet": "1pE38j_rpq_xZByxyXqmWQfcIlOvFVYJRNQyRlBVDUbs",
        "cells": "Storico!A:A",
        "flatten": false,
        "name": "Aggiornamento",
        "x": 820,
        "y": 780,
        "wires": [
            [
                "992f38be0dcb86f2"
            ]
        ]
    },
    {
        "id": "dfe4cb0fb6f5d867",
        "type": "function",
        "z": "3efe85d54df4051a",
        "name": "Query",
        "func": "// Array degli ID forniti nel payload\nvar ids = msg.ID;\n\n// Costruisci la parte della query SQL per l'IN statement usando gli ID forniti\nvar inStatement = ids.map(function (id) {\n    return \"'\" + id.trim() + \"'\"; // Aggiungi apici e rimuovi spazi vuoti intorno a ciascun ID\n}).join(\",\");\n\n// Costruisci la query SQL per selezionare i valori dalla colonna \"Costruzione\" e \"ID\"\nvar query = \"SELECT ID, Costruzione FROM manutenzione_esterna_mezzi_di_sollevamento WHERE ID IN (\" + inStatement + \")\";\n\n// Assegna la query al msg.topic\nmsg.topic = query;\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "13f22377c358eb8c",
        "type": "function",
        "z": "3efe85d54df4051a",
        "name": "Scrematura Dati",
        "func": "// Rimuovi il valore prima della prima virgola da msg.topic\nvar topics = msg.topic.split(\",\").slice(1);\n\n// Ritorna l'array ID\nreturn { ID: topics };\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 860,
        "wires": [
            [
                "dfe4cb0fb6f5d867"
            ]
        ]
    },
    {
        "id": "b1356c85f98cbbc8",
        "type": "function",
        "z": "3efe85d54df4051a",
        "name": "function 1",
        "func": "// Inizializza un set per tracciare gli ID unici\nif (global.get('uniqueIDs') === undefined) {\n    global.set('uniqueIDs', new Set());\n}\n\n// Ottieni il set degli ID unici\nvar uniqueIDs = global.get('uniqueIDs');\n\n// Ottieni la data odierna\nvar today = new Date();\nvar formattedDate = today.toISOString().split('T')[0]; // Formatta la data come yyyy-mm-dd\n\n// Costruisci la query SQL per l'inserimento dei valori\nvar query = \"INSERT INTO manutenzione_esterna_mezzi_di_sollevamento (ID, Costruzione, Ultima) VALUES \";\n\n// Aggiungi solo gli ID unici alla query\nmsg.payload.forEach(function (item, index) {\n    // Aggiorna l'ID se è già presente nel set degli ID unici\n    var updatedID = item.ID;\n    while (uniqueIDs.has(updatedID)) {\n        updatedID += 1;\n    }\n    // Aggiungi l'ID aggiornato al set degli ID unici\n    uniqueIDs.add(updatedID);\n    // Aggiungi i valori alla query\n    query += \"(\" + updatedID + \", \" + item.Costruzione + \", '\" + formattedDate + \"')\";\n    if (index < msg.payload.length - 1) {\n        query += \", \"; // Aggiungi una virgola se non è l'ultimo elemento\n    }\n});\n\n// Assegna il set degli ID unici alla variabile globale\nglobal.set('uniqueIDs', uniqueIDs);\n\n// Assegna la query al msg.topic\nmsg.topic = query;\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "1206b530c9294eb8",
        "type": "inject",
        "z": "3efe85d54df4051a",
        "name": "Avvio",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * 1",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "087983e3a9315f90",
        "type": "function",
        "z": "3efe85d54df4051a",
        "name": "Case",
        "func": "// Verifica se gli array non sono vuoti\nvar lontaneNonVuote = msg.payload.Lontane && msg.payload.Lontane.length > 0;\nvar prossimeNonVuote = msg.payload.Prossime && msg.payload.Prossime.length > 0;\nvar scaduteNonVuote = msg.payload.Scadute && msg.payload.Scadute.length > 0;\n\n// Inizializza la variabile Case\nvar Case;\n\n// Definisci il nuovo payload in base ai raggruppamenti e al controllo finale\nvar nuovoPayload;\nif (prossimeNonVuote && lontaneNonVuote && scaduteNonVuote) {\n    Case = 0;\n    nuovoPayload = {\n        Lontane: msg.payload.Lontane,\n        Prossime: msg.payload.Prossime,\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else if (prossimeNonVuote && lontaneNonVuote) {\n    Case = 1;\n    nuovoPayload = {\n        Lontane: msg.payload.Lontane,\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (prossimeNonVuote && scaduteNonVuote) {\n    Case = 2;\n    nuovoPayload = {\n        Scadute: msg.payload.Scadute,\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (scaduteNonVuote && lontaneNonVuote) {\n    Case = 3;\n    nuovoPayload = {\n        Lontane: msg.payload.Lontane,\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else if (lontaneNonVuote) {\n    Case = 4;\n    delete msg.payload.Prossime;\n    nuovoPayload = {\n        Lontane: msg.payload.Lontane,\n        Case: Case\n    };\n} else if (prossimeNonVuote) {\n    Case = 5;\n    delete msg.payload.Lontane;\n    nuovoPayload = {\n        Prossime: msg.payload.Prossime,\n        Case: Case\n    };\n} else if (scaduteNonVuote) {\n    Case = 6;\n    nuovoPayload = {\n        Scadute: msg.payload.Scadute,\n        Case: Case\n    };\n} else {\n    Case = 100; // Imposta Case a 100 quando tutti gli array sono vuoti\n    nuovoPayload = {\n        Case: Case\n    };\n}\n\n// Ritorna il nuovo payload\nreturn { payload: nuovoPayload };\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 460,
        "wires": [
            [
                "556332f55e707505"
            ]
        ]
    },
    {
        "id": "8b1a15c561d9313f",
        "type": "function",
        "z": "3efe85d54df4051a",
        "name": "Scrematura",
        "func": "// Ottieni la data odierna\nvar today = new Date();\n\n// Inizializza gli array per i diversi raggruppamenti\nvar lontane = [];\nvar prossime = [];\nvar scadute = [];\n\n// Itera attraverso ogni voce nell'array\nmsg.payload.forEach(function (item) {\n    // Converti la stringa \"Ultima\" in un oggetto Date\n    var ultimaDate = new Date(item.Ultima);\n\n    // Calcola l'età della macchina in anni\n    var todayYear = today.getFullYear();\n    var costruzioneYear = new Date(item.Costruzione).getFullYear();\n    var age = todayYear - costruzioneYear;\n\n    // Calcola la periodicità in base all'età della macchina\n    var periodicità = age > 10 ? 365 : 730;\n\n    // Calcola la data di scadenza sommando la \"Ultima\" e la periodicità in giorni\n    var scadenzaDate = new Date(ultimaDate);\n    scadenzaDate.setDate(scadenzaDate.getDate() + periodicità);\n\n    // Calcola il numero di giorni mancanti alla data di scadenza\n    var diffTime = scadenzaDate.getTime() - today.getTime();\n    var diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n    // Aggiorna l'elemento dell'array\n    item.Scadenza = scadenzaDate.toISOString().slice(0, 10); // Formatta la data di scadenza come 'yyyy-mm-dd'\n    item.Giorni = diffDays;\n    delete item.Periodicità;\n    delete item.Costruzione;\n\n    // Verifica il valore di Giorni e aggiungi l'elemento al relativo array\n    if (diffDays > 60) {\n        lontane.push(item);\n    } else if (diffDays < 0) {\n        scadute.push(item);\n    } else {\n        prossime.push(item);\n    }\n});\n\n// Costruisci il payload finale\nvar payloadFinale = {};\nif (lontane.length > 0) {\n    payloadFinale.Lontane = lontane;\n}\nif (prossime.length > 0) {\n    payloadFinale.Prossime = prossime;\n}\nif (scadute.length > 0) {\n    payloadFinale.Scadute = scadute;\n}\n\n// Ritorna il messaggio con il payload finale\nreturn { payload: payloadFinale };\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 460,
        "wires": [
            [
                "087983e3a9315f90"
            ]
        ]
    },
    {
        "id": "8c5b4e9c61b08f2d",
        "type": "switch",
        "z": "3efe85d54df4051a",
        "name": "",
        "property": "payload.Case",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 890,
        "y": 460,
        "wires": [
            [
                "ce649a5957ca99a5"
            ],
            [
                "ec1fb6e67365463a"
            ],
            [
                "4486443ee56a9f42"
            ],
            [
                "2c99a4fb7f32e729"
            ],
            [
                "5091e5b7d46d0575"
            ],
            [
                "56116dd4ccaac457"
            ],
            [
                "0da0298230a1f1cc"
            ]
        ]
    },
    {
        "id": "556332f55e707505",
        "type": "switch",
        "z": "3efe85d54df4051a",
        "name": "Filtro casi",
        "property": "payload.Case",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "0",
                "vt": "num",
                "v2": "6",
                "v2t": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 1,
        "x": 760,
        "y": 460,
        "wires": [
            [
                "8c5b4e9c61b08f2d"
            ]
        ]
    },
    {
        "id": "56116dd4ccaac457",
        "type": "function",
        "z": "3efe85d54df4051a",
        "name": "tab Prossime",
        "func": "// Funzione per creare una tabella HTML con rientro dalle celle\nfunction createTable(data, tableName) {\n    var tableHTML = '<h2>' + tableName + '</h2><table border=\"1\" style=\"border-collapse: collapse;\"><tr><th style=\"padding: 8px;\">ID</th><th style=\"padding: 8px;\">Ultima</th><th style=\"padding: 8px;\">Scadenza</th><th style=\"padding: 8px;\">Giorni</th></tr>';\n    data.forEach(function (item) {\n        tableHTML += '<tr>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.ID + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Ultima + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Scadenza + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Giorni + '</td>';\n        tableHTML += '</tr>';\n    });\n    tableHTML += '</table>';\n    return tableHTML;\n}\n\n// Estrai le informazioni per la tabella \"Prossime\" dal payload\nvar prossime = msg.payload.Prossime || [];\n\n// Crea la tabella HTML per gli elementi \"Prossime\"\nvar prossimeTableHTML = createTable(prossime, 'Prossime');\n\n// Aggiungi l'oggetto del messaggio\nmsg.topic = \"Manutenzione Esterna Apparecchi A Pressione\";\n\n// Ritorna il corpo dell'email con la tabella \"Prossime\"\nreturn { payload: prossimeTableHTML, topic: msg.topic };\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 540,
        "wires": [
            [
                "4384202d44b42144"
            ]
        ]
    },
    {
        "id": "5091e5b7d46d0575",
        "type": "function",
        "z": "3efe85d54df4051a",
        "name": "tab Lontane",
        "func": "// Funzione per creare una tabella HTML con rientro dalle celle\nfunction createTable(data, tableName) {\n    var tableHTML = '<h2>' + tableName + '</h2><table border=\"1\" style=\"border-collapse: collapse;\"><tr><th style=\"padding: 8px;\">ID</th><th style=\"padding: 8px;\">Ultima</th><th style=\"padding: 8px;\">Scadenza</th><th style=\"padding: 8px;\">Giorni</th></tr>';\n    data.forEach(function (item) {\n        tableHTML += '<tr>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.ID + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Ultima + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Scadenza + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Giorni + '</td>';\n        tableHTML += '</tr>';\n    });\n    tableHTML += '</table>';\n    return tableHTML;\n}\n\n// Estrai le informazioni per la tabella \"Lontane\" dal payload\nvar lontane = msg.payload.Lontane || [];\n\n// Crea la tabella HTML per gli elementi \"Lontane\"\nvar lontaneTableHTML = createTable(lontane, 'Lontane');\n\n// Aggiungi l'oggetto del messaggio\nmsg.topic = \"Manutenzione Esterna Apparecchi A Pressione\";\n\n// Ritorna il corpo dell'email con la tabella \"Lontane\"\nreturn { payload: lontaneTableHTML, topic: msg.topic };\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 500,
        "wires": [
            [
                "4384202d44b42144"
            ]
        ]
    },
    {
        "id": "ec1fb6e67365463a",
        "type": "function",
        "z": "3efe85d54df4051a",
        "name": "tab Prossime-Lontane",
        "func": "// Funzione per creare una tabella HTML con rientro dalle celle\nfunction createTable(data, tableName) {\n    var tableHTML = '<h2>' + tableName + '</h2><table border=\"1\" style=\"border-collapse: collapse;\"><tr><th style=\"padding: 8px;\">ID</th><th style=\"padding: 8px;\">Ultima</th><th style=\"padding: 8px;\">Scadenza</th><th style=\"padding: 8px;\">Giorni</th></tr>';\n    data.forEach(function (item) {\n        tableHTML += '<tr>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.ID + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Ultima + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Scadenza + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Giorni + '</td>';\n        tableHTML += '</tr>';\n    });\n    tableHTML += '</table>';\n    return tableHTML;\n}\n\n// Estrai le informazioni per le tabelle \"Prossime\" e \"Lontane\" dal payload\nvar prossime = msg.payload.Prossime || [];\nvar lontane = msg.payload.Lontane || [];\n\n// Crea le tabelle HTML\nvar prossimeTableHTML = createTable(prossime, 'Prossime');\nvar lontaneTableHTML = createTable(lontane, 'Lontane');\n\n// Costruisci il corpo dell'email\nvar emailBody = prossimeTableHTML + lontaneTableHTML;\n\n// Aggiungi l'oggetto del messaggio\nmsg.topic = \"Manutenzione Esterna Apparecchi A Pressione\";\n\n// Ritorna il corpo dell'email e l'oggetto del messaggio\nreturn { payload: emailBody, topic: msg.topic };\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 380,
        "wires": [
            [
                "4384202d44b42144"
            ]
        ]
    },
    {
        "id": "0da0298230a1f1cc",
        "type": "function",
        "z": "3efe85d54df4051a",
        "name": "tab Scadute",
        "func": "// Funzione per creare una tabella HTML con rientro dalle celle\nfunction createTable(data, tableName) {\n    var tableHTML = '<h2>' + tableName + '</h2><table border=\"1\" style=\"border-collapse: collapse;\"><tr><th style=\"padding: 8px;\">ID</th><th style=\"padding: 8px;\">Ultima</th><th style=\"padding: 8px;\">Scadenza</th><th style=\"padding: 8px;\">Giorni</th></tr>';\n    data.forEach(function (item) {\n        tableHTML += '<tr>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.ID + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Ultima + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Scadenza + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Giorni + '</td>';\n        tableHTML += '</tr>';\n    });\n    tableHTML += '</table>';\n    return tableHTML;\n}\n\n// Estrai le informazioni per la tabella \"Scadute\" dal payload\nvar scadute = msg.payload.Scadute || [];\n\n// Crea la tabella HTML per gli elementi \"Scadute\"\nvar scaduteTableHTML = createTable(scadute, 'Scadute');\n\n// Aggiungi l'oggetto del messaggio\nmsg.topic = \"Manutenzione Esterna Apparecchi A Pressione\";\n\n// Ritorna il corpo dell'email con la tabella \"Scadute\"\nreturn { payload: scaduteTableHTML, topic: msg.topic };\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 580,
        "wires": [
            [
                "4384202d44b42144"
            ]
        ]
    },
    {
        "id": "2c99a4fb7f32e729",
        "type": "function",
        "z": "3efe85d54df4051a",
        "name": "tab Lontane-Scadute",
        "func": "// Funzione per creare una tabella HTML con rientro dalle celle\nfunction createTable(data, tableName) {\n    var tableHTML = '<h2>' + tableName + '</h2><table border=\"1\" style=\"border-collapse: collapse;\"><tr><th style=\"padding: 8px;\">ID</th><th style=\"padding: 8px;\">Ultima</th><th style=\"padding: 8px;\">Scadenza</th><th style=\"padding: 8px;\">Giorni</th></tr>';\n    data.forEach(function (item) {\n        tableHTML += '<tr>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.ID + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Ultima + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Scadenza + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Giorni + '</td>';\n        tableHTML += '</tr>';\n    });\n    tableHTML += '</table>';\n    return tableHTML;\n}\n\n// Estrai le informazioni per le tabelle \"Lontane\" e \"Scadute\" dal payload\nvar lontane = msg.payload.Lontane || [];\nvar scadute = msg.payload.Scadute || [];\n\n// Crea le tabelle HTML\nvar lontaneTableHTML = createTable(lontane, 'Lontane');\nvar scaduteTableHTML = createTable(scadute, 'Scadute');\n\n// Costruisci il corpo dell'email\nvar emailBody = lontaneTableHTML + scaduteTableHTML;\n\n// Aggiungi l'oggetto del messaggio\nmsg.topic = \"Manutenzione Esterna Apparecchi A Pressione\";\n\n// Ritorna il corpo dell'email e l'oggetto del messaggio\nreturn { payload: emailBody, topic: msg.topic };\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 460,
        "wires": [
            [
                "4384202d44b42144"
            ]
        ]
    },
    {
        "id": "4486443ee56a9f42",
        "type": "function",
        "z": "3efe85d54df4051a",
        "name": "tab Prossime-Scadute",
        "func": "// Funzione per creare una tabella HTML con rientro dalle celle\nfunction createTable(data, tableName) {\n    var tableHTML = '<h2>' + tableName + '</h2><table border=\"1\" style=\"border-collapse: collapse;\"><tr><th style=\"padding: 8px;\">ID</th><th style=\"padding: 8px;\">Ultima</th><th style=\"padding: 8px;\">Scadenza</th><th style=\"padding: 8px;\">Giorni</th></tr>';\n    data.forEach(function (item) {\n        tableHTML += '<tr>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.ID + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Ultima + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Scadenza + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Giorni + '</td>';\n        tableHTML += '</tr>';\n    });\n    tableHTML += '</table>';\n    return tableHTML;\n}\n\n// Estrai le informazioni per le tabelle \"Prossime\" e \"Scadute\" dal payload\nvar prossime = msg.payload.Prossime || [];\nvar scadute = msg.payload.Scadute || [];\n\n// Crea le tabelle HTML\nvar prossimeTableHTML = createTable(prossime, 'Prossime');\nvar scaduteTableHTML = createTable(scadute, 'Scadute');\n\n// Costruisci il corpo dell'email\nvar emailBody = prossimeTableHTML + scaduteTableHTML;\n\n// Aggiungi l'oggetto del messaggio\nmsg.topic = \"Manutenzione Esterna Apparecchi A Pressione\";\n\n// Ritorna il corpo dell'email e l'oggetto del messaggio\nreturn { payload: emailBody, topic: msg.topic };\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 420,
        "wires": [
            [
                "4384202d44b42144"
            ]
        ]
    },
    {
        "id": "ce649a5957ca99a5",
        "type": "function",
        "z": "3efe85d54df4051a",
        "name": "Tab Lont-Pros-Scad",
        "func": "// Funzione per creare una tabella HTML con rientro dalle celle\nfunction createTable(data, tableName) {\n    var tableHTML = '<h2>' + tableName + '</h2><table border=\"1\" style=\"border-collapse: collapse;\"><tr><th style=\"padding: 8px;\">ID</th><th style=\"padding: 8px;\">Ultima</th><th style=\"padding: 8px;\">Scadenza</th><th style=\"padding: 8px;\">Giorni</th></tr>';\n    data.forEach(function (item) {\n        tableHTML += '<tr>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.ID + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Ultima + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Scadenza + '</td>';\n        tableHTML += '<td style=\"padding: 8px;\">' + item.Giorni + '</td>';\n        tableHTML += '</tr>';\n    });\n    tableHTML += '</table>';\n    return tableHTML;\n}\n\n// Estrai le informazioni per le tabelle \"Prossime\", \"Scadute\" e \"Lontane\" dal payload\nvar prossime = msg.payload.Prossime || [];\nvar scadute = msg.payload.Scadute || [];\nvar lontane = msg.payload.Lontane || [];\n\n// Crea le tabelle HTML\nvar prossimeTableHTML = createTable(prossime, 'Prossime');\nvar scaduteTableHTML = createTable(scadute, 'Scadute');\nvar lontaneTableHTML = createTable(lontane, 'Lontane');\n\n// Costruisci il corpo dell'email\nvar emailBody = prossimeTableHTML + scaduteTableHTML + lontaneTableHTML;\n\n// Aggiungi l'oggetto del messaggio\nmsg.topic = \"Manutenzione Esterna Apparecchi A Pressione\";\n\n// Ritorna il corpo dell'email e l'oggetto del messaggio\nreturn { payload: emailBody, topic: msg.topic };\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 340,
        "wires": [
            [
                "4384202d44b42144"
            ]
        ]
    },
    {
        "id": "4384202d44b42144",
        "type": "e-mail",
        "z": "3efe85d54df4051a",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "gxausa.studenti@itslombardiameccatronica.it",
        "dname": "Apparecchi A Pressione",
        "x": 1430,
        "y": 460,
        "wires": []
    },
    {
        "id": "d51cc64637548b9d",
        "type": "function",
        "z": "3efe85d54df4051a",
        "name": "Query",
        "func": "// Costruisci la query SQL\nvar query = \"SELECT ID, DATE_FORMAT(Ultima, '%Y-%m-%d') AS Ultima, Costruzione FROM manutenzione_esterna_apparecchi_a_pressione\";\n\n// Assegna la query al msg.topic\nmsg.topic = query;\n\n// Ritorna il messaggio\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 460,
        "wires": [
            []
        ]
    }
]